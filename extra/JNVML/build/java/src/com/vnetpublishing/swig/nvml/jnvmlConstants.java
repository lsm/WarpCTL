/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.vnetpublishing.swig.nvml;

public interface jnvmlConstants {
  public final static int NVML_API_VERSION = jnvmlJNI.NVML_API_VERSION_get();
  public final static String NVML_API_VERSION_STR = jnvmlJNI.NVML_API_VERSION_STR_get();
  public final static int NVML_VALUE_NOT_AVAILABLE = jnvmlJNI.NVML_VALUE_NOT_AVAILABLE_get();
  public final static int NVML_DEVICE_PCI_BUS_ID_BUFFER_SIZE = jnvmlJNI.NVML_DEVICE_PCI_BUS_ID_BUFFER_SIZE_get();
  public final static int NVML_MAX_PHYSICAL_BRIDGE = jnvmlJNI.NVML_MAX_PHYSICAL_BRIDGE_get();
  public final static int nvmlFlagDefault = jnvmlJNI.nvmlFlagDefault_get();
  public final static int nvmlFlagForce = jnvmlJNI.nvmlFlagForce_get();
  public final static long nvmlEventTypeSingleBitEccError = jnvmlJNI.nvmlEventTypeSingleBitEccError_get();
  public final static long nvmlEventTypeDoubleBitEccError = jnvmlJNI.nvmlEventTypeDoubleBitEccError_get();
  public final static long nvmlEventTypePState = jnvmlJNI.nvmlEventTypePState_get();
  public final static long nvmlEventTypeXidCriticalError = jnvmlJNI.nvmlEventTypeXidCriticalError_get();
  public final static long nvmlEventTypeClock = jnvmlJNI.nvmlEventTypeClock_get();
  public final static long nvmlEventTypeNone = jnvmlJNI.nvmlEventTypeNone_get();
  public final static long nvmlEventTypeAll = jnvmlJNI.nvmlEventTypeAll_get();
  public final static long nvmlClocksThrottleReasonGpuIdle = jnvmlJNI.nvmlClocksThrottleReasonGpuIdle_get();
  public final static long nvmlClocksThrottleReasonApplicationsClocksSetting = jnvmlJNI.nvmlClocksThrottleReasonApplicationsClocksSetting_get();
  public final static long nvmlClocksThrottleReasonUserDefinedClocks = jnvmlJNI.nvmlClocksThrottleReasonUserDefinedClocks_get();
  public final static long nvmlClocksThrottleReasonSwPowerCap = jnvmlJNI.nvmlClocksThrottleReasonSwPowerCap_get();
  public final static long nvmlClocksThrottleReasonHwSlowdown = jnvmlJNI.nvmlClocksThrottleReasonHwSlowdown_get();
  public final static long nvmlClocksThrottleReasonUnknown = jnvmlJNI.nvmlClocksThrottleReasonUnknown_get();
  public final static long nvmlClocksThrottleReasonNone = jnvmlJNI.nvmlClocksThrottleReasonNone_get();
  public final static long nvmlClocksThrottleReasonAll = jnvmlJNI.nvmlClocksThrottleReasonAll_get();
  public final static int NVML_DEVICE_INFOROM_VERSION_BUFFER_SIZE = jnvmlJNI.NVML_DEVICE_INFOROM_VERSION_BUFFER_SIZE_get();
  public final static int NVML_DEVICE_UUID_BUFFER_SIZE = jnvmlJNI.NVML_DEVICE_UUID_BUFFER_SIZE_get();
  public final static int NVML_SYSTEM_DRIVER_VERSION_BUFFER_SIZE = jnvmlJNI.NVML_SYSTEM_DRIVER_VERSION_BUFFER_SIZE_get();
  public final static int NVML_SYSTEM_NVML_VERSION_BUFFER_SIZE = jnvmlJNI.NVML_SYSTEM_NVML_VERSION_BUFFER_SIZE_get();
  public final static int NVML_DEVICE_NAME_BUFFER_SIZE = jnvmlJNI.NVML_DEVICE_NAME_BUFFER_SIZE_get();
  public final static int NVML_DEVICE_SERIAL_BUFFER_SIZE = jnvmlJNI.NVML_DEVICE_SERIAL_BUFFER_SIZE_get();
  public final static int NVML_DEVICE_VBIOS_VERSION_BUFFER_SIZE = jnvmlJNI.NVML_DEVICE_VBIOS_VERSION_BUFFER_SIZE_get();
}
