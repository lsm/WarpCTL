/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.vnetpublishing.swig.nvapi;

public class NV_I2C_INFO_V2 {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected NV_I2C_INFO_V2(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(NV_I2C_INFO_V2 obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jnvapiJNI.delete_NV_I2C_INFO_V2(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setVersion(long value) {
    jnvapiJNI.NV_I2C_INFO_V2_version_set(swigCPtr, this, value);
  }

  public long getVersion() {
    return jnvapiJNI.NV_I2C_INFO_V2_version_get(swigCPtr, this);
  }

  public void setDisplayMask(long value) {
    jnvapiJNI.NV_I2C_INFO_V2_displayMask_set(swigCPtr, this, value);
  }

  public long getDisplayMask() {
    return jnvapiJNI.NV_I2C_INFO_V2_displayMask_get(swigCPtr, this);
  }

  public void setBIsDDCPort(short value) {
    jnvapiJNI.NV_I2C_INFO_V2_bIsDDCPort_set(swigCPtr, this, value);
  }

  public short getBIsDDCPort() {
    return jnvapiJNI.NV_I2C_INFO_V2_bIsDDCPort_get(swigCPtr, this);
  }

  public void setI2cDevAddress(short value) {
    jnvapiJNI.NV_I2C_INFO_V2_i2cDevAddress_set(swigCPtr, this, value);
  }

  public short getI2cDevAddress() {
    return jnvapiJNI.NV_I2C_INFO_V2_i2cDevAddress_get(swigCPtr, this);
  }

  public void setPbI2cRegAddress(SWIGTYPE_p_unsigned_char value) {
    jnvapiJNI.NV_I2C_INFO_V2_pbI2cRegAddress_set(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_char getPbI2cRegAddress() {
    long cPtr = jnvapiJNI.NV_I2C_INFO_V2_pbI2cRegAddress_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public void setRegAddrSize(long value) {
    jnvapiJNI.NV_I2C_INFO_V2_regAddrSize_set(swigCPtr, this, value);
  }

  public long getRegAddrSize() {
    return jnvapiJNI.NV_I2C_INFO_V2_regAddrSize_get(swigCPtr, this);
  }

  public void setPbData(SWIGTYPE_p_unsigned_char value) {
    jnvapiJNI.NV_I2C_INFO_V2_pbData_set(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_char getPbData() {
    long cPtr = jnvapiJNI.NV_I2C_INFO_V2_pbData_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public void setCbSize(long value) {
    jnvapiJNI.NV_I2C_INFO_V2_cbSize_set(swigCPtr, this, value);
  }

  public long getCbSize() {
    return jnvapiJNI.NV_I2C_INFO_V2_cbSize_get(swigCPtr, this);
  }

  public void setI2cSpeed(long value) {
    jnvapiJNI.NV_I2C_INFO_V2_i2cSpeed_set(swigCPtr, this, value);
  }

  public long getI2cSpeed() {
    return jnvapiJNI.NV_I2C_INFO_V2_i2cSpeed_get(swigCPtr, this);
  }

  public void setI2cSpeedKhz(NV_I2C_SPEED value) {
    jnvapiJNI.NV_I2C_INFO_V2_i2cSpeedKhz_set(swigCPtr, this, value.swigValue());
  }

  public NV_I2C_SPEED getI2cSpeedKhz() {
    return NV_I2C_SPEED.swigToEnum(jnvapiJNI.NV_I2C_INFO_V2_i2cSpeedKhz_get(swigCPtr, this));
  }

  public NV_I2C_INFO_V2() {
    this(jnvapiJNI.new_NV_I2C_INFO_V2(), true);
  }

}
