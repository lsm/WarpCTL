/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.vnetpublishing.swig.nvapi;

public class jnvapiJNI {
  public final static native void NV_RECT_left_set(long jarg1, NV_RECT jarg1_, long jarg2);
  public final static native long NV_RECT_left_get(long jarg1, NV_RECT jarg1_);
  public final static native void NV_RECT_top_set(long jarg1, NV_RECT jarg1_, long jarg2);
  public final static native long NV_RECT_top_get(long jarg1, NV_RECT jarg1_);
  public final static native void NV_RECT_right_set(long jarg1, NV_RECT jarg1_, long jarg2);
  public final static native long NV_RECT_right_get(long jarg1, NV_RECT jarg1_);
  public final static native void NV_RECT_bottom_set(long jarg1, NV_RECT jarg1_, long jarg2);
  public final static native long NV_RECT_bottom_get(long jarg1, NV_RECT jarg1_);
  public final static native long new_NV_RECT();
  public final static native void delete_NV_RECT(long jarg1);
  public final static native void NvDisplayHandle___unused_set(long jarg1, NvDisplayHandle__ jarg1_, int jarg2);
  public final static native int NvDisplayHandle___unused_get(long jarg1, NvDisplayHandle__ jarg1_);
  public final static native long new_NvDisplayHandle__();
  public final static native void delete_NvDisplayHandle__(long jarg1);
  public final static native void NvMonitorHandle___unused_set(long jarg1, NvMonitorHandle__ jarg1_, int jarg2);
  public final static native int NvMonitorHandle___unused_get(long jarg1, NvMonitorHandle__ jarg1_);
  public final static native long new_NvMonitorHandle__();
  public final static native void delete_NvMonitorHandle__(long jarg1);
  public final static native void NvUnAttachedDisplayHandle___unused_set(long jarg1, NvUnAttachedDisplayHandle__ jarg1_, int jarg2);
  public final static native int NvUnAttachedDisplayHandle___unused_get(long jarg1, NvUnAttachedDisplayHandle__ jarg1_);
  public final static native long new_NvUnAttachedDisplayHandle__();
  public final static native void delete_NvUnAttachedDisplayHandle__(long jarg1);
  public final static native void NvLogicalGpuHandle___unused_set(long jarg1, NvLogicalGpuHandle__ jarg1_, int jarg2);
  public final static native int NvLogicalGpuHandle___unused_get(long jarg1, NvLogicalGpuHandle__ jarg1_);
  public final static native long new_NvLogicalGpuHandle__();
  public final static native void delete_NvLogicalGpuHandle__(long jarg1);
  public final static native void NvPhysicalGpuHandle___unused_set(long jarg1, NvPhysicalGpuHandle__ jarg1_, int jarg2);
  public final static native int NvPhysicalGpuHandle___unused_get(long jarg1, NvPhysicalGpuHandle__ jarg1_);
  public final static native long new_NvPhysicalGpuHandle__();
  public final static native void delete_NvPhysicalGpuHandle__(long jarg1);
  public final static native void NvEventHandle___unused_set(long jarg1, NvEventHandle__ jarg1_, int jarg2);
  public final static native int NvEventHandle___unused_get(long jarg1, NvEventHandle__ jarg1_);
  public final static native long new_NvEventHandle__();
  public final static native void delete_NvEventHandle__(long jarg1);
  public final static native void NvVisualComputingDeviceHandle___unused_set(long jarg1, NvVisualComputingDeviceHandle__ jarg1_, int jarg2);
  public final static native int NvVisualComputingDeviceHandle___unused_get(long jarg1, NvVisualComputingDeviceHandle__ jarg1_);
  public final static native long new_NvVisualComputingDeviceHandle__();
  public final static native void delete_NvVisualComputingDeviceHandle__(long jarg1);
  public final static native void NvHICHandle___unused_set(long jarg1, NvHICHandle__ jarg1_, int jarg2);
  public final static native int NvHICHandle___unused_get(long jarg1, NvHICHandle__ jarg1_);
  public final static native long new_NvHICHandle__();
  public final static native void delete_NvHICHandle__(long jarg1);
  public final static native void NvGSyncDeviceHandle___unused_set(long jarg1, NvGSyncDeviceHandle__ jarg1_, int jarg2);
  public final static native int NvGSyncDeviceHandle___unused_get(long jarg1, NvGSyncDeviceHandle__ jarg1_);
  public final static native long new_NvGSyncDeviceHandle__();
  public final static native void delete_NvGSyncDeviceHandle__(long jarg1);
  public final static native void NvVioHandle___unused_set(long jarg1, NvVioHandle__ jarg1_, int jarg2);
  public final static native int NvVioHandle___unused_get(long jarg1, NvVioHandle__ jarg1_);
  public final static native long new_NvVioHandle__();
  public final static native void delete_NvVioHandle__(long jarg1);
  public final static native void NvTransitionHandle___unused_set(long jarg1, NvTransitionHandle__ jarg1_, int jarg2);
  public final static native int NvTransitionHandle___unused_get(long jarg1, NvTransitionHandle__ jarg1_);
  public final static native long new_NvTransitionHandle__();
  public final static native void delete_NvTransitionHandle__(long jarg1);
  public final static native void NvAudioHandle___unused_set(long jarg1, NvAudioHandle__ jarg1_, int jarg2);
  public final static native int NvAudioHandle___unused_get(long jarg1, NvAudioHandle__ jarg1_);
  public final static native long new_NvAudioHandle__();
  public final static native void delete_NvAudioHandle__(long jarg1);
  public final static native void Nv3DVPContextHandle___unused_set(long jarg1, Nv3DVPContextHandle__ jarg1_, int jarg2);
  public final static native int Nv3DVPContextHandle___unused_get(long jarg1, Nv3DVPContextHandle__ jarg1_);
  public final static native long new_Nv3DVPContextHandle__();
  public final static native void delete_Nv3DVPContextHandle__(long jarg1);
  public final static native void Nv3DVPTransceiverHandle___unused_set(long jarg1, Nv3DVPTransceiverHandle__ jarg1_, int jarg2);
  public final static native int Nv3DVPTransceiverHandle___unused_get(long jarg1, Nv3DVPTransceiverHandle__ jarg1_);
  public final static native long new_Nv3DVPTransceiverHandle__();
  public final static native void delete_Nv3DVPTransceiverHandle__(long jarg1);
  public final static native void Nv3DVPGlassesHandle___unused_set(long jarg1, Nv3DVPGlassesHandle__ jarg1_, int jarg2);
  public final static native int Nv3DVPGlassesHandle___unused_get(long jarg1, Nv3DVPGlassesHandle__ jarg1_);
  public final static native long new_Nv3DVPGlassesHandle__();
  public final static native void delete_Nv3DVPGlassesHandle__(long jarg1);
  public final static native void NvSourceHandle___unused_set(long jarg1, NvSourceHandle__ jarg1_, int jarg2);
  public final static native int NvSourceHandle___unused_get(long jarg1, NvSourceHandle__ jarg1_);
  public final static native long new_NvSourceHandle__();
  public final static native void delete_NvSourceHandle__(long jarg1);
  public final static native void NvTargetHandle___unused_set(long jarg1, NvTargetHandle__ jarg1_, int jarg2);
  public final static native int NvTargetHandle___unused_get(long jarg1, NvTargetHandle__ jarg1_);
  public final static native long new_NvTargetHandle__();
  public final static native void delete_NvTargetHandle__(long jarg1);
  public final static native void NVDX_SwapChainHandle___unused_set(long jarg1, NVDX_SwapChainHandle__ jarg1_, int jarg2);
  public final static native int NVDX_SwapChainHandle___unused_get(long jarg1, NVDX_SwapChainHandle__ jarg1_);
  public final static native long new_NVDX_SwapChainHandle__();
  public final static native void delete_NVDX_SwapChainHandle__(long jarg1);
  public final static native long NVDX_SWAPCHAIN_NONE_get();
  public final static native int NVAPI_DEFAULT_HANDLE_get();
  public final static native int NVAPI_GENERIC_STRING_MAX_get();
  public final static native int NVAPI_LONG_STRING_MAX_get();
  public final static native int NVAPI_SHORT_STRING_MAX_get();
  public final static native void NvSBox_sX_set(long jarg1, NvSBox jarg1_, int jarg2);
  public final static native int NvSBox_sX_get(long jarg1, NvSBox jarg1_);
  public final static native void NvSBox_sY_set(long jarg1, NvSBox jarg1_, int jarg2);
  public final static native int NvSBox_sY_get(long jarg1, NvSBox jarg1_);
  public final static native void NvSBox_sWidth_set(long jarg1, NvSBox jarg1_, int jarg2);
  public final static native int NvSBox_sWidth_get(long jarg1, NvSBox jarg1_);
  public final static native void NvSBox_sHeight_set(long jarg1, NvSBox jarg1_, int jarg2);
  public final static native int NvSBox_sHeight_get(long jarg1, NvSBox jarg1_);
  public final static native long new_NvSBox();
  public final static native void delete_NvSBox(long jarg1);
  public final static native void NvGUID_data1_set(long jarg1, NvGUID jarg1_, long jarg2);
  public final static native long NvGUID_data1_get(long jarg1, NvGUID jarg1_);
  public final static native void NvGUID_data2_set(long jarg1, NvGUID jarg1_, int jarg2);
  public final static native int NvGUID_data2_get(long jarg1, NvGUID jarg1_);
  public final static native void NvGUID_data3_set(long jarg1, NvGUID jarg1_, int jarg2);
  public final static native int NvGUID_data3_get(long jarg1, NvGUID jarg1_);
  public final static native void NvGUID_data4_set(long jarg1, NvGUID jarg1_, short[] jarg2);
  public final static native short[] NvGUID_data4_get(long jarg1, NvGUID jarg1_);
  public final static native long new_NvGUID();
  public final static native void delete_NvGUID(long jarg1);
  public final static native int NVAPI_MAX_PHYSICAL_GPUS_get();
  public final static native int NVAPI_MAX_PHYSICAL_BRIDGES_get();
  public final static native int NVAPI_PHYSICAL_GPUS_get();
  public final static native int NVAPI_MAX_LOGICAL_GPUS_get();
  public final static native int NVAPI_MAX_AVAILABLE_GPU_TOPOLOGIES_get();
  public final static native int NVAPI_MAX_AVAILABLE_SLI_GROUPS_get();
  public final static native int NVAPI_MAX_GPU_TOPOLOGIES_get();
  public final static native int NVAPI_MAX_GPU_PER_TOPOLOGY_get();
  public final static native int NVAPI_MAX_DISPLAY_HEADS_get();
  public final static native int NVAPI_ADVANCED_DISPLAY_HEADS_get();
  public final static native int NVAPI_MAX_DISPLAYS_get();
  public final static native int NVAPI_MAX_ACPI_IDS_get();
  public final static native int NVAPI_MAX_VIEW_MODES_get();
  public final static native int NV_MAX_HEADS_get();
  public final static native int NVAPI_MAX_HEADS_PER_GPU_get();
  public final static native int NV_MAX_VID_STREAMS_get();
  public final static native int NV_MAX_VID_PROFILES_get();
  public final static native int NVAPI_SYSTEM_MAX_DISPLAYS_get();
  public final static native int NVAPI_SYSTEM_MAX_HWBCS_get();
  public final static native int NVAPI_SYSTEM_HWBC_INVALID_ID_get();
  public final static native int NVAPI_MAX_AUDIO_DEVICES_get();
  public final static native int NVAPI_OK_get();
  public final static native int NVAPI_ERROR_get();
  public final static native int NVAPI_LIBRARY_NOT_FOUND_get();
  public final static native int NVAPI_NO_IMPLEMENTATION_get();
  public final static native int NVAPI_API_NOT_INITIALIZED_get();
  public final static native int NVAPI_INVALID_ARGUMENT_get();
  public final static native int NVAPI_NVIDIA_DEVICE_NOT_FOUND_get();
  public final static native int NVAPI_END_ENUMERATION_get();
  public final static native int NVAPI_INVALID_HANDLE_get();
  public final static native int NVAPI_INCOMPATIBLE_STRUCT_VERSION_get();
  public final static native int NVAPI_HANDLE_INVALIDATED_get();
  public final static native int NVAPI_OPENGL_CONTEXT_NOT_CURRENT_get();
  public final static native int NVAPI_INVALID_POINTER_get();
  public final static native int NVAPI_NO_GL_EXPERT_get();
  public final static native int NVAPI_INSTRUMENTATION_DISABLED_get();
  public final static native int NVAPI_NO_GL_NSIGHT_get();
  public final static native int NVAPI_EXPECTED_LOGICAL_GPU_HANDLE_get();
  public final static native int NVAPI_EXPECTED_PHYSICAL_GPU_HANDLE_get();
  public final static native int NVAPI_EXPECTED_DISPLAY_HANDLE_get();
  public final static native int NVAPI_INVALID_COMBINATION_get();
  public final static native int NVAPI_NOT_SUPPORTED_get();
  public final static native int NVAPI_PORTID_NOT_FOUND_get();
  public final static native int NVAPI_EXPECTED_UNATTACHED_DISPLAY_HANDLE_get();
  public final static native int NVAPI_INVALID_PERF_LEVEL_get();
  public final static native int NVAPI_DEVICE_BUSY_get();
  public final static native int NVAPI_NV_PERSIST_FILE_NOT_FOUND_get();
  public final static native int NVAPI_PERSIST_DATA_NOT_FOUND_get();
  public final static native int NVAPI_EXPECTED_TV_DISPLAY_get();
  public final static native int NVAPI_EXPECTED_TV_DISPLAY_ON_DCONNECTOR_get();
  public final static native int NVAPI_NO_ACTIVE_SLI_TOPOLOGY_get();
  public final static native int NVAPI_SLI_RENDERING_MODE_NOTALLOWED_get();
  public final static native int NVAPI_EXPECTED_DIGITAL_FLAT_PANEL_get();
  public final static native int NVAPI_ARGUMENT_EXCEED_MAX_SIZE_get();
  public final static native int NVAPI_DEVICE_SWITCHING_NOT_ALLOWED_get();
  public final static native int NVAPI_TESTING_CLOCKS_NOT_SUPPORTED_get();
  public final static native int NVAPI_UNKNOWN_UNDERSCAN_CONFIG_get();
  public final static native int NVAPI_TIMEOUT_RECONFIGURING_GPU_TOPO_get();
  public final static native int NVAPI_DATA_NOT_FOUND_get();
  public final static native int NVAPI_EXPECTED_ANALOG_DISPLAY_get();
  public final static native int NVAPI_NO_VIDLINK_get();
  public final static native int NVAPI_REQUIRES_REBOOT_get();
  public final static native int NVAPI_INVALID_HYBRID_MODE_get();
  public final static native int NVAPI_MIXED_TARGET_TYPES_get();
  public final static native int NVAPI_SYSWOW64_NOT_SUPPORTED_get();
  public final static native int NVAPI_IMPLICIT_SET_GPU_TOPOLOGY_CHANGE_NOT_ALLOWED_get();
  public final static native int NVAPI_REQUEST_USER_TO_CLOSE_NON_MIGRATABLE_APPS_get();
  public final static native int NVAPI_OUT_OF_MEMORY_get();
  public final static native int NVAPI_WAS_STILL_DRAWING_get();
  public final static native int NVAPI_FILE_NOT_FOUND_get();
  public final static native int NVAPI_TOO_MANY_UNIQUE_STATE_OBJECTS_get();
  public final static native int NVAPI_INVALID_CALL_get();
  public final static native int NVAPI_D3D10_1_LIBRARY_NOT_FOUND_get();
  public final static native int NVAPI_FUNCTION_NOT_FOUND_get();
  public final static native int NVAPI_INVALID_USER_PRIVILEGE_get();
  public final static native int NVAPI_EXPECTED_NON_PRIMARY_DISPLAY_HANDLE_get();
  public final static native int NVAPI_EXPECTED_COMPUTE_GPU_HANDLE_get();
  public final static native int NVAPI_STEREO_NOT_INITIALIZED_get();
  public final static native int NVAPI_STEREO_REGISTRY_ACCESS_FAILED_get();
  public final static native int NVAPI_STEREO_REGISTRY_PROFILE_TYPE_NOT_SUPPORTED_get();
  public final static native int NVAPI_STEREO_REGISTRY_VALUE_NOT_SUPPORTED_get();
  public final static native int NVAPI_STEREO_NOT_ENABLED_get();
  public final static native int NVAPI_STEREO_NOT_TURNED_ON_get();
  public final static native int NVAPI_STEREO_INVALID_DEVICE_INTERFACE_get();
  public final static native int NVAPI_STEREO_PARAMETER_OUT_OF_RANGE_get();
  public final static native int NVAPI_STEREO_FRUSTUM_ADJUST_MODE_NOT_SUPPORTED_get();
  public final static native int NVAPI_TOPO_NOT_POSSIBLE_get();
  public final static native int NVAPI_MODE_CHANGE_FAILED_get();
  public final static native int NVAPI_D3D11_LIBRARY_NOT_FOUND_get();
  public final static native int NVAPI_INVALID_ADDRESS_get();
  public final static native int NVAPI_STRING_TOO_SMALL_get();
  public final static native int NVAPI_MATCHING_DEVICE_NOT_FOUND_get();
  public final static native int NVAPI_DRIVER_RUNNING_get();
  public final static native int NVAPI_DRIVER_NOTRUNNING_get();
  public final static native int NVAPI_ERROR_DRIVER_RELOAD_REQUIRED_get();
  public final static native int NVAPI_SET_NOT_ALLOWED_get();
  public final static native int NVAPI_ADVANCED_DISPLAY_TOPOLOGY_REQUIRED_get();
  public final static native int NVAPI_SETTING_NOT_FOUND_get();
  public final static native int NVAPI_SETTING_SIZE_TOO_LARGE_get();
  public final static native int NVAPI_TOO_MANY_SETTINGS_IN_PROFILE_get();
  public final static native int NVAPI_PROFILE_NOT_FOUND_get();
  public final static native int NVAPI_PROFILE_NAME_IN_USE_get();
  public final static native int NVAPI_PROFILE_NAME_EMPTY_get();
  public final static native int NVAPI_EXECUTABLE_NOT_FOUND_get();
  public final static native int NVAPI_EXECUTABLE_ALREADY_IN_USE_get();
  public final static native int NVAPI_DATATYPE_MISMATCH_get();
  public final static native int NVAPI_PROFILE_REMOVED_get();
  public final static native int NVAPI_UNREGISTERED_RESOURCE_get();
  public final static native int NVAPI_ID_OUT_OF_RANGE_get();
  public final static native int NVAPI_DISPLAYCONFIG_VALIDATION_FAILED_get();
  public final static native int NVAPI_DPMST_CHANGED_get();
  public final static native int NVAPI_INSUFFICIENT_BUFFER_get();
  public final static native int NVAPI_ACCESS_DENIED_get();
  public final static native int NVAPI_MOSAIC_NOT_ACTIVE_get();
  public final static native int NVAPI_SHARE_RESOURCE_RELOCATED_get();
  public final static native int NVAPI_REQUEST_USER_TO_DISABLE_DWM_get();
  public final static native int NVAPI_D3D_DEVICE_LOST_get();
  public final static native int NVAPI_INVALID_CONFIGURATION_get();
  public final static native int NVAPI_STEREO_HANDSHAKE_NOT_DONE_get();
  public final static native int NVAPI_EXECUTABLE_PATH_IS_AMBIGUOUS_get();
  public final static native int NVAPI_DEFAULT_STEREO_PROFILE_IS_NOT_DEFINED_get();
  public final static native int NVAPI_DEFAULT_STEREO_PROFILE_DOES_NOT_EXIST_get();
  public final static native int NVAPI_CLUSTER_ALREADY_EXISTS_get();
  public final static native int NVAPI_DPMST_DISPLAY_ID_EXPECTED_get();
  public final static native int NVAPI_INVALID_DISPLAY_ID_get();
  public final static native int NVAPI_STREAM_IS_OUT_OF_SYNC_get();
  public final static native int NVAPI_INCOMPATIBLE_AUDIO_DRIVER_get();
  public final static native int NVAPI_VALUE_ALREADY_SET_get();
  public final static native int NVAPI_TIMEOUT_get();
  public final static native int NVAPI_GPU_WORKSTATION_FEATURE_INCOMPLETE_get();
  public final static native int NVAPI_STEREO_INIT_ACTIVATION_NOT_DONE_get();
  public final static native int NVAPI_SYNC_NOT_ACTIVE_get();
  public final static native int NVAPI_SYNC_MASTER_NOT_FOUND_get();
  public final static native int NVAPI_INVALID_SYNC_TOPOLOGY_get();
  public final static native int NvAPI_SYS_GetDriverAndBranchVersion(long jarg1, String jarg2);
  public final static native void NV_DISPLAY_DRIVER_MEMORY_INFO_V1_version_set(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAY_DRIVER_MEMORY_INFO_V1_version_get(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V1 jarg1_);
  public final static native void NV_DISPLAY_DRIVER_MEMORY_INFO_V1_dedicatedVideoMemory_set(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAY_DRIVER_MEMORY_INFO_V1_dedicatedVideoMemory_get(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V1 jarg1_);
  public final static native void NV_DISPLAY_DRIVER_MEMORY_INFO_V1_availableDedicatedVideoMemory_set(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAY_DRIVER_MEMORY_INFO_V1_availableDedicatedVideoMemory_get(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V1 jarg1_);
  public final static native void NV_DISPLAY_DRIVER_MEMORY_INFO_V1_systemVideoMemory_set(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAY_DRIVER_MEMORY_INFO_V1_systemVideoMemory_get(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V1 jarg1_);
  public final static native void NV_DISPLAY_DRIVER_MEMORY_INFO_V1_sharedSystemMemory_set(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAY_DRIVER_MEMORY_INFO_V1_sharedSystemMemory_get(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V1 jarg1_);
  public final static native long new_NV_DISPLAY_DRIVER_MEMORY_INFO_V1();
  public final static native void delete_NV_DISPLAY_DRIVER_MEMORY_INFO_V1(long jarg1);
  public final static native void NV_DISPLAY_DRIVER_MEMORY_INFO_V2_version_set(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_DISPLAY_DRIVER_MEMORY_INFO_V2_version_get(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V2 jarg1_);
  public final static native void NV_DISPLAY_DRIVER_MEMORY_INFO_V2_dedicatedVideoMemory_set(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_DISPLAY_DRIVER_MEMORY_INFO_V2_dedicatedVideoMemory_get(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V2 jarg1_);
  public final static native void NV_DISPLAY_DRIVER_MEMORY_INFO_V2_availableDedicatedVideoMemory_set(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_DISPLAY_DRIVER_MEMORY_INFO_V2_availableDedicatedVideoMemory_get(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V2 jarg1_);
  public final static native void NV_DISPLAY_DRIVER_MEMORY_INFO_V2_systemVideoMemory_set(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_DISPLAY_DRIVER_MEMORY_INFO_V2_systemVideoMemory_get(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V2 jarg1_);
  public final static native void NV_DISPLAY_DRIVER_MEMORY_INFO_V2_sharedSystemMemory_set(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_DISPLAY_DRIVER_MEMORY_INFO_V2_sharedSystemMemory_get(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V2 jarg1_);
  public final static native void NV_DISPLAY_DRIVER_MEMORY_INFO_V2_curAvailableDedicatedVideoMemory_set(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_DISPLAY_DRIVER_MEMORY_INFO_V2_curAvailableDedicatedVideoMemory_get(long jarg1, NV_DISPLAY_DRIVER_MEMORY_INFO_V2 jarg1_);
  public final static native long new_NV_DISPLAY_DRIVER_MEMORY_INFO_V2();
  public final static native void delete_NV_DISPLAY_DRIVER_MEMORY_INFO_V2(long jarg1);
  public final static native int NvAPI_GPU_GetMemoryInfo(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, NV_DISPLAY_DRIVER_MEMORY_INFO_V2 jarg2_);
  public final static native int NvAPI_EnumPhysicalGPUs(long jarg1, long jarg2);
  public final static native void NV_GET_CURRENT_SLI_STATE_version_set(long jarg1, NV_GET_CURRENT_SLI_STATE jarg1_, long jarg2);
  public final static native long NV_GET_CURRENT_SLI_STATE_version_get(long jarg1, NV_GET_CURRENT_SLI_STATE jarg1_);
  public final static native void NV_GET_CURRENT_SLI_STATE_maxNumAFRGroups_set(long jarg1, NV_GET_CURRENT_SLI_STATE jarg1_, long jarg2);
  public final static native long NV_GET_CURRENT_SLI_STATE_maxNumAFRGroups_get(long jarg1, NV_GET_CURRENT_SLI_STATE jarg1_);
  public final static native void NV_GET_CURRENT_SLI_STATE_numAFRGroups_set(long jarg1, NV_GET_CURRENT_SLI_STATE jarg1_, long jarg2);
  public final static native long NV_GET_CURRENT_SLI_STATE_numAFRGroups_get(long jarg1, NV_GET_CURRENT_SLI_STATE jarg1_);
  public final static native void NV_GET_CURRENT_SLI_STATE_currentAFRIndex_set(long jarg1, NV_GET_CURRENT_SLI_STATE jarg1_, long jarg2);
  public final static native long NV_GET_CURRENT_SLI_STATE_currentAFRIndex_get(long jarg1, NV_GET_CURRENT_SLI_STATE jarg1_);
  public final static native void NV_GET_CURRENT_SLI_STATE_nextFrameAFRIndex_set(long jarg1, NV_GET_CURRENT_SLI_STATE jarg1_, long jarg2);
  public final static native long NV_GET_CURRENT_SLI_STATE_nextFrameAFRIndex_get(long jarg1, NV_GET_CURRENT_SLI_STATE jarg1_);
  public final static native void NV_GET_CURRENT_SLI_STATE_previousFrameAFRIndex_set(long jarg1, NV_GET_CURRENT_SLI_STATE jarg1_, long jarg2);
  public final static native long NV_GET_CURRENT_SLI_STATE_previousFrameAFRIndex_get(long jarg1, NV_GET_CURRENT_SLI_STATE jarg1_);
  public final static native void NV_GET_CURRENT_SLI_STATE_bIsCurAFRGroupNew_set(long jarg1, NV_GET_CURRENT_SLI_STATE jarg1_, long jarg2);
  public final static native long NV_GET_CURRENT_SLI_STATE_bIsCurAFRGroupNew_get(long jarg1, NV_GET_CURRENT_SLI_STATE jarg1_);
  public final static native long new_NV_GET_CURRENT_SLI_STATE();
  public final static native void delete_NV_GET_CURRENT_SLI_STATE(long jarg1);
  public final static native int NvAPI_DISP_GetGDIPrimaryDisplayId(long jarg1);
  public final static native int NV_MOSAIC_MAX_DISPLAYS_get();
  public final static native int NvAPI_Mosaic_GetDisplayViewportsByResolution(long jarg1, long jarg2, long jarg3, long jarg4, NV_RECT jarg4_, long jarg5);
  public final static native int NvAPI_Stereo_Enable();
  public final static native int NvAPI_Stereo_Disable();
  public final static native int NvAPI_Stereo_IsEnabled(long jarg1);
  public final static native int NvAPI_Stereo_DestroyHandle(long jarg1);
  public final static native int NvAPI_Stereo_Activate(long jarg1);
  public final static native int NvAPI_Stereo_Deactivate(long jarg1);
  public final static native int NvAPI_Stereo_IsActivated(long jarg1, long jarg2);
  public final static native int NvAPI_Stereo_GetSeparation(long jarg1, long jarg2);
  public final static native int NvAPI_Stereo_SetSeparation(long jarg1, float jarg2);
  public final static native int NvAPI_Stereo_GetConvergence(long jarg1, long jarg2);
  public final static native int NvAPI_Stereo_SetConvergence(long jarg1, float jarg2);
  public final static native int NVAPI_STEREO_EYE_RIGHT_get();
  public final static native int NVAPI_STEREO_EYE_LEFT_get();
  public final static native int NVAPI_STEREO_EYE_MONO_get();
  public final static native int NvAPI_Stereo_SetActiveEye(long jarg1, int jarg2);
  public final static native int NVAPI_STEREO_DRIVER_MODE_AUTOMATIC_get();
  public final static native int NVAPI_STEREO_DRIVER_MODE_DIRECT_get();
  public final static native int NvAPI_Stereo_SetDriverMode(int jarg1);
  public final static native int NvAPI_Stereo_GetEyeSeparation(long jarg1, long jarg2);
  public final static native int NvAPI_Stereo_IsWindowedModeSupported(long jarg1);
  public final static native int NvAPI_Stereo_SetSurfaceCreationMode(long jarg1, int jarg2);
  public final static native int NvAPI_Stereo_GetSurfaceCreationMode(long jarg1, long jarg2);
  public final static native int NvAPI_Stereo_Debug_WasLastDrawStereoized(long jarg1, long jarg2);
  public final static native int NvAPI_Stereo_SetDefaultProfile(String jarg1);
  public final static native int NvAPI_Stereo_GetDefaultProfile(long jarg1, String jarg2, long jarg3);
  public final static native int NvAPI_Initialize();
  public final static native int NvAPI_Unload();
  public final static native int NvAPI_GetErrorMessage(int jarg1, String jarg2);
  public final static native int NvAPI_GetInterfaceVersionString(String jarg1);
  public final static native int NV_DP_1_62GBPS_get();
  public final static native int NV_DP_2_70GBPS_get();
  public final static native int NV_DP_5_40GBPS_get();
  public final static native int NV_DP_1_LANE_get();
  public final static native int NV_DP_2_LANE_get();
  public final static native int NV_DP_4_LANE_get();
  public final static native int NV_DP_COLOR_FORMAT_RGB_get();
  public final static native int NV_DP_COLORIMETRY_RGB_get();
  public final static native int NV_DP_DYNAMIC_RANGE_VESA_get();
  public final static native int NV_DP_BPC_DEFAULT_get();
  public final static native int NV_EDID_V1_DATA_SIZE_get();
  public final static native int NV_EDID_DATA_SIZE_get();
  public final static native void NV_EDID_V1_version_set(long jarg1, NV_EDID_V1 jarg1_, long jarg2);
  public final static native long NV_EDID_V1_version_get(long jarg1, NV_EDID_V1 jarg1_);
  public final static native void NV_EDID_V1_EDID_Data_set(long jarg1, NV_EDID_V1 jarg1_, short[] jarg2);
  public final static native short[] NV_EDID_V1_EDID_Data_get(long jarg1, NV_EDID_V1 jarg1_);
  public final static native long new_NV_EDID_V1();
  public final static native void delete_NV_EDID_V1(long jarg1);
  public final static native void NV_EDID_V2_version_set(long jarg1, NV_EDID_V2 jarg1_, long jarg2);
  public final static native long NV_EDID_V2_version_get(long jarg1, NV_EDID_V2 jarg1_);
  public final static native void NV_EDID_V2_EDID_Data_set(long jarg1, NV_EDID_V2 jarg1_, short[] jarg2);
  public final static native short[] NV_EDID_V2_EDID_Data_get(long jarg1, NV_EDID_V2 jarg1_);
  public final static native void NV_EDID_V2_sizeofEDID_set(long jarg1, NV_EDID_V2 jarg1_, long jarg2);
  public final static native long NV_EDID_V2_sizeofEDID_get(long jarg1, NV_EDID_V2 jarg1_);
  public final static native long new_NV_EDID_V2();
  public final static native void delete_NV_EDID_V2(long jarg1);
  public final static native void NV_EDID_V3_version_set(long jarg1, NV_EDID_V3 jarg1_, long jarg2);
  public final static native long NV_EDID_V3_version_get(long jarg1, NV_EDID_V3 jarg1_);
  public final static native void NV_EDID_V3_EDID_Data_set(long jarg1, NV_EDID_V3 jarg1_, short[] jarg2);
  public final static native short[] NV_EDID_V3_EDID_Data_get(long jarg1, NV_EDID_V3 jarg1_);
  public final static native void NV_EDID_V3_sizeofEDID_set(long jarg1, NV_EDID_V3 jarg1_, long jarg2);
  public final static native long NV_EDID_V3_sizeofEDID_get(long jarg1, NV_EDID_V3 jarg1_);
  public final static native void NV_EDID_V3_edidId_set(long jarg1, NV_EDID_V3 jarg1_, long jarg2);
  public final static native long NV_EDID_V3_edidId_get(long jarg1, NV_EDID_V3 jarg1_);
  public final static native void NV_EDID_V3_offset_set(long jarg1, NV_EDID_V3 jarg1_, long jarg2);
  public final static native long NV_EDID_V3_offset_get(long jarg1, NV_EDID_V3 jarg1_);
  public final static native long new_NV_EDID_V3();
  public final static native void delete_NV_EDID_V3(long jarg1);
  public final static native int NvAPI_GPU_GetEDID(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, long jarg3, NV_EDID_V3 jarg3_);
  public final static native int NVAPI_GPU_CONNECTOR_VGA_15_PIN_get();
  public final static native int NVAPI_GPU_CONNECTOR_TV_COMPOSITE_get();
  public final static native int NVAPI_GPU_CONNECTOR_TV_SVIDEO_get();
  public final static native int NVAPI_GPU_CONNECTOR_TV_HDTV_COMPONENT_get();
  public final static native int NVAPI_GPU_CONNECTOR_TV_SCART_get();
  public final static native int NVAPI_GPU_CONNECTOR_TV_COMPOSITE_SCART_ON_EIAJ4120_get();
  public final static native int NVAPI_GPU_CONNECTOR_TV_HDTV_EIAJ4120_get();
  public final static native int NVAPI_GPU_CONNECTOR_PC_POD_HDTV_YPRPB_get();
  public final static native int NVAPI_GPU_CONNECTOR_PC_POD_SVIDEO_get();
  public final static native int NVAPI_GPU_CONNECTOR_PC_POD_COMPOSITE_get();
  public final static native int NVAPI_GPU_CONNECTOR_DVI_I_TV_SVIDEO_get();
  public final static native int NVAPI_GPU_CONNECTOR_DVI_I_TV_COMPOSITE_get();
  public final static native int NVAPI_GPU_CONNECTOR_DVI_I_get();
  public final static native int NVAPI_GPU_CONNECTOR_DVI_D_get();
  public final static native int NVAPI_GPU_CONNECTOR_ADC_get();
  public final static native int NVAPI_GPU_CONNECTOR_LFH_DVI_I_1_get();
  public final static native int NVAPI_GPU_CONNECTOR_LFH_DVI_I_2_get();
  public final static native int NVAPI_GPU_CONNECTOR_SPWG_get();
  public final static native int NVAPI_GPU_CONNECTOR_OEM_get();
  public final static native int NVAPI_GPU_CONNECTOR_DISPLAYPORT_EXTERNAL_get();
  public final static native int NVAPI_GPU_CONNECTOR_DISPLAYPORT_INTERNAL_get();
  public final static native int NVAPI_GPU_CONNECTOR_DISPLAYPORT_MINI_EXT_get();
  public final static native int NVAPI_GPU_CONNECTOR_HDMI_A_get();
  public final static native int NVAPI_GPU_CONNECTOR_HDMI_C_MINI_get();
  public final static native int NVAPI_GPU_CONNECTOR_LFH_DISPLAYPORT_1_get();
  public final static native int NVAPI_GPU_CONNECTOR_LFH_DISPLAYPORT_2_get();
  public final static native int NVAPI_GPU_CONNECTOR_VIRTUAL_WFD_get();
  public final static native int NVAPI_GPU_CONNECTOR_UNKNOWN_get();
  public final static native int NV_DISPLAY_TV_FORMAT_NONE_get();
  public final static native int NV_DISPLAY_TV_FORMAT_SD_NTSCM_get();
  public final static native int NV_DISPLAY_TV_FORMAT_SD_NTSCJ_get();
  public final static native int NV_DISPLAY_TV_FORMAT_SD_PALM_get();
  public final static native int NV_DISPLAY_TV_FORMAT_SD_PALBDGH_get();
  public final static native int NV_DISPLAY_TV_FORMAT_SD_PALN_get();
  public final static native int NV_DISPLAY_TV_FORMAT_SD_PALNC_get();
  public final static native int NV_DISPLAY_TV_FORMAT_SD_576i_get();
  public final static native int NV_DISPLAY_TV_FORMAT_SD_480i_get();
  public final static native int NV_DISPLAY_TV_FORMAT_ED_480p_get();
  public final static native int NV_DISPLAY_TV_FORMAT_ED_576p_get();
  public final static native int NV_DISPLAY_TV_FORMAT_HD_720p_get();
  public final static native int NV_DISPLAY_TV_FORMAT_HD_1080i_get();
  public final static native int NV_DISPLAY_TV_FORMAT_HD_1080p_get();
  public final static native int NV_DISPLAY_TV_FORMAT_HD_720p50_get();
  public final static native int NV_DISPLAY_TV_FORMAT_HD_1080p24_get();
  public final static native int NV_DISPLAY_TV_FORMAT_HD_1080i50_get();
  public final static native int NV_DISPLAY_TV_FORMAT_HD_1080p50_get();
  public final static native int NV_DISPLAY_TV_FORMAT_UHD_4Kp30_get();
  public final static native int NV_DISPLAY_TV_FORMAT_UHD_4Kp25_get();
  public final static native int NV_DISPLAY_TV_FORMAT_UHD_4Kp24_get();
  public final static native int NV_DISPLAY_TV_FORMAT_UHD_4Kp24_SMPTE_get();
  public final static native int NV_DISPLAY_TV_FORMAT_SD_OTHER_get();
  public final static native int NV_DISPLAY_TV_FORMAT_ED_OTHER_get();
  public final static native int NV_DISPLAY_TV_FORMAT_HD_OTHER_get();
  public final static native int NV_DISPLAY_TV_FORMAT_ANY_get();
  public final static native int NVAPI_MAX_VIEW_TARGET_get();
  public final static native int NVAPI_ADVANCED_MAX_VIEW_TARGET_get();
  public final static native int NV_VIEW_MODE_STANDARD_get();
  public final static native int NV_VIEW_MODE_CLONE_get();
  public final static native int NV_VIEW_MODE_HSPAN_get();
  public final static native int NV_VIEW_MODE_VSPAN_get();
  public final static native int NV_VIEW_MODE_DUALVIEW_get();
  public final static native int NV_VIEW_MODE_MULTIVIEW_get();
  public final static native int NV_SCALING_DEFAULT_get();
  public final static native int NV_SCALING_GPU_SCALING_TO_CLOSEST_get();
  public final static native int NV_SCALING_GPU_SCALING_TO_NATIVE_get();
  public final static native int NV_SCALING_GPU_SCANOUT_TO_NATIVE_get();
  public final static native int NV_SCALING_GPU_SCALING_TO_ASPECT_SCANOUT_TO_NATIVE_get();
  public final static native int NV_SCALING_GPU_SCALING_TO_ASPECT_SCANOUT_TO_CLOSEST_get();
  public final static native int NV_SCALING_GPU_SCANOUT_TO_CLOSEST_get();
  public final static native int NV_SCALING_MONITOR_SCALING_get();
  public final static native int NV_SCALING_ADAPTER_SCALING_get();
  public final static native int NV_SCALING_CENTERED_get();
  public final static native int NV_SCALING_ASPECT_SCALING_get();
  public final static native int NV_SCALING_CUSTOMIZED_get();
  public final static native int NV_ROTATE_0_get();
  public final static native int NV_ROTATE_90_get();
  public final static native int NV_ROTATE_180_get();
  public final static native int NV_ROTATE_270_get();
  public final static native int NV_ROTATE_IGNORED_get();
  public final static native int NV_FORMAT_UNKNOWN_get();
  public final static native int NV_FORMAT_P8_get();
  public final static native int NV_FORMAT_R5G6B5_get();
  public final static native int NV_FORMAT_A8R8G8B8_get();
  public final static native int NV_FORMAT_A16B16G16R16F_get();
  public final static native void NV_VIEWPORTF_x_set(long jarg1, NV_VIEWPORTF jarg1_, float jarg2);
  public final static native float NV_VIEWPORTF_x_get(long jarg1, NV_VIEWPORTF jarg1_);
  public final static native void NV_VIEWPORTF_y_set(long jarg1, NV_VIEWPORTF jarg1_, float jarg2);
  public final static native float NV_VIEWPORTF_y_get(long jarg1, NV_VIEWPORTF jarg1_);
  public final static native void NV_VIEWPORTF_w_set(long jarg1, NV_VIEWPORTF jarg1_, float jarg2);
  public final static native float NV_VIEWPORTF_w_get(long jarg1, NV_VIEWPORTF jarg1_);
  public final static native void NV_VIEWPORTF_h_set(long jarg1, NV_VIEWPORTF jarg1_, float jarg2);
  public final static native float NV_VIEWPORTF_h_get(long jarg1, NV_VIEWPORTF jarg1_);
  public final static native long new_NV_VIEWPORTF();
  public final static native void delete_NV_VIEWPORTF(long jarg1);
  public final static native int NV_TIMING_OVERRIDE_CURRENT_get();
  public final static native int NV_TIMING_OVERRIDE_NV_PSF_get();
  public final static native void NV_TIMINGEXT_flag_set(long jarg1, NV_TIMINGEXT jarg1_, long jarg2);
  public final static native long NV_TIMINGEXT_flag_get(long jarg1, NV_TIMINGEXT jarg1_);
  public final static native void NV_TIMINGEXT_rr_set(long jarg1, NV_TIMINGEXT jarg1_, int jarg2);
  public final static native int NV_TIMINGEXT_rr_get(long jarg1, NV_TIMINGEXT jarg1_);
  public final static native void NV_TIMINGEXT_rrx1k_set(long jarg1, NV_TIMINGEXT jarg1_, long jarg2);
  public final static native long NV_TIMINGEXT_rrx1k_get(long jarg1, NV_TIMINGEXT jarg1_);
  public final static native void NV_TIMINGEXT_aspect_set(long jarg1, NV_TIMINGEXT jarg1_, long jarg2);
  public final static native long NV_TIMINGEXT_aspect_get(long jarg1, NV_TIMINGEXT jarg1_);
  public final static native void NV_TIMINGEXT_rep_set(long jarg1, NV_TIMINGEXT jarg1_, int jarg2);
  public final static native int NV_TIMINGEXT_rep_get(long jarg1, NV_TIMINGEXT jarg1_);
  public final static native void NV_TIMINGEXT_status_set(long jarg1, NV_TIMINGEXT jarg1_, long jarg2);
  public final static native long NV_TIMINGEXT_status_get(long jarg1, NV_TIMINGEXT jarg1_);
  public final static native void NV_TIMINGEXT_name_set(long jarg1, NV_TIMINGEXT jarg1_, short[] jarg2);
  public final static native short[] NV_TIMINGEXT_name_get(long jarg1, NV_TIMINGEXT jarg1_);
  public final static native long new_NV_TIMINGEXT();
  public final static native void delete_NV_TIMINGEXT(long jarg1);
  public final static native void NV_TIMING_HVisible_set(long jarg1, NV_TIMING jarg1_, int jarg2);
  public final static native int NV_TIMING_HVisible_get(long jarg1, NV_TIMING jarg1_);
  public final static native void NV_TIMING_HBorder_set(long jarg1, NV_TIMING jarg1_, int jarg2);
  public final static native int NV_TIMING_HBorder_get(long jarg1, NV_TIMING jarg1_);
  public final static native void NV_TIMING_HFrontPorch_set(long jarg1, NV_TIMING jarg1_, int jarg2);
  public final static native int NV_TIMING_HFrontPorch_get(long jarg1, NV_TIMING jarg1_);
  public final static native void NV_TIMING_HSyncWidth_set(long jarg1, NV_TIMING jarg1_, int jarg2);
  public final static native int NV_TIMING_HSyncWidth_get(long jarg1, NV_TIMING jarg1_);
  public final static native void NV_TIMING_HTotal_set(long jarg1, NV_TIMING jarg1_, int jarg2);
  public final static native int NV_TIMING_HTotal_get(long jarg1, NV_TIMING jarg1_);
  public final static native void NV_TIMING_HSyncPol_set(long jarg1, NV_TIMING jarg1_, short jarg2);
  public final static native short NV_TIMING_HSyncPol_get(long jarg1, NV_TIMING jarg1_);
  public final static native void NV_TIMING_VVisible_set(long jarg1, NV_TIMING jarg1_, int jarg2);
  public final static native int NV_TIMING_VVisible_get(long jarg1, NV_TIMING jarg1_);
  public final static native void NV_TIMING_VBorder_set(long jarg1, NV_TIMING jarg1_, int jarg2);
  public final static native int NV_TIMING_VBorder_get(long jarg1, NV_TIMING jarg1_);
  public final static native void NV_TIMING_VFrontPorch_set(long jarg1, NV_TIMING jarg1_, int jarg2);
  public final static native int NV_TIMING_VFrontPorch_get(long jarg1, NV_TIMING jarg1_);
  public final static native void NV_TIMING_VSyncWidth_set(long jarg1, NV_TIMING jarg1_, int jarg2);
  public final static native int NV_TIMING_VSyncWidth_get(long jarg1, NV_TIMING jarg1_);
  public final static native void NV_TIMING_VTotal_set(long jarg1, NV_TIMING jarg1_, int jarg2);
  public final static native int NV_TIMING_VTotal_get(long jarg1, NV_TIMING jarg1_);
  public final static native void NV_TIMING_VSyncPol_set(long jarg1, NV_TIMING jarg1_, short jarg2);
  public final static native short NV_TIMING_VSyncPol_get(long jarg1, NV_TIMING jarg1_);
  public final static native void NV_TIMING_interlaced_set(long jarg1, NV_TIMING jarg1_, int jarg2);
  public final static native int NV_TIMING_interlaced_get(long jarg1, NV_TIMING jarg1_);
  public final static native void NV_TIMING_pclk_set(long jarg1, NV_TIMING jarg1_, long jarg2);
  public final static native long NV_TIMING_pclk_get(long jarg1, NV_TIMING jarg1_);
  public final static native void NV_TIMING_etc_set(long jarg1, NV_TIMING jarg1_, long jarg2, NV_TIMINGEXT jarg2_);
  public final static native long NV_TIMING_etc_get(long jarg1, NV_TIMING jarg1_);
  public final static native long new_NV_TIMING();
  public final static native void delete_NV_TIMING(long jarg1);
  public final static native int NV_TIMING_H_SYNC_POSITIVE_get();
  public final static native int NV_TIMING_H_SYNC_NEGATIVE_get();
  public final static native int NV_TIMING_H_SYNC_DEFAULT_get();
  public final static native int NV_TIMING_V_SYNC_POSITIVE_get();
  public final static native int NV_TIMING_V_SYNC_NEGATIVE_get();
  public final static native int NV_TIMING_V_SYNC_DEFAULT_get();
  public final static native int NV_TIMING_PROGRESSIVE_get();
  public final static native int NV_TIMING_INTERLACED_get();
  public final static native int NV_TIMING_INTERLACED_EXTRA_VBLANK_ON_FIELD2_get();
  public final static native int NV_TIMING_INTERLACED_NO_EXTRA_VBLANK_ON_FIELD2_get();
  public final static native void NV_VIEW_TARGET_INFO_version_set(long jarg1, NV_VIEW_TARGET_INFO jarg1_, long jarg2);
  public final static native long NV_VIEW_TARGET_INFO_version_get(long jarg1, NV_VIEW_TARGET_INFO jarg1_);
  public final static native void NV_VIEW_TARGET_INFO_count_set(long jarg1, NV_VIEW_TARGET_INFO jarg1_, long jarg2);
  public final static native long NV_VIEW_TARGET_INFO_count_get(long jarg1, NV_VIEW_TARGET_INFO jarg1_);
  public final static native long NV_VIEW_TARGET_INFO_target_get(long jarg1, NV_VIEW_TARGET_INFO jarg1_);
  public final static native long new_NV_VIEW_TARGET_INFO();
  public final static native void delete_NV_VIEW_TARGET_INFO(long jarg1);
  public final static native void NV_VIEW_TARGET_INFO_target_deviceMask_set(long jarg1, NV_VIEW_TARGET_INFO_target jarg1_, long jarg2);
  public final static native long NV_VIEW_TARGET_INFO_target_deviceMask_get(long jarg1, NV_VIEW_TARGET_INFO_target jarg1_);
  public final static native void NV_VIEW_TARGET_INFO_target_sourceId_set(long jarg1, NV_VIEW_TARGET_INFO_target jarg1_, long jarg2);
  public final static native long NV_VIEW_TARGET_INFO_target_sourceId_get(long jarg1, NV_VIEW_TARGET_INFO_target jarg1_);
  public final static native void NV_VIEW_TARGET_INFO_target_bPrimary_set(long jarg1, NV_VIEW_TARGET_INFO_target jarg1_, long jarg2);
  public final static native long NV_VIEW_TARGET_INFO_target_bPrimary_get(long jarg1, NV_VIEW_TARGET_INFO_target jarg1_);
  public final static native void NV_VIEW_TARGET_INFO_target_bInterlaced_set(long jarg1, NV_VIEW_TARGET_INFO_target jarg1_, long jarg2);
  public final static native long NV_VIEW_TARGET_INFO_target_bInterlaced_get(long jarg1, NV_VIEW_TARGET_INFO_target jarg1_);
  public final static native void NV_VIEW_TARGET_INFO_target_bGDIPrimary_set(long jarg1, NV_VIEW_TARGET_INFO_target jarg1_, long jarg2);
  public final static native long NV_VIEW_TARGET_INFO_target_bGDIPrimary_get(long jarg1, NV_VIEW_TARGET_INFO_target jarg1_);
  public final static native void NV_VIEW_TARGET_INFO_target_bForceModeSet_set(long jarg1, NV_VIEW_TARGET_INFO_target jarg1_, long jarg2);
  public final static native long NV_VIEW_TARGET_INFO_target_bForceModeSet_get(long jarg1, NV_VIEW_TARGET_INFO_target jarg1_);
  public final static native long new_NV_VIEW_TARGET_INFO_target();
  public final static native void delete_NV_VIEW_TARGET_INFO_target(long jarg1);
  public final static native int NvAPI_SetView(long jarg1, NvDisplayHandle__ jarg1_, long jarg2, NV_VIEW_TARGET_INFO jarg2_, int jarg3);
  public final static native int NVAPI_MAX_DISPLAY_PATH_get();
  public final static native int NVAPI_ADVANCED_MAX_DISPLAY_PATH_get();
  public final static native void NV_DISPLAY_PATH_deviceMask_set(long jarg1, NV_DISPLAY_PATH jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_deviceMask_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_sourceId_set(long jarg1, NV_DISPLAY_PATH jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_sourceId_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_bPrimary_set(long jarg1, NV_DISPLAY_PATH jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_bPrimary_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_connector_set(long jarg1, NV_DISPLAY_PATH jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PATH_connector_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_width_set(long jarg1, NV_DISPLAY_PATH jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_width_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_height_set(long jarg1, NV_DISPLAY_PATH jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_height_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_depth_set(long jarg1, NV_DISPLAY_PATH jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_depth_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_colorFormat_set(long jarg1, NV_DISPLAY_PATH jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PATH_colorFormat_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_rotation_set(long jarg1, NV_DISPLAY_PATH jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PATH_rotation_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_scaling_set(long jarg1, NV_DISPLAY_PATH jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PATH_scaling_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_refreshRate_set(long jarg1, NV_DISPLAY_PATH jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_refreshRate_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_interlaced_set(long jarg1, NV_DISPLAY_PATH jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_interlaced_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_tvFormat_set(long jarg1, NV_DISPLAY_PATH jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PATH_tvFormat_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_posx_set(long jarg1, NV_DISPLAY_PATH jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_posx_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_posy_set(long jarg1, NV_DISPLAY_PATH jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_posy_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_bGDIPrimary_set(long jarg1, NV_DISPLAY_PATH jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_bGDIPrimary_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_bForceModeSet_set(long jarg1, NV_DISPLAY_PATH jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_bForceModeSet_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_bFocusDisplay_set(long jarg1, NV_DISPLAY_PATH jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_bFocusDisplay_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native void NV_DISPLAY_PATH_gpuId_set(long jarg1, NV_DISPLAY_PATH jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_gpuId_get(long jarg1, NV_DISPLAY_PATH jarg1_);
  public final static native long new_NV_DISPLAY_PATH();
  public final static native void delete_NV_DISPLAY_PATH(long jarg1);
  public final static native void NV_DISPLAY_PATH_INFO_V3_version_set(long jarg1, NV_DISPLAY_PATH_INFO_V3 jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_INFO_V3_version_get(long jarg1, NV_DISPLAY_PATH_INFO_V3 jarg1_);
  public final static native void NV_DISPLAY_PATH_INFO_V3_count_set(long jarg1, NV_DISPLAY_PATH_INFO_V3 jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_INFO_V3_count_get(long jarg1, NV_DISPLAY_PATH_INFO_V3 jarg1_);
  public final static native void NV_DISPLAY_PATH_INFO_V3_path_set(long jarg1, NV_DISPLAY_PATH_INFO_V3 jarg1_, long jarg2, NV_DISPLAY_PATH jarg2_);
  public final static native long NV_DISPLAY_PATH_INFO_V3_path_get(long jarg1, NV_DISPLAY_PATH_INFO_V3 jarg1_);
  public final static native long new_NV_DISPLAY_PATH_INFO_V3();
  public final static native void delete_NV_DISPLAY_PATH_INFO_V3(long jarg1);
  public final static native void NV_DISPLAY_PATH_INFO_version_set(long jarg1, NV_DISPLAY_PATH_INFO jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_INFO_version_get(long jarg1, NV_DISPLAY_PATH_INFO jarg1_);
  public final static native void NV_DISPLAY_PATH_INFO_count_set(long jarg1, NV_DISPLAY_PATH_INFO jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PATH_INFO_count_get(long jarg1, NV_DISPLAY_PATH_INFO jarg1_);
  public final static native void NV_DISPLAY_PATH_INFO_path_set(long jarg1, NV_DISPLAY_PATH_INFO jarg1_, long jarg2, NV_DISPLAY_PATH jarg2_);
  public final static native long NV_DISPLAY_PATH_INFO_path_get(long jarg1, NV_DISPLAY_PATH_INFO jarg1_);
  public final static native long new_NV_DISPLAY_PATH_INFO();
  public final static native void delete_NV_DISPLAY_PATH_INFO(long jarg1);
  public final static native int NvAPI_SetViewEx(long jarg1, NvDisplayHandle__ jarg1_, long jarg2, NV_DISPLAY_PATH_INFO jarg2_, int jarg3);
  public final static native void NV_POSITION_x_set(long jarg1, NV_POSITION jarg1_, int jarg2);
  public final static native int NV_POSITION_x_get(long jarg1, NV_POSITION jarg1_);
  public final static native void NV_POSITION_y_set(long jarg1, NV_POSITION jarg1_, int jarg2);
  public final static native int NV_POSITION_y_get(long jarg1, NV_POSITION jarg1_);
  public final static native long new_NV_POSITION();
  public final static native void delete_NV_POSITION(long jarg1);
  public final static native void NV_RESOLUTION_width_set(long jarg1, NV_RESOLUTION jarg1_, long jarg2);
  public final static native long NV_RESOLUTION_width_get(long jarg1, NV_RESOLUTION jarg1_);
  public final static native void NV_RESOLUTION_height_set(long jarg1, NV_RESOLUTION jarg1_, long jarg2);
  public final static native long NV_RESOLUTION_height_get(long jarg1, NV_RESOLUTION jarg1_);
  public final static native void NV_RESOLUTION_colorDepth_set(long jarg1, NV_RESOLUTION jarg1_, long jarg2);
  public final static native long NV_RESOLUTION_colorDepth_get(long jarg1, NV_RESOLUTION jarg1_);
  public final static native long new_NV_RESOLUTION();
  public final static native void delete_NV_RESOLUTION(long jarg1);
  public final static native void NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_version_set(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_version_get(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_rotation_set(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_, int jarg2);
  public final static native int NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_rotation_get(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_scaling_set(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_, int jarg2);
  public final static native int NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_scaling_get(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_refreshRate1K_set(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_refreshRate1K_get(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_interlaced_set(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_interlaced_get(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_primary_set(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_primary_get(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_reserved_set(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_reserved_get(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_connector_set(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_, int jarg2);
  public final static native int NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_connector_get(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_tvFormat_set(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_, int jarg2);
  public final static native int NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_tvFormat_get(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_timingOverride_set(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_, int jarg2);
  public final static native int NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_timingOverride_get(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_timing_set(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_, long jarg2, NV_TIMING jarg2_);
  public final static native long NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1_timing_get(long jarg1, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg1_);
  public final static native long new_NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1();
  public final static native void delete_NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1(long jarg1);
  public final static native void NV_DISPLAYCONFIG_PATH_TARGET_INFO_V1_displayId_set(long jarg1, NV_DISPLAYCONFIG_PATH_TARGET_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_TARGET_INFO_V1_displayId_get(long jarg1, NV_DISPLAYCONFIG_PATH_TARGET_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_TARGET_INFO_V1_details_set(long jarg1, NV_DISPLAYCONFIG_PATH_TARGET_INFO_V1 jarg1_, long jarg2, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg2_);
  public final static native long NV_DISPLAYCONFIG_PATH_TARGET_INFO_V1_details_get(long jarg1, NV_DISPLAYCONFIG_PATH_TARGET_INFO_V1 jarg1_);
  public final static native long new_NV_DISPLAYCONFIG_PATH_TARGET_INFO_V1();
  public final static native void delete_NV_DISPLAYCONFIG_PATH_TARGET_INFO_V1(long jarg1);
  public final static native void NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2_displayId_set(long jarg1, NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2_displayId_get(long jarg1, NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2_details_set(long jarg1, NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2 jarg1_, long jarg2, NV_DISPLAYCONFIG_PATH_ADVANCED_TARGET_INFO_V1 jarg2_);
  public final static native long NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2_details_get(long jarg1, NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2_targetId_set(long jarg1, NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2_targetId_get(long jarg1, NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2 jarg1_);
  public final static native long new_NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2();
  public final static native void delete_NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2(long jarg1);
  public final static native int NV_DISPLAYCONFIG_SPAN_NONE_get();
  public final static native int NV_DISPLAYCONFIG_SPAN_HORIZONTAL_get();
  public final static native int NV_DISPLAYCONFIG_SPAN_VERTICAL_get();
  public final static native void NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1_resolution_set(long jarg1, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg1_, long jarg2, NV_RESOLUTION jarg2_);
  public final static native long NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1_resolution_get(long jarg1, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1_colorFormat_set(long jarg1, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg1_, int jarg2);
  public final static native int NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1_colorFormat_get(long jarg1, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1_position_set(long jarg1, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg1_, long jarg2, NV_POSITION jarg2_);
  public final static native long NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1_position_get(long jarg1, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1_spanningOrientation_set(long jarg1, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg1_, int jarg2);
  public final static native int NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1_spanningOrientation_get(long jarg1, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1_bGDIPrimary_set(long jarg1, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1_bGDIPrimary_get(long jarg1, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1_bSLIFocus_set(long jarg1, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1_bSLIFocus_get(long jarg1, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1_reserved_set(long jarg1, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1_reserved_get(long jarg1, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg1_);
  public final static native long new_NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1();
  public final static native void delete_NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1(long jarg1);
  public final static native void NV_DISPLAYCONFIG_PATH_INFO_V1_version_set(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_INFO_V1_version_get(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_INFO_V1_reserved_sourceId_set(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_INFO_V1_reserved_sourceId_get(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_INFO_V1_targetInfoCount_set(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_INFO_V1_targetInfoCount_get(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_INFO_V1_targetInfo_set(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V1 jarg1_, long jarg2, NV_DISPLAYCONFIG_PATH_TARGET_INFO_V1 jarg2_);
  public final static native long NV_DISPLAYCONFIG_PATH_INFO_V1_targetInfo_get(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V1 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_INFO_V1_sourceModeInfo_set(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V1 jarg1_, long jarg2, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg2_);
  public final static native long NV_DISPLAYCONFIG_PATH_INFO_V1_sourceModeInfo_get(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V1 jarg1_);
  public final static native long new_NV_DISPLAYCONFIG_PATH_INFO_V1();
  public final static native void delete_NV_DISPLAYCONFIG_PATH_INFO_V1(long jarg1);
  public final static native void NV_DISPLAYCONFIG_PATH_INFO_V2_version_set(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_INFO_V2_version_get(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_INFO_V2_targetInfoCount_set(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_INFO_V2_targetInfoCount_get(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_INFO_V2_targetInfo_set(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg1_, long jarg2, NV_DISPLAYCONFIG_PATH_TARGET_INFO_V2 jarg2_);
  public final static native long NV_DISPLAYCONFIG_PATH_INFO_V2_targetInfo_get(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_INFO_V2_sourceModeInfo_set(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg1_, long jarg2, NV_DISPLAYCONFIG_SOURCE_MODE_INFO_V1 jarg2_);
  public final static native long NV_DISPLAYCONFIG_PATH_INFO_V2_sourceModeInfo_get(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_INFO_V2_IsNonNVIDIAAdapter_set(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_INFO_V2_IsNonNVIDIAAdapter_get(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_INFO_V2_reserved_set(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_INFO_V2_reserved_get(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg1_);
  public final static native void NV_DISPLAYCONFIG_PATH_INFO_V2_pOSAdapterID_set(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_DISPLAYCONFIG_PATH_INFO_V2_pOSAdapterID_get(long jarg1, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg1_);
  public final static native long new_NV_DISPLAYCONFIG_PATH_INFO_V2();
  public final static native void delete_NV_DISPLAYCONFIG_PATH_INFO_V2(long jarg1);
  public final static native int NV_DISPLAYCONFIG_VALIDATE_ONLY_get();
  public final static native int NV_DISPLAYCONFIG_SAVE_TO_PERSISTENCE_get();
  public final static native int NV_DISPLAYCONFIG_DRIVER_RELOAD_ALLOWED_get();
  public final static native int NV_DISPLAYCONFIG_FORCE_MODE_ENUMERATION_get();
  public final static native int NVAPI_UNICODE_STRING_MAX_get();
  public final static native int NVAPI_BINARY_DATA_MAX_get();
  public final static native void NV_DISPLAY_DRIVER_VERSION_version_set(long jarg1, NV_DISPLAY_DRIVER_VERSION jarg1_, long jarg2);
  public final static native long NV_DISPLAY_DRIVER_VERSION_version_get(long jarg1, NV_DISPLAY_DRIVER_VERSION jarg1_);
  public final static native void NV_DISPLAY_DRIVER_VERSION_drvVersion_set(long jarg1, NV_DISPLAY_DRIVER_VERSION jarg1_, long jarg2);
  public final static native long NV_DISPLAY_DRIVER_VERSION_drvVersion_get(long jarg1, NV_DISPLAY_DRIVER_VERSION jarg1_);
  public final static native void NV_DISPLAY_DRIVER_VERSION_bldChangeListNum_set(long jarg1, NV_DISPLAY_DRIVER_VERSION jarg1_, long jarg2);
  public final static native long NV_DISPLAY_DRIVER_VERSION_bldChangeListNum_get(long jarg1, NV_DISPLAY_DRIVER_VERSION jarg1_);
  public final static native void NV_DISPLAY_DRIVER_VERSION_szBuildBranchString_set(long jarg1, NV_DISPLAY_DRIVER_VERSION jarg1_, String jarg2);
  public final static native String NV_DISPLAY_DRIVER_VERSION_szBuildBranchString_get(long jarg1, NV_DISPLAY_DRIVER_VERSION jarg1_);
  public final static native void NV_DISPLAY_DRIVER_VERSION_szAdapterString_set(long jarg1, NV_DISPLAY_DRIVER_VERSION jarg1_, String jarg2);
  public final static native String NV_DISPLAY_DRIVER_VERSION_szAdapterString_get(long jarg1, NV_DISPLAY_DRIVER_VERSION jarg1_);
  public final static native long new_NV_DISPLAY_DRIVER_VERSION();
  public final static native void delete_NV_DISPLAY_DRIVER_VERSION(long jarg1);
  public final static native int NvAPI_GetDisplayDriverVersion(long jarg1, NvDisplayHandle__ jarg1_, long jarg2, NV_DISPLAY_DRIVER_VERSION jarg2_);
  public final static native int NVAPI_OGLEXPERT_DETAIL_NONE_get();
  public final static native int NVAPI_OGLEXPERT_DETAIL_ERROR_get();
  public final static native int NVAPI_OGLEXPERT_DETAIL_SWFALLBACK_get();
  public final static native int NVAPI_OGLEXPERT_DETAIL_BASIC_INFO_get();
  public final static native int NVAPI_OGLEXPERT_DETAIL_DETAILED_INFO_get();
  public final static native int NVAPI_OGLEXPERT_DETAIL_PERFORMANCE_WARNING_get();
  public final static native int NVAPI_OGLEXPERT_DETAIL_QUALITY_WARNING_get();
  public final static native int NVAPI_OGLEXPERT_DETAIL_USAGE_WARNING_get();
  public final static native int NVAPI_OGLEXPERT_DETAIL_ALL_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_NONE_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_ERROR_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_SWFALLBACK_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_PIPELINE_VERTEX_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_PIPELINE_GEOMETRY_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_PIPELINE_XFB_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_PIPELINE_RASTER_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_PIPELINE_FRAGMENT_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_PIPELINE_ROP_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_PIPELINE_FRAMEBUFFER_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_PIPELINE_PIXEL_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_PIPELINE_TEXTURE_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_OBJECT_BUFFEROBJECT_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_OBJECT_TEXTURE_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_OBJECT_PROGRAM_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_OBJECT_FBO_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_FEATURE_SLI_get();
  public final static native int NVAPI_OGLEXPERT_REPORT_ALL_get();
  public final static native int NVAPI_OGLEXPERT_OUTPUT_TO_NONE_get();
  public final static native int NVAPI_OGLEXPERT_OUTPUT_TO_CONSOLE_get();
  public final static native int NVAPI_OGLEXPERT_OUTPUT_TO_DEBUGGER_get();
  public final static native int NVAPI_OGLEXPERT_OUTPUT_TO_CALLBACK_get();
  public final static native int NVAPI_OGLEXPERT_OUTPUT_TO_ALL_get();
  public final static native int NvAPI_OGL_ExpertModeSet(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int NvAPI_OGL_ExpertModeGet(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int NvAPI_OGL_ExpertModeDefaultsSet(long jarg1, long jarg2, long jarg3);
  public final static native int NvAPI_OGL_ExpertModeDefaultsGet(long jarg1, long jarg2, long jarg3);
  public final static native int NvAPI_EnumTCCPhysicalGPUs(long jarg1, long jarg2);
  public final static native int NvAPI_EnumLogicalGPUs(long jarg1, long jarg2);
  public final static native int NvAPI_GetPhysicalGPUsFromDisplay(long jarg1, NvDisplayHandle__ jarg1_, long jarg2, long jarg3);
  public final static native int NvAPI_GetPhysicalGPUFromUnAttachedDisplay(long jarg1, NvUnAttachedDisplayHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GetLogicalGPUFromDisplay(long jarg1, NvDisplayHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GetLogicalGPUFromPhysicalGPU(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GetPhysicalGPUsFromLogicalGPU(long jarg1, NvLogicalGpuHandle__ jarg1_, long jarg2, long jarg3);
  public final static native int NvAPI_GPU_GetGpuCoreCount(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetAllOutputs(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetConnectedOutputs(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetConnectedSLIOutputs(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NV_MONITOR_CONN_TYPE_UNINITIALIZED_get();
  public final static native int NV_MONITOR_CONN_TYPE_UNKNOWN_get();
  public final static native int NV_GPU_CONNECTED_IDS_FLAG_UNCACHED_get();
  public final static native int NV_GPU_CONNECTED_IDS_FLAG_SLI_get();
  public final static native int NV_GPU_CONNECTED_IDS_FLAG_LIDSTATE_get();
  public final static native int NV_GPU_CONNECTED_IDS_FLAG_FAKE_get();
  public final static native int NV_GPU_CONNECTED_IDS_FLAG_EXCLUDE_MST_get();
  public final static native void NV_GPU_DISPLAYIDS_version_set(long jarg1, NV_GPU_DISPLAYIDS jarg1_, long jarg2);
  public final static native long NV_GPU_DISPLAYIDS_version_get(long jarg1, NV_GPU_DISPLAYIDS jarg1_);
  public final static native void NV_GPU_DISPLAYIDS_connectorType_set(long jarg1, NV_GPU_DISPLAYIDS jarg1_, int jarg2);
  public final static native int NV_GPU_DISPLAYIDS_connectorType_get(long jarg1, NV_GPU_DISPLAYIDS jarg1_);
  public final static native void NV_GPU_DISPLAYIDS_displayId_set(long jarg1, NV_GPU_DISPLAYIDS jarg1_, long jarg2);
  public final static native long NV_GPU_DISPLAYIDS_displayId_get(long jarg1, NV_GPU_DISPLAYIDS jarg1_);
  public final static native void NV_GPU_DISPLAYIDS_isDynamic_set(long jarg1, NV_GPU_DISPLAYIDS jarg1_, long jarg2);
  public final static native long NV_GPU_DISPLAYIDS_isDynamic_get(long jarg1, NV_GPU_DISPLAYIDS jarg1_);
  public final static native void NV_GPU_DISPLAYIDS_isMultiStreamRootNode_set(long jarg1, NV_GPU_DISPLAYIDS jarg1_, long jarg2);
  public final static native long NV_GPU_DISPLAYIDS_isMultiStreamRootNode_get(long jarg1, NV_GPU_DISPLAYIDS jarg1_);
  public final static native void NV_GPU_DISPLAYIDS_isActive_set(long jarg1, NV_GPU_DISPLAYIDS jarg1_, long jarg2);
  public final static native long NV_GPU_DISPLAYIDS_isActive_get(long jarg1, NV_GPU_DISPLAYIDS jarg1_);
  public final static native void NV_GPU_DISPLAYIDS_isCluster_set(long jarg1, NV_GPU_DISPLAYIDS jarg1_, long jarg2);
  public final static native long NV_GPU_DISPLAYIDS_isCluster_get(long jarg1, NV_GPU_DISPLAYIDS jarg1_);
  public final static native void NV_GPU_DISPLAYIDS_isOSVisible_set(long jarg1, NV_GPU_DISPLAYIDS jarg1_, long jarg2);
  public final static native long NV_GPU_DISPLAYIDS_isOSVisible_get(long jarg1, NV_GPU_DISPLAYIDS jarg1_);
  public final static native void NV_GPU_DISPLAYIDS_isWFD_set(long jarg1, NV_GPU_DISPLAYIDS jarg1_, long jarg2);
  public final static native long NV_GPU_DISPLAYIDS_isWFD_get(long jarg1, NV_GPU_DISPLAYIDS jarg1_);
  public final static native void NV_GPU_DISPLAYIDS_isConnected_set(long jarg1, NV_GPU_DISPLAYIDS jarg1_, long jarg2);
  public final static native long NV_GPU_DISPLAYIDS_isConnected_get(long jarg1, NV_GPU_DISPLAYIDS jarg1_);
  public final static native void NV_GPU_DISPLAYIDS_reserved_set(long jarg1, NV_GPU_DISPLAYIDS jarg1_, long jarg2);
  public final static native long NV_GPU_DISPLAYIDS_reserved_get(long jarg1, NV_GPU_DISPLAYIDS jarg1_);
  public final static native long new_NV_GPU_DISPLAYIDS();
  public final static native void delete_NV_GPU_DISPLAYIDS(long jarg1);
  public final static native int NvAPI_GPU_GetConnectedDisplayIds(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, NV_GPU_DISPLAYIDS jarg2_, long jarg3, long jarg4);
  public final static native int NvAPI_GPU_GetAllDisplayIds(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, NV_GPU_DISPLAYIDS jarg2_, long jarg3);
  public final static native int NvAPI_GPU_GetConnectedOutputsWithLidState(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetConnectedSLIOutputsWithLidState(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NV_SYSTEM_TYPE_UNKNOWN_get();
  public final static native int NV_SYSTEM_TYPE_LAPTOP_get();
  public final static native int NV_SYSTEM_TYPE_DESKTOP_get();
  public final static native int NvAPI_GPU_GetSystemType(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetActiveOutputs(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_SetEDID(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, long jarg3, NV_EDID_V3 jarg3_);
  public final static native int NVAPI_GPU_OUTPUT_UNKNOWN_get();
  public final static native int NVAPI_GPU_OUTPUT_CRT_get();
  public final static native int NVAPI_GPU_OUTPUT_DFP_get();
  public final static native int NVAPI_GPU_OUTPUT_TV_get();
  public final static native int NvAPI_GPU_GetOutputType(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, long jarg3);
  public final static native int NvAPI_GPU_ValidateOutputCombination(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetFullName(long jarg1, NvPhysicalGpuHandle__ jarg1_, String jarg2);
  public final static native int NvAPI_GPU_GetPCIIdentifiers(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int NV_SYSTEM_TYPE_GPU_UNKNOWN_get();
  public final static native int NV_SYSTEM_TYPE_IGPU_get();
  public final static native int NV_SYSTEM_TYPE_DGPU_get();
  public final static native int NvAPI_GPU_GetGPUType(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NVAPI_GPU_BUS_TYPE_UNDEFINED_get();
  public final static native int NVAPI_GPU_BUS_TYPE_PCI_get();
  public final static native int NVAPI_GPU_BUS_TYPE_AGP_get();
  public final static native int NVAPI_GPU_BUS_TYPE_PCI_EXPRESS_get();
  public final static native int NVAPI_GPU_BUS_TYPE_FPCI_get();
  public final static native int NVAPI_GPU_BUS_TYPE_AXI_get();
  public final static native int NvAPI_GPU_GetBusType(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetBusId(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetBusSlotId(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetIRQ(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetVbiosRevision(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetVbiosOEMRevision(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetVbiosVersionString(long jarg1, NvPhysicalGpuHandle__ jarg1_, String jarg2);
  public final static native int NvAPI_GPU_GetAGPAperture(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetCurrentAGPRate(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetCurrentPCIEDownstreamWidth(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetPhysicalFrameBufferSize(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GPU_GetVirtualFrameBufferSize(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native void NV_BOARD_INFO_V1_version_set(long jarg1, NV_BOARD_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_BOARD_INFO_V1_version_get(long jarg1, NV_BOARD_INFO_V1 jarg1_);
  public final static native void NV_BOARD_INFO_V1_BoardNum_set(long jarg1, NV_BOARD_INFO_V1 jarg1_, short[] jarg2);
  public final static native short[] NV_BOARD_INFO_V1_BoardNum_get(long jarg1, NV_BOARD_INFO_V1 jarg1_);
  public final static native long new_NV_BOARD_INFO_V1();
  public final static native void delete_NV_BOARD_INFO_V1(long jarg1);
  public final static native int NvAPI_GPU_GetBoardInfo(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, NV_BOARD_INFO_V1 jarg2_);
  public final static native int NVAPI_MAX_GPU_CLOCKS_get();
  public final static native int NVAPI_MAX_GPU_PUBLIC_CLOCKS_get();
  public final static native int NVAPI_MAX_GPU_PERF_CLOCKS_get();
  public final static native int NVAPI_MAX_GPU_PERF_VOLTAGES_get();
  public final static native int NVAPI_MAX_GPU_PERF_PSTATES_get();
  public final static native int NVAPI_GPU_PUBLIC_CLOCK_GRAPHICS_get();
  public final static native int NVAPI_GPU_PUBLIC_CLOCK_MEMORY_get();
  public final static native int NVAPI_GPU_PUBLIC_CLOCK_PROCESSOR_get();
  public final static native int NVAPI_GPU_PUBLIC_CLOCK_UNDEFINED_get();
  public final static native int NVAPI_GPU_PERF_VOLTAGE_INFO_DOMAIN_CORE_get();
  public final static native int NVAPI_GPU_PERF_VOLTAGE_INFO_DOMAIN_UNDEFINED_get();
  public final static native void NV_GPU_CLOCK_FREQUENCIES_V1_version_set(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_CLOCK_FREQUENCIES_V1_version_get(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V1 jarg1_);
  public final static native void NV_GPU_CLOCK_FREQUENCIES_V1_reserved_set(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_CLOCK_FREQUENCIES_V1_reserved_get(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V1 jarg1_);
  public final static native long NV_GPU_CLOCK_FREQUENCIES_V1_domain_get(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V1 jarg1_);
  public final static native long new_NV_GPU_CLOCK_FREQUENCIES_V1();
  public final static native void delete_NV_GPU_CLOCK_FREQUENCIES_V1(long jarg1);
  public final static native void NV_GPU_CLOCK_FREQUENCIES_V1_domain_bIsPresent_set(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V1_domain jarg1_, long jarg2);
  public final static native long NV_GPU_CLOCK_FREQUENCIES_V1_domain_bIsPresent_get(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V1_domain jarg1_);
  public final static native void NV_GPU_CLOCK_FREQUENCIES_V1_domain_reserved_set(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V1_domain jarg1_, long jarg2);
  public final static native long NV_GPU_CLOCK_FREQUENCIES_V1_domain_reserved_get(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V1_domain jarg1_);
  public final static native void NV_GPU_CLOCK_FREQUENCIES_V1_domain_frequency_set(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V1_domain jarg1_, long jarg2);
  public final static native long NV_GPU_CLOCK_FREQUENCIES_V1_domain_frequency_get(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V1_domain jarg1_);
  public final static native long new_NV_GPU_CLOCK_FREQUENCIES_V1_domain();
  public final static native void delete_NV_GPU_CLOCK_FREQUENCIES_V1_domain(long jarg1);
  public final static native int NV_GPU_CLOCK_FREQUENCIES_CURRENT_FREQ_get();
  public final static native int NV_GPU_CLOCK_FREQUENCIES_BASE_CLOCK_get();
  public final static native int NV_GPU_CLOCK_FREQUENCIES_BOOST_CLOCK_get();
  public final static native int NV_GPU_CLOCK_FREQUENCIES_CLOCK_TYPE_NUM_get();
  public final static native void NV_GPU_CLOCK_FREQUENCIES_V2_version_set(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_CLOCK_FREQUENCIES_V2_version_get(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V2 jarg1_);
  public final static native void NV_GPU_CLOCK_FREQUENCIES_V2_ClockType_set(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_CLOCK_FREQUENCIES_V2_ClockType_get(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V2 jarg1_);
  public final static native void NV_GPU_CLOCK_FREQUENCIES_V2_reserved_set(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_CLOCK_FREQUENCIES_V2_reserved_get(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V2 jarg1_);
  public final static native void NV_GPU_CLOCK_FREQUENCIES_V2_reserved1_set(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_CLOCK_FREQUENCIES_V2_reserved1_get(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V2 jarg1_);
  public final static native long NV_GPU_CLOCK_FREQUENCIES_V2_domain_get(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V2 jarg1_);
  public final static native long new_NV_GPU_CLOCK_FREQUENCIES_V2();
  public final static native void delete_NV_GPU_CLOCK_FREQUENCIES_V2(long jarg1);
  public final static native void NV_GPU_CLOCK_FREQUENCIES_V2_domain_bIsPresent_set(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V2_domain jarg1_, long jarg2);
  public final static native long NV_GPU_CLOCK_FREQUENCIES_V2_domain_bIsPresent_get(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V2_domain jarg1_);
  public final static native void NV_GPU_CLOCK_FREQUENCIES_V2_domain_reserved_set(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V2_domain jarg1_, long jarg2);
  public final static native long NV_GPU_CLOCK_FREQUENCIES_V2_domain_reserved_get(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V2_domain jarg1_);
  public final static native void NV_GPU_CLOCK_FREQUENCIES_V2_domain_frequency_set(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V2_domain jarg1_, long jarg2);
  public final static native long NV_GPU_CLOCK_FREQUENCIES_V2_domain_frequency_get(long jarg1, NV_GPU_CLOCK_FREQUENCIES_V2_domain jarg1_);
  public final static native long new_NV_GPU_CLOCK_FREQUENCIES_V2_domain();
  public final static native void delete_NV_GPU_CLOCK_FREQUENCIES_V2_domain(long jarg1);
  public final static native int NvAPI_GPU_GetAllClockFrequencies(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, NV_GPU_CLOCK_FREQUENCIES_V2 jarg2_);
  public final static native int NVAPI_GPU_PERF_PSTATE_P0_get();
  public final static native int NVAPI_GPU_PERF_PSTATE_UNDEFINED_get();
  public final static native void NV_GPU_PERF_PSTATES_INFO_V1_version_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V1_version_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V1_flags_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V1_flags_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V1_numPstates_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V1_numPstates_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V1_numClocks_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V1_numClocks_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1 jarg1_);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V1_pstates_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1 jarg1_);
  public final static native long new_NV_GPU_PERF_PSTATES_INFO_V1();
  public final static native void delete_NV_GPU_PERF_PSTATES_INFO_V1(long jarg1);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V1_pstates_pstateId_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1_pstates jarg1_, int jarg2);
  public final static native int NV_GPU_PERF_PSTATES_INFO_V1_pstates_pstateId_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1_pstates jarg1_);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V1_pstates_flags_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1_pstates jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V1_pstates_flags_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1_pstates jarg1_);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V1_pstates_clocks_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1_pstates jarg1_);
  public final static native long new_NV_GPU_PERF_PSTATES_INFO_V1_pstates();
  public final static native void delete_NV_GPU_PERF_PSTATES_INFO_V1_pstates(long jarg1);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V1_pstates_clocks_domainId_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1_pstates_clocks jarg1_, int jarg2);
  public final static native int NV_GPU_PERF_PSTATES_INFO_V1_pstates_clocks_domainId_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1_pstates_clocks jarg1_);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V1_pstates_clocks_flags_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1_pstates_clocks jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V1_pstates_clocks_flags_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1_pstates_clocks jarg1_);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V1_pstates_clocks_freq_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1_pstates_clocks jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V1_pstates_clocks_freq_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V1_pstates_clocks jarg1_);
  public final static native long new_NV_GPU_PERF_PSTATES_INFO_V1_pstates_clocks();
  public final static native void delete_NV_GPU_PERF_PSTATES_INFO_V1_pstates_clocks(long jarg1);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V2_version_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V2_version_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V2_flags_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V2_flags_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V2_numPstates_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V2_numPstates_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V2_numClocks_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V2_numClocks_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V2_numVoltages_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V2_numVoltages_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2 jarg1_);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V2_pstates_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2 jarg1_);
  public final static native long new_NV_GPU_PERF_PSTATES_INFO_V2();
  public final static native void delete_NV_GPU_PERF_PSTATES_INFO_V2(long jarg1);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V2_pstates_pstateId_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates jarg1_, int jarg2);
  public final static native int NV_GPU_PERF_PSTATES_INFO_V2_pstates_pstateId_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates jarg1_);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V2_pstates_flags_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V2_pstates_flags_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates jarg1_);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V2_pstates_clocks_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates jarg1_);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V2_pstates_voltages_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates jarg1_);
  public final static native long new_NV_GPU_PERF_PSTATES_INFO_V2_pstates();
  public final static native void delete_NV_GPU_PERF_PSTATES_INFO_V2_pstates(long jarg1);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V2_pstates_voltages_domainId_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates_voltages jarg1_, int jarg2);
  public final static native int NV_GPU_PERF_PSTATES_INFO_V2_pstates_voltages_domainId_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates_voltages jarg1_);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V2_pstates_voltages_flags_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates_voltages jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V2_pstates_voltages_flags_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates_voltages jarg1_);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V2_pstates_voltages_mvolt_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates_voltages jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V2_pstates_voltages_mvolt_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates_voltages jarg1_);
  public final static native long new_NV_GPU_PERF_PSTATES_INFO_V2_pstates_voltages();
  public final static native void delete_NV_GPU_PERF_PSTATES_INFO_V2_pstates_voltages(long jarg1);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V2_pstates_clocks_domainId_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates_clocks jarg1_, int jarg2);
  public final static native int NV_GPU_PERF_PSTATES_INFO_V2_pstates_clocks_domainId_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates_clocks jarg1_);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V2_pstates_clocks_flags_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates_clocks jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V2_pstates_clocks_flags_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates_clocks jarg1_);
  public final static native void NV_GPU_PERF_PSTATES_INFO_V2_pstates_clocks_freq_set(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates_clocks jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES_INFO_V2_pstates_clocks_freq_get(long jarg1, NV_GPU_PERF_PSTATES_INFO_V2_pstates_clocks jarg1_);
  public final static native long new_NV_GPU_PERF_PSTATES_INFO_V2_pstates_clocks();
  public final static native void delete_NV_GPU_PERF_PSTATES_INFO_V2_pstates_clocks(long jarg1);
  public final static native int NvAPI_GPU_GetPstatesInfoEx(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, NV_GPU_PERF_PSTATES_INFO_V2 jarg2_, long jarg3);
  public final static native int NVAPI_MAX_GPU_PSTATE20_PSTATES_get();
  public final static native int NVAPI_MAX_GPU_PSTATE20_CLOCKS_get();
  public final static native int NVAPI_MAX_GPU_PSTATE20_BASE_VOLTAGES_get();
  public final static native int NVAPI_GPU_PERF_PSTATE20_CLOCK_TYPE_SINGLE_get();
  public final static native void NV_GPU_PERF_PSTATES20_PARAM_DELTA_value_set(long jarg1, NV_GPU_PERF_PSTATES20_PARAM_DELTA jarg1_, int jarg2);
  public final static native int NV_GPU_PERF_PSTATES20_PARAM_DELTA_value_get(long jarg1, NV_GPU_PERF_PSTATES20_PARAM_DELTA jarg1_);
  public final static native long NV_GPU_PERF_PSTATES20_PARAM_DELTA_valueRange_get(long jarg1, NV_GPU_PERF_PSTATES20_PARAM_DELTA jarg1_);
  public final static native long new_NV_GPU_PERF_PSTATES20_PARAM_DELTA();
  public final static native void delete_NV_GPU_PERF_PSTATES20_PARAM_DELTA(long jarg1);
  public final static native void NV_GPU_PERF_PSTATES20_PARAM_DELTA_valueRange_min_set(long jarg1, NV_GPU_PERF_PSTATES20_PARAM_DELTA_valueRange jarg1_, int jarg2);
  public final static native int NV_GPU_PERF_PSTATES20_PARAM_DELTA_valueRange_min_get(long jarg1, NV_GPU_PERF_PSTATES20_PARAM_DELTA_valueRange jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_PARAM_DELTA_valueRange_max_set(long jarg1, NV_GPU_PERF_PSTATES20_PARAM_DELTA_valueRange jarg1_, int jarg2);
  public final static native int NV_GPU_PERF_PSTATES20_PARAM_DELTA_valueRange_max_get(long jarg1, NV_GPU_PERF_PSTATES20_PARAM_DELTA_valueRange jarg1_);
  public final static native long new_NV_GPU_PERF_PSTATES20_PARAM_DELTA_valueRange();
  public final static native void delete_NV_GPU_PERF_PSTATES20_PARAM_DELTA_valueRange(long jarg1);
  public final static native void NV_GPU_PSTATE20_CLOCK_ENTRY_V1_domainId_set(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1 jarg1_, int jarg2);
  public final static native int NV_GPU_PSTATE20_CLOCK_ENTRY_V1_domainId_get(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1 jarg1_);
  public final static native void NV_GPU_PSTATE20_CLOCK_ENTRY_V1_typeId_set(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1 jarg1_, int jarg2);
  public final static native int NV_GPU_PSTATE20_CLOCK_ENTRY_V1_typeId_get(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1 jarg1_);
  public final static native void NV_GPU_PSTATE20_CLOCK_ENTRY_V1_bIsEditable_set(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_PSTATE20_CLOCK_ENTRY_V1_bIsEditable_get(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1 jarg1_);
  public final static native void NV_GPU_PSTATE20_CLOCK_ENTRY_V1_reserved_set(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_PSTATE20_CLOCK_ENTRY_V1_reserved_get(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1 jarg1_);
  public final static native void NV_GPU_PSTATE20_CLOCK_ENTRY_V1_freqDelta_kHz_set(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1 jarg1_, long jarg2, NV_GPU_PERF_PSTATES20_PARAM_DELTA jarg2_);
  public final static native long NV_GPU_PSTATE20_CLOCK_ENTRY_V1_freqDelta_kHz_get(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1 jarg1_);
  public final static native long NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_get(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1 jarg1_);
  public final static native long new_NV_GPU_PSTATE20_CLOCK_ENTRY_V1();
  public final static native void delete_NV_GPU_PSTATE20_CLOCK_ENTRY_V1(long jarg1);
  public final static native long NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_single_get(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data jarg1_);
  public final static native long NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range_get(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data jarg1_);
  public final static native long new_NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data();
  public final static native void delete_NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data(long jarg1);
  public final static native void NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range_minFreq_kHz_set(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range jarg1_, long jarg2);
  public final static native long NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range_minFreq_kHz_get(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range jarg1_);
  public final static native void NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range_maxFreq_kHz_set(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range jarg1_, long jarg2);
  public final static native long NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range_maxFreq_kHz_get(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range jarg1_);
  public final static native void NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range_domainId_set(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range jarg1_, int jarg2);
  public final static native int NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range_domainId_get(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range jarg1_);
  public final static native void NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range_minVoltage_uV_set(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range jarg1_, long jarg2);
  public final static native long NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range_minVoltage_uV_get(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range jarg1_);
  public final static native void NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range_maxVoltage_uV_set(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range jarg1_, long jarg2);
  public final static native long NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range_maxVoltage_uV_get(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range jarg1_);
  public final static native long new_NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range();
  public final static native void delete_NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_range(long jarg1);
  public final static native void NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_single_freq_kHz_set(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_single jarg1_, long jarg2);
  public final static native long NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_single_freq_kHz_get(long jarg1, NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_single jarg1_);
  public final static native long new_NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_single();
  public final static native void delete_NV_GPU_PSTATE20_CLOCK_ENTRY_V1_data_single(long jarg1);
  public final static native void NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1_domainId_set(long jarg1, NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1 jarg1_, int jarg2);
  public final static native int NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1_domainId_get(long jarg1, NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1 jarg1_);
  public final static native void NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1_bIsEditable_set(long jarg1, NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1_bIsEditable_get(long jarg1, NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1 jarg1_);
  public final static native void NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1_reserved_set(long jarg1, NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1_reserved_get(long jarg1, NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1 jarg1_);
  public final static native void NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1_volt_uV_set(long jarg1, NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1_volt_uV_get(long jarg1, NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1 jarg1_);
  public final static native void NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1_voltDelta_uV_set(long jarg1, NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1 jarg1_, long jarg2, NV_GPU_PERF_PSTATES20_PARAM_DELTA jarg2_);
  public final static native long NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1_voltDelta_uV_get(long jarg1, NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1 jarg1_);
  public final static native long new_NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1();
  public final static native void delete_NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1(long jarg1);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V1_version_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V1_version_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V1_bIsEditable_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V1_bIsEditable_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V1_reserved_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V1_reserved_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V1_numPstates_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V1_numPstates_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V1_numClocks_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V1_numClocks_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V1_numBaseVoltages_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V1_numBaseVoltages_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1 jarg1_);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V1_pstates_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1 jarg1_);
  public final static native long new_NV_GPU_PERF_PSTATES20_INFO_V1();
  public final static native void delete_NV_GPU_PERF_PSTATES20_INFO_V1(long jarg1);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V1_pstates_pstateId_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1_pstates jarg1_, int jarg2);
  public final static native int NV_GPU_PERF_PSTATES20_INFO_V1_pstates_pstateId_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1_pstates jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V1_pstates_bIsEditable_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1_pstates jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V1_pstates_bIsEditable_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1_pstates jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V1_pstates_reserved_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1_pstates jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V1_pstates_reserved_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1_pstates jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V1_pstates_clocks_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1_pstates jarg1_, long jarg2, NV_GPU_PSTATE20_CLOCK_ENTRY_V1 jarg2_);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V1_pstates_clocks_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1_pstates jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V1_pstates_baseVoltages_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1_pstates jarg1_, long jarg2, NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1 jarg2_);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V1_pstates_baseVoltages_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V1_pstates jarg1_);
  public final static native long new_NV_GPU_PERF_PSTATES20_INFO_V1_pstates();
  public final static native void delete_NV_GPU_PERF_PSTATES20_INFO_V1_pstates(long jarg1);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V2_version_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V2_version_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V2_bIsEditable_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V2_bIsEditable_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V2_reserved_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V2_reserved_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V2_numPstates_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V2_numPstates_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V2_numClocks_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V2_numClocks_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2 jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V2_numBaseVoltages_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V2_numBaseVoltages_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2 jarg1_);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V2_pstates_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2 jarg1_);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V2_ov_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2 jarg1_);
  public final static native long new_NV_GPU_PERF_PSTATES20_INFO_V2();
  public final static native void delete_NV_GPU_PERF_PSTATES20_INFO_V2(long jarg1);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V2_ov_numVoltages_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2_ov jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V2_ov_numVoltages_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2_ov jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V2_ov_voltages_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2_ov jarg1_, long jarg2, NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1 jarg2_);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V2_ov_voltages_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2_ov jarg1_);
  public final static native long new_NV_GPU_PERF_PSTATES20_INFO_V2_ov();
  public final static native void delete_NV_GPU_PERF_PSTATES20_INFO_V2_ov(long jarg1);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V2_pstates_pstateId_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2_pstates jarg1_, int jarg2);
  public final static native int NV_GPU_PERF_PSTATES20_INFO_V2_pstates_pstateId_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2_pstates jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V2_pstates_bIsEditable_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2_pstates jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V2_pstates_bIsEditable_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2_pstates jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V2_pstates_reserved_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2_pstates jarg1_, long jarg2);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V2_pstates_reserved_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2_pstates jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V2_pstates_clocks_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2_pstates jarg1_, long jarg2, NV_GPU_PSTATE20_CLOCK_ENTRY_V1 jarg2_);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V2_pstates_clocks_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2_pstates jarg1_);
  public final static native void NV_GPU_PERF_PSTATES20_INFO_V2_pstates_baseVoltages_set(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2_pstates jarg1_, long jarg2, NV_GPU_PSTATE20_BASE_VOLTAGE_ENTRY_V1 jarg2_);
  public final static native long NV_GPU_PERF_PSTATES20_INFO_V2_pstates_baseVoltages_get(long jarg1, NV_GPU_PERF_PSTATES20_INFO_V2_pstates jarg1_);
  public final static native long new_NV_GPU_PERF_PSTATES20_INFO_V2_pstates();
  public final static native void delete_NV_GPU_PERF_PSTATES20_INFO_V2_pstates(long jarg1);
  public final static native int NvAPI_GPU_GetPstates20(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, NV_GPU_PERF_PSTATES20_INFO_V2 jarg2_);
  public final static native int NvAPI_GPU_GetCurrentPstate(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NVAPI_MAX_GPU_UTILIZATIONS_get();
  public final static native void NV_GPU_DYNAMIC_PSTATES_INFO_EX_version_set(long jarg1, NV_GPU_DYNAMIC_PSTATES_INFO_EX jarg1_, long jarg2);
  public final static native long NV_GPU_DYNAMIC_PSTATES_INFO_EX_version_get(long jarg1, NV_GPU_DYNAMIC_PSTATES_INFO_EX jarg1_);
  public final static native void NV_GPU_DYNAMIC_PSTATES_INFO_EX_flags_set(long jarg1, NV_GPU_DYNAMIC_PSTATES_INFO_EX jarg1_, long jarg2);
  public final static native long NV_GPU_DYNAMIC_PSTATES_INFO_EX_flags_get(long jarg1, NV_GPU_DYNAMIC_PSTATES_INFO_EX jarg1_);
  public final static native long NV_GPU_DYNAMIC_PSTATES_INFO_EX_utilization_get(long jarg1, NV_GPU_DYNAMIC_PSTATES_INFO_EX jarg1_);
  public final static native long new_NV_GPU_DYNAMIC_PSTATES_INFO_EX();
  public final static native void delete_NV_GPU_DYNAMIC_PSTATES_INFO_EX(long jarg1);
  public final static native void NV_GPU_DYNAMIC_PSTATES_INFO_EX_utilization_bIsPresent_set(long jarg1, NV_GPU_DYNAMIC_PSTATES_INFO_EX_utilization jarg1_, long jarg2);
  public final static native long NV_GPU_DYNAMIC_PSTATES_INFO_EX_utilization_bIsPresent_get(long jarg1, NV_GPU_DYNAMIC_PSTATES_INFO_EX_utilization jarg1_);
  public final static native void NV_GPU_DYNAMIC_PSTATES_INFO_EX_utilization_percentage_set(long jarg1, NV_GPU_DYNAMIC_PSTATES_INFO_EX_utilization jarg1_, long jarg2);
  public final static native long NV_GPU_DYNAMIC_PSTATES_INFO_EX_utilization_percentage_get(long jarg1, NV_GPU_DYNAMIC_PSTATES_INFO_EX_utilization jarg1_);
  public final static native long new_NV_GPU_DYNAMIC_PSTATES_INFO_EX_utilization();
  public final static native void delete_NV_GPU_DYNAMIC_PSTATES_INFO_EX_utilization(long jarg1);
  public final static native int NvAPI_GPU_GetDynamicPstatesInfoEx(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, NV_GPU_DYNAMIC_PSTATES_INFO_EX jarg2_);
  public final static native int NVAPI_MAX_THERMAL_SENSORS_PER_GPU_get();
  public final static native int NVAPI_THERMAL_TARGET_NONE_get();
  public final static native int NVAPI_THERMAL_TARGET_GPU_get();
  public final static native int NVAPI_THERMAL_TARGET_MEMORY_get();
  public final static native int NVAPI_THERMAL_TARGET_POWER_SUPPLY_get();
  public final static native int NVAPI_THERMAL_TARGET_BOARD_get();
  public final static native int NVAPI_THERMAL_TARGET_VCD_BOARD_get();
  public final static native int NVAPI_THERMAL_TARGET_VCD_INLET_get();
  public final static native int NVAPI_THERMAL_TARGET_VCD_OUTLET_get();
  public final static native int NVAPI_THERMAL_TARGET_ALL_get();
  public final static native int NVAPI_THERMAL_TARGET_UNKNOWN_get();
  public final static native int NVAPI_THERMAL_CONTROLLER_NONE_get();
  public final static native int NVAPI_THERMAL_CONTROLLER_UNKNOWN_get();
  public final static native void NV_GPU_THERMAL_SETTINGS_V1_version_set(long jarg1, NV_GPU_THERMAL_SETTINGS_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_THERMAL_SETTINGS_V1_version_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V1 jarg1_);
  public final static native void NV_GPU_THERMAL_SETTINGS_V1_count_set(long jarg1, NV_GPU_THERMAL_SETTINGS_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_THERMAL_SETTINGS_V1_count_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V1 jarg1_);
  public final static native long NV_GPU_THERMAL_SETTINGS_V1_sensor_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V1 jarg1_);
  public final static native long new_NV_GPU_THERMAL_SETTINGS_V1();
  public final static native void delete_NV_GPU_THERMAL_SETTINGS_V1(long jarg1);
  public final static native void NV_GPU_THERMAL_SETTINGS_V1_sensor_controller_set(long jarg1, NV_GPU_THERMAL_SETTINGS_V1_sensor jarg1_, int jarg2);
  public final static native int NV_GPU_THERMAL_SETTINGS_V1_sensor_controller_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V1_sensor jarg1_);
  public final static native void NV_GPU_THERMAL_SETTINGS_V1_sensor_defaultMinTemp_set(long jarg1, NV_GPU_THERMAL_SETTINGS_V1_sensor jarg1_, long jarg2);
  public final static native long NV_GPU_THERMAL_SETTINGS_V1_sensor_defaultMinTemp_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V1_sensor jarg1_);
  public final static native void NV_GPU_THERMAL_SETTINGS_V1_sensor_defaultMaxTemp_set(long jarg1, NV_GPU_THERMAL_SETTINGS_V1_sensor jarg1_, long jarg2);
  public final static native long NV_GPU_THERMAL_SETTINGS_V1_sensor_defaultMaxTemp_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V1_sensor jarg1_);
  public final static native void NV_GPU_THERMAL_SETTINGS_V1_sensor_currentTemp_set(long jarg1, NV_GPU_THERMAL_SETTINGS_V1_sensor jarg1_, long jarg2);
  public final static native long NV_GPU_THERMAL_SETTINGS_V1_sensor_currentTemp_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V1_sensor jarg1_);
  public final static native void NV_GPU_THERMAL_SETTINGS_V1_sensor_target_set(long jarg1, NV_GPU_THERMAL_SETTINGS_V1_sensor jarg1_, int jarg2);
  public final static native int NV_GPU_THERMAL_SETTINGS_V1_sensor_target_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V1_sensor jarg1_);
  public final static native long new_NV_GPU_THERMAL_SETTINGS_V1_sensor();
  public final static native void delete_NV_GPU_THERMAL_SETTINGS_V1_sensor(long jarg1);
  public final static native void NV_GPU_THERMAL_SETTINGS_V2_version_set(long jarg1, NV_GPU_THERMAL_SETTINGS_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_THERMAL_SETTINGS_V2_version_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V2 jarg1_);
  public final static native void NV_GPU_THERMAL_SETTINGS_V2_count_set(long jarg1, NV_GPU_THERMAL_SETTINGS_V2 jarg1_, long jarg2);
  public final static native long NV_GPU_THERMAL_SETTINGS_V2_count_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V2 jarg1_);
  public final static native long NV_GPU_THERMAL_SETTINGS_V2_sensor_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V2 jarg1_);
  public final static native long new_NV_GPU_THERMAL_SETTINGS_V2();
  public final static native void delete_NV_GPU_THERMAL_SETTINGS_V2(long jarg1);
  public final static native void NV_GPU_THERMAL_SETTINGS_V2_sensor_controller_set(long jarg1, NV_GPU_THERMAL_SETTINGS_V2_sensor jarg1_, int jarg2);
  public final static native int NV_GPU_THERMAL_SETTINGS_V2_sensor_controller_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V2_sensor jarg1_);
  public final static native void NV_GPU_THERMAL_SETTINGS_V2_sensor_defaultMinTemp_set(long jarg1, NV_GPU_THERMAL_SETTINGS_V2_sensor jarg1_, int jarg2);
  public final static native int NV_GPU_THERMAL_SETTINGS_V2_sensor_defaultMinTemp_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V2_sensor jarg1_);
  public final static native void NV_GPU_THERMAL_SETTINGS_V2_sensor_defaultMaxTemp_set(long jarg1, NV_GPU_THERMAL_SETTINGS_V2_sensor jarg1_, int jarg2);
  public final static native int NV_GPU_THERMAL_SETTINGS_V2_sensor_defaultMaxTemp_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V2_sensor jarg1_);
  public final static native void NV_GPU_THERMAL_SETTINGS_V2_sensor_currentTemp_set(long jarg1, NV_GPU_THERMAL_SETTINGS_V2_sensor jarg1_, int jarg2);
  public final static native int NV_GPU_THERMAL_SETTINGS_V2_sensor_currentTemp_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V2_sensor jarg1_);
  public final static native void NV_GPU_THERMAL_SETTINGS_V2_sensor_target_set(long jarg1, NV_GPU_THERMAL_SETTINGS_V2_sensor jarg1_, int jarg2);
  public final static native int NV_GPU_THERMAL_SETTINGS_V2_sensor_target_get(long jarg1, NV_GPU_THERMAL_SETTINGS_V2_sensor jarg1_);
  public final static native long new_NV_GPU_THERMAL_SETTINGS_V2_sensor();
  public final static native void delete_NV_GPU_THERMAL_SETTINGS_V2_sensor(long jarg1);
  public final static native int NvAPI_GPU_GetThermalSettings(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, long jarg3, NV_GPU_THERMAL_SETTINGS_V2 jarg3_);
  public final static native int NVAPI_MAX_SIZEOF_I2C_DATA_BUFFER_get();
  public final static native int NVAPI_MAX_SIZEOF_I2C_REG_ADDRESS_get();
  public final static native int NVAPI_DISPLAY_DEVICE_MASK_MAX_get();
  public final static native int NVAPI_I2C_SPEED_DEPRECATED_get();
  public final static native void NV_I2C_INFO_V1_version_set(long jarg1, NV_I2C_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V1_version_get(long jarg1, NV_I2C_INFO_V1 jarg1_);
  public final static native void NV_I2C_INFO_V1_displayMask_set(long jarg1, NV_I2C_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V1_displayMask_get(long jarg1, NV_I2C_INFO_V1 jarg1_);
  public final static native void NV_I2C_INFO_V1_bIsDDCPort_set(long jarg1, NV_I2C_INFO_V1 jarg1_, short jarg2);
  public final static native short NV_I2C_INFO_V1_bIsDDCPort_get(long jarg1, NV_I2C_INFO_V1 jarg1_);
  public final static native void NV_I2C_INFO_V1_i2cDevAddress_set(long jarg1, NV_I2C_INFO_V1 jarg1_, short jarg2);
  public final static native short NV_I2C_INFO_V1_i2cDevAddress_get(long jarg1, NV_I2C_INFO_V1 jarg1_);
  public final static native void NV_I2C_INFO_V1_pbI2cRegAddress_set(long jarg1, NV_I2C_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V1_pbI2cRegAddress_get(long jarg1, NV_I2C_INFO_V1 jarg1_);
  public final static native void NV_I2C_INFO_V1_regAddrSize_set(long jarg1, NV_I2C_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V1_regAddrSize_get(long jarg1, NV_I2C_INFO_V1 jarg1_);
  public final static native void NV_I2C_INFO_V1_pbData_set(long jarg1, NV_I2C_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V1_pbData_get(long jarg1, NV_I2C_INFO_V1 jarg1_);
  public final static native void NV_I2C_INFO_V1_cbSize_set(long jarg1, NV_I2C_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V1_cbSize_get(long jarg1, NV_I2C_INFO_V1 jarg1_);
  public final static native void NV_I2C_INFO_V1_i2cSpeed_set(long jarg1, NV_I2C_INFO_V1 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V1_i2cSpeed_get(long jarg1, NV_I2C_INFO_V1 jarg1_);
  public final static native long new_NV_I2C_INFO_V1();
  public final static native void delete_NV_I2C_INFO_V1(long jarg1);
  public final static native void NV_I2C_INFO_V2_version_set(long jarg1, NV_I2C_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V2_version_get(long jarg1, NV_I2C_INFO_V2 jarg1_);
  public final static native void NV_I2C_INFO_V2_displayMask_set(long jarg1, NV_I2C_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V2_displayMask_get(long jarg1, NV_I2C_INFO_V2 jarg1_);
  public final static native void NV_I2C_INFO_V2_bIsDDCPort_set(long jarg1, NV_I2C_INFO_V2 jarg1_, short jarg2);
  public final static native short NV_I2C_INFO_V2_bIsDDCPort_get(long jarg1, NV_I2C_INFO_V2 jarg1_);
  public final static native void NV_I2C_INFO_V2_i2cDevAddress_set(long jarg1, NV_I2C_INFO_V2 jarg1_, short jarg2);
  public final static native short NV_I2C_INFO_V2_i2cDevAddress_get(long jarg1, NV_I2C_INFO_V2 jarg1_);
  public final static native void NV_I2C_INFO_V2_pbI2cRegAddress_set(long jarg1, NV_I2C_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V2_pbI2cRegAddress_get(long jarg1, NV_I2C_INFO_V2 jarg1_);
  public final static native void NV_I2C_INFO_V2_regAddrSize_set(long jarg1, NV_I2C_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V2_regAddrSize_get(long jarg1, NV_I2C_INFO_V2 jarg1_);
  public final static native void NV_I2C_INFO_V2_pbData_set(long jarg1, NV_I2C_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V2_pbData_get(long jarg1, NV_I2C_INFO_V2 jarg1_);
  public final static native void NV_I2C_INFO_V2_cbSize_set(long jarg1, NV_I2C_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V2_cbSize_get(long jarg1, NV_I2C_INFO_V2 jarg1_);
  public final static native void NV_I2C_INFO_V2_i2cSpeed_set(long jarg1, NV_I2C_INFO_V2 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V2_i2cSpeed_get(long jarg1, NV_I2C_INFO_V2 jarg1_);
  public final static native void NV_I2C_INFO_V2_i2cSpeedKhz_set(long jarg1, NV_I2C_INFO_V2 jarg1_, int jarg2);
  public final static native int NV_I2C_INFO_V2_i2cSpeedKhz_get(long jarg1, NV_I2C_INFO_V2 jarg1_);
  public final static native long new_NV_I2C_INFO_V2();
  public final static native void delete_NV_I2C_INFO_V2(long jarg1);
  public final static native void NV_I2C_INFO_V3_version_set(long jarg1, NV_I2C_INFO_V3 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V3_version_get(long jarg1, NV_I2C_INFO_V3 jarg1_);
  public final static native void NV_I2C_INFO_V3_displayMask_set(long jarg1, NV_I2C_INFO_V3 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V3_displayMask_get(long jarg1, NV_I2C_INFO_V3 jarg1_);
  public final static native void NV_I2C_INFO_V3_bIsDDCPort_set(long jarg1, NV_I2C_INFO_V3 jarg1_, short jarg2);
  public final static native short NV_I2C_INFO_V3_bIsDDCPort_get(long jarg1, NV_I2C_INFO_V3 jarg1_);
  public final static native void NV_I2C_INFO_V3_i2cDevAddress_set(long jarg1, NV_I2C_INFO_V3 jarg1_, short jarg2);
  public final static native short NV_I2C_INFO_V3_i2cDevAddress_get(long jarg1, NV_I2C_INFO_V3 jarg1_);
  public final static native void NV_I2C_INFO_V3_pbI2cRegAddress_set(long jarg1, NV_I2C_INFO_V3 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V3_pbI2cRegAddress_get(long jarg1, NV_I2C_INFO_V3 jarg1_);
  public final static native void NV_I2C_INFO_V3_regAddrSize_set(long jarg1, NV_I2C_INFO_V3 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V3_regAddrSize_get(long jarg1, NV_I2C_INFO_V3 jarg1_);
  public final static native void NV_I2C_INFO_V3_pbData_set(long jarg1, NV_I2C_INFO_V3 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V3_pbData_get(long jarg1, NV_I2C_INFO_V3 jarg1_);
  public final static native void NV_I2C_INFO_V3_cbSize_set(long jarg1, NV_I2C_INFO_V3 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V3_cbSize_get(long jarg1, NV_I2C_INFO_V3 jarg1_);
  public final static native void NV_I2C_INFO_V3_i2cSpeed_set(long jarg1, NV_I2C_INFO_V3 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V3_i2cSpeed_get(long jarg1, NV_I2C_INFO_V3 jarg1_);
  public final static native void NV_I2C_INFO_V3_i2cSpeedKhz_set(long jarg1, NV_I2C_INFO_V3 jarg1_, int jarg2);
  public final static native int NV_I2C_INFO_V3_i2cSpeedKhz_get(long jarg1, NV_I2C_INFO_V3 jarg1_);
  public final static native void NV_I2C_INFO_V3_portId_set(long jarg1, NV_I2C_INFO_V3 jarg1_, short jarg2);
  public final static native short NV_I2C_INFO_V3_portId_get(long jarg1, NV_I2C_INFO_V3 jarg1_);
  public final static native void NV_I2C_INFO_V3_bIsPortIdSet_set(long jarg1, NV_I2C_INFO_V3 jarg1_, long jarg2);
  public final static native long NV_I2C_INFO_V3_bIsPortIdSet_get(long jarg1, NV_I2C_INFO_V3 jarg1_);
  public final static native long new_NV_I2C_INFO_V3();
  public final static native void delete_NV_I2C_INFO_V3(long jarg1);
  public final static native int NvAPI_I2CRead(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, NV_I2C_INFO_V3 jarg2_);
  public final static native int NvAPI_I2CWrite(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, NV_I2C_INFO_V3 jarg2_);
  public final static native int NVAPI_GPU_WORKSTATION_FEATURE_MASK_SWAPGROUP_get();
  public final static native int NVAPI_GPU_WORKSTATION_FEATURE_MASK_STEREO_get();
  public final static native int NVAPI_GPU_WORKSTATION_FEATURE_MASK_WARPING_get();
  public final static native int NVAPI_GPU_WORKSTATION_FEATURE_MASK_PIXINTENSITY_get();
  public final static native int NVAPI_GPU_WORKSTATION_FEATURE_MASK_GRAYSCALE_get();
  public final static native int NVAPI_GPU_WORKSTATION_FEATURE_MASK_BPC10_get();
  public final static native int NvAPI_GPU_WorkstationFeatureSetup(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, long jarg3);
  public final static native int NvAPI_GPU_WorkstationFeatureQuery(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, long jarg3);
  public final static native int NV_GPU_HDCP_FUSE_STATE_UNKNOWN_get();
  public final static native int NV_GPU_HDCP_FUSE_STATE_DISABLED_get();
  public final static native int NV_GPU_HDCP_FUSE_STATE_ENABLED_get();
  public final static native int NV_GPU_HDCP_KEY_SOURCE_UNKNOWN_get();
  public final static native int NV_GPU_HDCP_KEY_SOURCE_NONE_get();
  public final static native int NV_GPU_HDCP_KEY_SOURCE_CRYPTO_ROM_get();
  public final static native int NV_GPU_HDCP_KEY_SOURCE_SBIOS_get();
  public final static native int NV_GPU_HDCP_KEY_SOURCE_I2C_ROM_get();
  public final static native int NV_GPU_HDCP_KEY_SOURCE_FUSES_get();
  public final static native int NV_GPU_HDCP_KEY_SOURCE_STATE_UNKNOWN_get();
  public final static native int NV_GPU_HDCP_KEY_SOURCE_STATE_ABSENT_get();
  public final static native int NV_GPU_HDCP_KEY_SOURCE_STATE_PRESENT_get();
  public final static native void NV_GPU_GET_HDCP_SUPPORT_STATUS_version_set(long jarg1, NV_GPU_GET_HDCP_SUPPORT_STATUS jarg1_, long jarg2);
  public final static native long NV_GPU_GET_HDCP_SUPPORT_STATUS_version_get(long jarg1, NV_GPU_GET_HDCP_SUPPORT_STATUS jarg1_);
  public final static native void NV_GPU_GET_HDCP_SUPPORT_STATUS_hdcpFuseState_set(long jarg1, NV_GPU_GET_HDCP_SUPPORT_STATUS jarg1_, int jarg2);
  public final static native int NV_GPU_GET_HDCP_SUPPORT_STATUS_hdcpFuseState_get(long jarg1, NV_GPU_GET_HDCP_SUPPORT_STATUS jarg1_);
  public final static native void NV_GPU_GET_HDCP_SUPPORT_STATUS_hdcpKeySource_set(long jarg1, NV_GPU_GET_HDCP_SUPPORT_STATUS jarg1_, int jarg2);
  public final static native int NV_GPU_GET_HDCP_SUPPORT_STATUS_hdcpKeySource_get(long jarg1, NV_GPU_GET_HDCP_SUPPORT_STATUS jarg1_);
  public final static native void NV_GPU_GET_HDCP_SUPPORT_STATUS_hdcpKeySourceState_set(long jarg1, NV_GPU_GET_HDCP_SUPPORT_STATUS jarg1_, int jarg2);
  public final static native int NV_GPU_GET_HDCP_SUPPORT_STATUS_hdcpKeySourceState_get(long jarg1, NV_GPU_GET_HDCP_SUPPORT_STATUS jarg1_);
  public final static native long new_NV_GPU_GET_HDCP_SUPPORT_STATUS();
  public final static native void delete_NV_GPU_GET_HDCP_SUPPORT_STATUS(long jarg1);
  public final static native int NvAPI_GPU_GetHDCPSupportStatus(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, NV_GPU_GET_HDCP_SUPPORT_STATUS jarg2_);
  public final static native int NvAPI_GPU_GetTachReading(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NV_ECC_CONFIGURATION_NOT_SUPPORTED_get();
  public final static native void NV_GPU_ECC_STATUS_INFO_version_set(long jarg1, NV_GPU_ECC_STATUS_INFO jarg1_, long jarg2);
  public final static native long NV_GPU_ECC_STATUS_INFO_version_get(long jarg1, NV_GPU_ECC_STATUS_INFO jarg1_);
  public final static native void NV_GPU_ECC_STATUS_INFO_isSupported_set(long jarg1, NV_GPU_ECC_STATUS_INFO jarg1_, long jarg2);
  public final static native long NV_GPU_ECC_STATUS_INFO_isSupported_get(long jarg1, NV_GPU_ECC_STATUS_INFO jarg1_);
  public final static native void NV_GPU_ECC_STATUS_INFO_configurationOptions_set(long jarg1, NV_GPU_ECC_STATUS_INFO jarg1_, int jarg2);
  public final static native int NV_GPU_ECC_STATUS_INFO_configurationOptions_get(long jarg1, NV_GPU_ECC_STATUS_INFO jarg1_);
  public final static native void NV_GPU_ECC_STATUS_INFO_isEnabled_set(long jarg1, NV_GPU_ECC_STATUS_INFO jarg1_, long jarg2);
  public final static native long NV_GPU_ECC_STATUS_INFO_isEnabled_get(long jarg1, NV_GPU_ECC_STATUS_INFO jarg1_);
  public final static native long new_NV_GPU_ECC_STATUS_INFO();
  public final static native void delete_NV_GPU_ECC_STATUS_INFO(long jarg1);
  public final static native int NvAPI_GPU_GetECCStatusInfo(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, NV_GPU_ECC_STATUS_INFO jarg2_);
  public final static native void NV_GPU_ECC_ERROR_INFO_version_set(long jarg1, NV_GPU_ECC_ERROR_INFO jarg1_, long jarg2);
  public final static native long NV_GPU_ECC_ERROR_INFO_version_get(long jarg1, NV_GPU_ECC_ERROR_INFO jarg1_);
  public final static native long NV_GPU_ECC_ERROR_INFO_current_get(long jarg1, NV_GPU_ECC_ERROR_INFO jarg1_);
  public final static native long NV_GPU_ECC_ERROR_INFO_aggregate_get(long jarg1, NV_GPU_ECC_ERROR_INFO jarg1_);
  public final static native long new_NV_GPU_ECC_ERROR_INFO();
  public final static native void delete_NV_GPU_ECC_ERROR_INFO(long jarg1);
  public final static native void NV_GPU_ECC_ERROR_INFO_aggregate_singleBitErrors_set(long jarg1, NV_GPU_ECC_ERROR_INFO_aggregate jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger NV_GPU_ECC_ERROR_INFO_aggregate_singleBitErrors_get(long jarg1, NV_GPU_ECC_ERROR_INFO_aggregate jarg1_);
  public final static native void NV_GPU_ECC_ERROR_INFO_aggregate_doubleBitErrors_set(long jarg1, NV_GPU_ECC_ERROR_INFO_aggregate jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger NV_GPU_ECC_ERROR_INFO_aggregate_doubleBitErrors_get(long jarg1, NV_GPU_ECC_ERROR_INFO_aggregate jarg1_);
  public final static native long new_NV_GPU_ECC_ERROR_INFO_aggregate();
  public final static native void delete_NV_GPU_ECC_ERROR_INFO_aggregate(long jarg1);
  public final static native void NV_GPU_ECC_ERROR_INFO_current_singleBitErrors_set(long jarg1, NV_GPU_ECC_ERROR_INFO_current jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger NV_GPU_ECC_ERROR_INFO_current_singleBitErrors_get(long jarg1, NV_GPU_ECC_ERROR_INFO_current jarg1_);
  public final static native void NV_GPU_ECC_ERROR_INFO_current_doubleBitErrors_set(long jarg1, NV_GPU_ECC_ERROR_INFO_current jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger NV_GPU_ECC_ERROR_INFO_current_doubleBitErrors_get(long jarg1, NV_GPU_ECC_ERROR_INFO_current jarg1_);
  public final static native long new_NV_GPU_ECC_ERROR_INFO_current();
  public final static native void delete_NV_GPU_ECC_ERROR_INFO_current(long jarg1);
  public final static native int NvAPI_GPU_GetECCErrorInfo(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, NV_GPU_ECC_ERROR_INFO jarg2_);
  public final static native int NvAPI_GPU_ResetECCErrorInfo(long jarg1, NvPhysicalGpuHandle__ jarg1_, short jarg2, short jarg3);
  public final static native void NV_GPU_ECC_CONFIGURATION_INFO_version_set(long jarg1, NV_GPU_ECC_CONFIGURATION_INFO jarg1_, long jarg2);
  public final static native long NV_GPU_ECC_CONFIGURATION_INFO_version_get(long jarg1, NV_GPU_ECC_CONFIGURATION_INFO jarg1_);
  public final static native void NV_GPU_ECC_CONFIGURATION_INFO_isEnabled_set(long jarg1, NV_GPU_ECC_CONFIGURATION_INFO jarg1_, long jarg2);
  public final static native long NV_GPU_ECC_CONFIGURATION_INFO_isEnabled_get(long jarg1, NV_GPU_ECC_CONFIGURATION_INFO jarg1_);
  public final static native void NV_GPU_ECC_CONFIGURATION_INFO_isEnabledByDefault_set(long jarg1, NV_GPU_ECC_CONFIGURATION_INFO jarg1_, long jarg2);
  public final static native long NV_GPU_ECC_CONFIGURATION_INFO_isEnabledByDefault_get(long jarg1, NV_GPU_ECC_CONFIGURATION_INFO jarg1_);
  public final static native long new_NV_GPU_ECC_CONFIGURATION_INFO();
  public final static native void delete_NV_GPU_ECC_CONFIGURATION_INFO(long jarg1);
  public final static native int NvAPI_GPU_GetECCConfigurationInfo(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, NV_GPU_ECC_CONFIGURATION_INFO jarg2_);
  public final static native int NvAPI_GPU_SetECCConfiguration(long jarg1, NvPhysicalGpuHandle__ jarg1_, short jarg2, short jarg3);
  public final static native void NV_SCANOUT_INTENSITY_DATA_V1_version_set(long jarg1, NV_SCANOUT_INTENSITY_DATA_V1 jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INTENSITY_DATA_V1_version_get(long jarg1, NV_SCANOUT_INTENSITY_DATA_V1 jarg1_);
  public final static native void NV_SCANOUT_INTENSITY_DATA_V1_width_set(long jarg1, NV_SCANOUT_INTENSITY_DATA_V1 jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INTENSITY_DATA_V1_width_get(long jarg1, NV_SCANOUT_INTENSITY_DATA_V1 jarg1_);
  public final static native void NV_SCANOUT_INTENSITY_DATA_V1_height_set(long jarg1, NV_SCANOUT_INTENSITY_DATA_V1 jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INTENSITY_DATA_V1_height_get(long jarg1, NV_SCANOUT_INTENSITY_DATA_V1 jarg1_);
  public final static native void NV_SCANOUT_INTENSITY_DATA_V1_blendingTexture_set(long jarg1, NV_SCANOUT_INTENSITY_DATA_V1 jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INTENSITY_DATA_V1_blendingTexture_get(long jarg1, NV_SCANOUT_INTENSITY_DATA_V1 jarg1_);
  public final static native long new_NV_SCANOUT_INTENSITY_DATA_V1();
  public final static native void delete_NV_SCANOUT_INTENSITY_DATA_V1(long jarg1);
  public final static native void NV_SCANOUT_INTENSITY_DATA_V2_version_set(long jarg1, NV_SCANOUT_INTENSITY_DATA_V2 jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INTENSITY_DATA_V2_version_get(long jarg1, NV_SCANOUT_INTENSITY_DATA_V2 jarg1_);
  public final static native void NV_SCANOUT_INTENSITY_DATA_V2_width_set(long jarg1, NV_SCANOUT_INTENSITY_DATA_V2 jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INTENSITY_DATA_V2_width_get(long jarg1, NV_SCANOUT_INTENSITY_DATA_V2 jarg1_);
  public final static native void NV_SCANOUT_INTENSITY_DATA_V2_height_set(long jarg1, NV_SCANOUT_INTENSITY_DATA_V2 jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INTENSITY_DATA_V2_height_get(long jarg1, NV_SCANOUT_INTENSITY_DATA_V2 jarg1_);
  public final static native void NV_SCANOUT_INTENSITY_DATA_V2_blendingTexture_set(long jarg1, NV_SCANOUT_INTENSITY_DATA_V2 jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INTENSITY_DATA_V2_blendingTexture_get(long jarg1, NV_SCANOUT_INTENSITY_DATA_V2 jarg1_);
  public final static native void NV_SCANOUT_INTENSITY_DATA_V2_offsetTexture_set(long jarg1, NV_SCANOUT_INTENSITY_DATA_V2 jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INTENSITY_DATA_V2_offsetTexture_get(long jarg1, NV_SCANOUT_INTENSITY_DATA_V2 jarg1_);
  public final static native void NV_SCANOUT_INTENSITY_DATA_V2_offsetTexChannels_set(long jarg1, NV_SCANOUT_INTENSITY_DATA_V2 jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INTENSITY_DATA_V2_offsetTexChannels_get(long jarg1, NV_SCANOUT_INTENSITY_DATA_V2 jarg1_);
  public final static native long new_NV_SCANOUT_INTENSITY_DATA_V2();
  public final static native void delete_NV_SCANOUT_INTENSITY_DATA_V2(long jarg1);
  public final static native int NvAPI_GPU_SetScanoutIntensity(long jarg1, long jarg2, NV_SCANOUT_INTENSITY_DATA_V2 jarg2_, int[] jarg3);
  public final static native void NV_SCANOUT_INTENSITY_STATE_DATA_version_set(long jarg1, NV_SCANOUT_INTENSITY_STATE_DATA jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INTENSITY_STATE_DATA_version_get(long jarg1, NV_SCANOUT_INTENSITY_STATE_DATA jarg1_);
  public final static native void NV_SCANOUT_INTENSITY_STATE_DATA_bEnabled_set(long jarg1, NV_SCANOUT_INTENSITY_STATE_DATA jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INTENSITY_STATE_DATA_bEnabled_get(long jarg1, NV_SCANOUT_INTENSITY_STATE_DATA jarg1_);
  public final static native long new_NV_SCANOUT_INTENSITY_STATE_DATA();
  public final static native void delete_NV_SCANOUT_INTENSITY_STATE_DATA(long jarg1);
  public final static native int NvAPI_GPU_GetScanoutIntensityState(long jarg1, long jarg2, NV_SCANOUT_INTENSITY_STATE_DATA jarg2_);
  public final static native int NV_GPU_WARPING_VERTICE_FORMAT_TRIANGLESTRIP_XYUVRQ_get();
  public final static native int NV_GPU_WARPING_VERTICE_FORMAT_TRIANGLES_XYUVRQ_get();
  public final static native void NV_SCANOUT_WARPING_DATA_version_set(long jarg1, NV_SCANOUT_WARPING_DATA jarg1_, long jarg2);
  public final static native long NV_SCANOUT_WARPING_DATA_version_get(long jarg1, NV_SCANOUT_WARPING_DATA jarg1_);
  public final static native void NV_SCANOUT_WARPING_DATA_vertices_set(long jarg1, NV_SCANOUT_WARPING_DATA jarg1_, long jarg2);
  public final static native long NV_SCANOUT_WARPING_DATA_vertices_get(long jarg1, NV_SCANOUT_WARPING_DATA jarg1_);
  public final static native void NV_SCANOUT_WARPING_DATA_vertexFormat_set(long jarg1, NV_SCANOUT_WARPING_DATA jarg1_, int jarg2);
  public final static native int NV_SCANOUT_WARPING_DATA_vertexFormat_get(long jarg1, NV_SCANOUT_WARPING_DATA jarg1_);
  public final static native void NV_SCANOUT_WARPING_DATA_numVertices_set(long jarg1, NV_SCANOUT_WARPING_DATA jarg1_, int jarg2);
  public final static native int NV_SCANOUT_WARPING_DATA_numVertices_get(long jarg1, NV_SCANOUT_WARPING_DATA jarg1_);
  public final static native void NV_SCANOUT_WARPING_DATA_textureRect_set(long jarg1, NV_SCANOUT_WARPING_DATA jarg1_, long jarg2, NvSBox jarg2_);
  public final static native long NV_SCANOUT_WARPING_DATA_textureRect_get(long jarg1, NV_SCANOUT_WARPING_DATA jarg1_);
  public final static native long new_NV_SCANOUT_WARPING_DATA();
  public final static native void delete_NV_SCANOUT_WARPING_DATA(long jarg1);
  public final static native int NvAPI_GPU_SetScanoutWarping(long jarg1, long jarg2, NV_SCANOUT_WARPING_DATA jarg2_, int[] jarg3, int[] jarg4);
  public final static native void NV_SCANOUT_WARPING_STATE_DATA_version_set(long jarg1, NV_SCANOUT_WARPING_STATE_DATA jarg1_, long jarg2);
  public final static native long NV_SCANOUT_WARPING_STATE_DATA_version_get(long jarg1, NV_SCANOUT_WARPING_STATE_DATA jarg1_);
  public final static native void NV_SCANOUT_WARPING_STATE_DATA_bEnabled_set(long jarg1, NV_SCANOUT_WARPING_STATE_DATA jarg1_, long jarg2);
  public final static native long NV_SCANOUT_WARPING_STATE_DATA_bEnabled_get(long jarg1, NV_SCANOUT_WARPING_STATE_DATA jarg1_);
  public final static native long new_NV_SCANOUT_WARPING_STATE_DATA();
  public final static native void delete_NV_SCANOUT_WARPING_STATE_DATA(long jarg1);
  public final static native int NvAPI_GPU_GetScanoutWarpingState(long jarg1, long jarg2, NV_SCANOUT_WARPING_STATE_DATA jarg2_);
  public final static native int NvAPI_GPU_GetScanoutConfiguration(long jarg1, long jarg2, NvSBox jarg2_, long jarg3, NvSBox jarg3_);
  public final static native void NV_SCANOUT_INFORMATION_version_set(long jarg1, NV_SCANOUT_INFORMATION jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INFORMATION_version_get(long jarg1, NV_SCANOUT_INFORMATION jarg1_);
  public final static native void NV_SCANOUT_INFORMATION_sourceDesktopRect_set(long jarg1, NV_SCANOUT_INFORMATION jarg1_, long jarg2, NvSBox jarg2_);
  public final static native long NV_SCANOUT_INFORMATION_sourceDesktopRect_get(long jarg1, NV_SCANOUT_INFORMATION jarg1_);
  public final static native void NV_SCANOUT_INFORMATION_sourceViewportRect_set(long jarg1, NV_SCANOUT_INFORMATION jarg1_, long jarg2, NvSBox jarg2_);
  public final static native long NV_SCANOUT_INFORMATION_sourceViewportRect_get(long jarg1, NV_SCANOUT_INFORMATION jarg1_);
  public final static native void NV_SCANOUT_INFORMATION_targetViewportRect_set(long jarg1, NV_SCANOUT_INFORMATION jarg1_, long jarg2, NvSBox jarg2_);
  public final static native long NV_SCANOUT_INFORMATION_targetViewportRect_get(long jarg1, NV_SCANOUT_INFORMATION jarg1_);
  public final static native void NV_SCANOUT_INFORMATION_targetDisplayWidth_set(long jarg1, NV_SCANOUT_INFORMATION jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INFORMATION_targetDisplayWidth_get(long jarg1, NV_SCANOUT_INFORMATION jarg1_);
  public final static native void NV_SCANOUT_INFORMATION_targetDisplayHeight_set(long jarg1, NV_SCANOUT_INFORMATION jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INFORMATION_targetDisplayHeight_get(long jarg1, NV_SCANOUT_INFORMATION jarg1_);
  public final static native void NV_SCANOUT_INFORMATION_cloneImportance_set(long jarg1, NV_SCANOUT_INFORMATION jarg1_, long jarg2);
  public final static native long NV_SCANOUT_INFORMATION_cloneImportance_get(long jarg1, NV_SCANOUT_INFORMATION jarg1_);
  public final static native void NV_SCANOUT_INFORMATION_sourceToTargetRotation_set(long jarg1, NV_SCANOUT_INFORMATION jarg1_, int jarg2);
  public final static native int NV_SCANOUT_INFORMATION_sourceToTargetRotation_get(long jarg1, NV_SCANOUT_INFORMATION jarg1_);
  public final static native long new_NV_SCANOUT_INFORMATION();
  public final static native void delete_NV_SCANOUT_INFORMATION(long jarg1);
  public final static native int NvAPI_GPU_GetScanoutConfigurationEx(long jarg1, long jarg2, NV_SCANOUT_INFORMATION jarg2_);
  public final static native int NV_GPU_PERF_DECREASE_NONE_get();
  public final static native int NV_GPU_PERF_DECREASE_REASON_THERMAL_PROTECTION_get();
  public final static native int NV_GPU_PERF_DECREASE_REASON_POWER_CONTROL_get();
  public final static native int NV_GPU_PERF_DECREASE_REASON_AC_BATT_get();
  public final static native int NV_GPU_PERF_DECREASE_REASON_API_TRIGGERED_get();
  public final static native int NV_GPU_PERF_DECREASE_REASON_INSUFFICIENT_POWER_get();
  public final static native int NV_GPU_PERF_DECREASE_REASON_UNKNOWN_get();
  public final static native int NvAPI_GPU_GetPerfDecreaseInfo(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2);
  public final static native int NV_GPU_IA_LOGO_BRIGHTNESS_get();
  public final static native int NV_GPU_IA_SLI_BRIGHTNESS_get();
  public final static native void NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1_version_set(long jarg1, NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1_version_get(long jarg1, NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1 jarg1_);
  public final static native void NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1_hPhysicalGpu_set(long jarg1, NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1 jarg1_, long jarg2, NvPhysicalGpuHandle__ jarg2_);
  public final static native long NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1_hPhysicalGpu_get(long jarg1, NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1 jarg1_);
  public final static native void NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1_Attribute_set(long jarg1, NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1 jarg1_, int jarg2);
  public final static native int NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1_Attribute_get(long jarg1, NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1 jarg1_);
  public final static native void NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1_bSupported_set(long jarg1, NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1_bSupported_get(long jarg1, NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1 jarg1_);
  public final static native long new_NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1();
  public final static native void delete_NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1(long jarg1);
  public final static native int NvAPI_GPU_QueryIlluminationSupport(long jarg1, NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1 jarg1_);
  public final static native void NV_GPU_GET_ILLUMINATION_PARM_V1_version_set(long jarg1, NV_GPU_GET_ILLUMINATION_PARM_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_GET_ILLUMINATION_PARM_V1_version_get(long jarg1, NV_GPU_GET_ILLUMINATION_PARM_V1 jarg1_);
  public final static native void NV_GPU_GET_ILLUMINATION_PARM_V1_hPhysicalGpu_set(long jarg1, NV_GPU_GET_ILLUMINATION_PARM_V1 jarg1_, long jarg2, NvPhysicalGpuHandle__ jarg2_);
  public final static native long NV_GPU_GET_ILLUMINATION_PARM_V1_hPhysicalGpu_get(long jarg1, NV_GPU_GET_ILLUMINATION_PARM_V1 jarg1_);
  public final static native void NV_GPU_GET_ILLUMINATION_PARM_V1_Attribute_set(long jarg1, NV_GPU_GET_ILLUMINATION_PARM_V1 jarg1_, int jarg2);
  public final static native int NV_GPU_GET_ILLUMINATION_PARM_V1_Attribute_get(long jarg1, NV_GPU_GET_ILLUMINATION_PARM_V1 jarg1_);
  public final static native void NV_GPU_GET_ILLUMINATION_PARM_V1_Value_set(long jarg1, NV_GPU_GET_ILLUMINATION_PARM_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_GET_ILLUMINATION_PARM_V1_Value_get(long jarg1, NV_GPU_GET_ILLUMINATION_PARM_V1 jarg1_);
  public final static native long new_NV_GPU_GET_ILLUMINATION_PARM_V1();
  public final static native void delete_NV_GPU_GET_ILLUMINATION_PARM_V1(long jarg1);
  public final static native int NvAPI_GPU_GetIllumination(long jarg1, NV_GPU_GET_ILLUMINATION_PARM_V1 jarg1_);
  public final static native void NV_GPU_SET_ILLUMINATION_PARM_V1_version_set(long jarg1, NV_GPU_SET_ILLUMINATION_PARM_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_SET_ILLUMINATION_PARM_V1_version_get(long jarg1, NV_GPU_SET_ILLUMINATION_PARM_V1 jarg1_);
  public final static native void NV_GPU_SET_ILLUMINATION_PARM_V1_hPhysicalGpu_set(long jarg1, NV_GPU_SET_ILLUMINATION_PARM_V1 jarg1_, long jarg2, NvPhysicalGpuHandle__ jarg2_);
  public final static native long NV_GPU_SET_ILLUMINATION_PARM_V1_hPhysicalGpu_get(long jarg1, NV_GPU_SET_ILLUMINATION_PARM_V1 jarg1_);
  public final static native void NV_GPU_SET_ILLUMINATION_PARM_V1_Attribute_set(long jarg1, NV_GPU_SET_ILLUMINATION_PARM_V1 jarg1_, int jarg2);
  public final static native int NV_GPU_SET_ILLUMINATION_PARM_V1_Attribute_get(long jarg1, NV_GPU_SET_ILLUMINATION_PARM_V1 jarg1_);
  public final static native void NV_GPU_SET_ILLUMINATION_PARM_V1_Value_set(long jarg1, NV_GPU_SET_ILLUMINATION_PARM_V1 jarg1_, long jarg2);
  public final static native long NV_GPU_SET_ILLUMINATION_PARM_V1_Value_get(long jarg1, NV_GPU_SET_ILLUMINATION_PARM_V1 jarg1_);
  public final static native long new_NV_GPU_SET_ILLUMINATION_PARM_V1();
  public final static native void delete_NV_GPU_SET_ILLUMINATION_PARM_V1(long jarg1);
  public final static native int NvAPI_GPU_SetIllumination(long jarg1, NV_GPU_SET_ILLUMINATION_PARM_V1 jarg1_);
  public final static native int NvAPI_EnumNvidiaDisplayHandle(long jarg1, long jarg2);
  public final static native int NvAPI_EnumNvidiaUnAttachedDisplayHandle(long jarg1, long jarg2);
  public final static native int NvAPI_CreateDisplayFromUnAttachedDisplay(long jarg1, NvUnAttachedDisplayHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_GetAssociatedNvidiaDisplayHandle(String jarg1, long jarg2);
  public final static native int NvAPI_DISP_GetAssociatedUnAttachedNvidiaDisplayHandle(String jarg1, long jarg2);
  public final static native int NvAPI_GetAssociatedNvidiaDisplayName(long jarg1, NvDisplayHandle__ jarg1_, String jarg2);
  public final static native int NvAPI_GetUnAttachedAssociatedDisplayName(long jarg1, NvUnAttachedDisplayHandle__ jarg1_, String jarg2);
  public final static native int NvAPI_EnableHWCursor(long jarg1, NvDisplayHandle__ jarg1_);
  public final static native int NvAPI_DisableHWCursor(long jarg1, NvDisplayHandle__ jarg1_);
  public final static native int NvAPI_GetVBlankCounter(long jarg1, NvDisplayHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_SetRefreshRateOverride(long jarg1, NvDisplayHandle__ jarg1_, long jarg2, float jarg3, long jarg4);
  public final static native int NvAPI_GetAssociatedDisplayOutputId(long jarg1, NvDisplayHandle__ jarg1_, long jarg2);
  public final static native void NV_DISPLAY_PORT_INFO_version_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_INFO_version_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_dpcd_ver_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_INFO_dpcd_ver_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_maxLinkRate_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PORT_INFO_maxLinkRate_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_maxLaneCount_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PORT_INFO_maxLaneCount_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_curLinkRate_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PORT_INFO_curLinkRate_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_curLaneCount_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PORT_INFO_curLaneCount_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_colorFormat_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PORT_INFO_colorFormat_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_dynamicRange_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PORT_INFO_dynamicRange_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_colorimetry_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PORT_INFO_colorimetry_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_bpc_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PORT_INFO_bpc_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_isDp_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_INFO_isDp_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_isInternalDp_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_INFO_isInternalDp_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_isColorCtrlSupported_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_INFO_isColorCtrlSupported_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_is6BPCSupported_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_INFO_is6BPCSupported_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_is8BPCSupported_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_INFO_is8BPCSupported_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_is10BPCSupported_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_INFO_is10BPCSupported_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_is12BPCSupported_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_INFO_is12BPCSupported_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_is16BPCSupported_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_INFO_is16BPCSupported_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_isYCrCb422Supported_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_INFO_isYCrCb422Supported_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native void NV_DISPLAY_PORT_INFO_isYCrCb444Supported_set(long jarg1, NV_DISPLAY_PORT_INFO jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_INFO_isYCrCb444Supported_get(long jarg1, NV_DISPLAY_PORT_INFO jarg1_);
  public final static native long new_NV_DISPLAY_PORT_INFO();
  public final static native void delete_NV_DISPLAY_PORT_INFO(long jarg1);
  public final static native int NvAPI_GetDisplayPortInfo(long jarg1, NvDisplayHandle__ jarg1_, long jarg2, long jarg3, NV_DISPLAY_PORT_INFO jarg3_);
  public final static native void NV_DISPLAY_PORT_CONFIG_version_set(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_CONFIG_version_get(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_);
  public final static native void NV_DISPLAY_PORT_CONFIG_linkRate_set(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PORT_CONFIG_linkRate_get(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_);
  public final static native void NV_DISPLAY_PORT_CONFIG_laneCount_set(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PORT_CONFIG_laneCount_get(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_);
  public final static native void NV_DISPLAY_PORT_CONFIG_colorFormat_set(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PORT_CONFIG_colorFormat_get(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_);
  public final static native void NV_DISPLAY_PORT_CONFIG_dynamicRange_set(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PORT_CONFIG_dynamicRange_get(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_);
  public final static native void NV_DISPLAY_PORT_CONFIG_colorimetry_set(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PORT_CONFIG_colorimetry_get(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_);
  public final static native void NV_DISPLAY_PORT_CONFIG_bpc_set(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_, int jarg2);
  public final static native int NV_DISPLAY_PORT_CONFIG_bpc_get(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_);
  public final static native void NV_DISPLAY_PORT_CONFIG_isHPD_set(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_CONFIG_isHPD_get(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_);
  public final static native void NV_DISPLAY_PORT_CONFIG_isSetDeferred_set(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_CONFIG_isSetDeferred_get(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_);
  public final static native void NV_DISPLAY_PORT_CONFIG_isChromaLpfOff_set(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_CONFIG_isChromaLpfOff_get(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_);
  public final static native void NV_DISPLAY_PORT_CONFIG_isDitherOff_set(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_CONFIG_isDitherOff_get(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_);
  public final static native void NV_DISPLAY_PORT_CONFIG_testLinkTrain_set(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_CONFIG_testLinkTrain_get(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_);
  public final static native void NV_DISPLAY_PORT_CONFIG_testColorChange_set(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_, long jarg2);
  public final static native long NV_DISPLAY_PORT_CONFIG_testColorChange_get(long jarg1, NV_DISPLAY_PORT_CONFIG jarg1_);
  public final static native long new_NV_DISPLAY_PORT_CONFIG();
  public final static native void delete_NV_DISPLAY_PORT_CONFIG(long jarg1);
  public final static native int NvAPI_SetDisplayPort(long jarg1, NvDisplayHandle__ jarg1_, long jarg2, long jarg3, NV_DISPLAY_PORT_CONFIG jarg3_);
  public final static native void NV_HDMI_SUPPORT_INFO_version_set(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_, long jarg2);
  public final static native long NV_HDMI_SUPPORT_INFO_version_get(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_);
  public final static native void NV_HDMI_SUPPORT_INFO_isGpuHDMICapable_set(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_, long jarg2);
  public final static native long NV_HDMI_SUPPORT_INFO_isGpuHDMICapable_get(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_);
  public final static native void NV_HDMI_SUPPORT_INFO_isMonUnderscanCapable_set(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_, long jarg2);
  public final static native long NV_HDMI_SUPPORT_INFO_isMonUnderscanCapable_get(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_);
  public final static native void NV_HDMI_SUPPORT_INFO_isMonBasicAudioCapable_set(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_, long jarg2);
  public final static native long NV_HDMI_SUPPORT_INFO_isMonBasicAudioCapable_get(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_);
  public final static native void NV_HDMI_SUPPORT_INFO_isMonYCbCr444Capable_set(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_, long jarg2);
  public final static native long NV_HDMI_SUPPORT_INFO_isMonYCbCr444Capable_get(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_);
  public final static native void NV_HDMI_SUPPORT_INFO_isMonYCbCr422Capable_set(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_, long jarg2);
  public final static native long NV_HDMI_SUPPORT_INFO_isMonYCbCr422Capable_get(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_);
  public final static native void NV_HDMI_SUPPORT_INFO_isMonxvYCC601Capable_set(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_, long jarg2);
  public final static native long NV_HDMI_SUPPORT_INFO_isMonxvYCC601Capable_get(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_);
  public final static native void NV_HDMI_SUPPORT_INFO_isMonxvYCC709Capable_set(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_, long jarg2);
  public final static native long NV_HDMI_SUPPORT_INFO_isMonxvYCC709Capable_get(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_);
  public final static native void NV_HDMI_SUPPORT_INFO_isMonHDMI_set(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_, long jarg2);
  public final static native long NV_HDMI_SUPPORT_INFO_isMonHDMI_get(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_);
  public final static native void NV_HDMI_SUPPORT_INFO_EDID861ExtRev_set(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_, long jarg2);
  public final static native long NV_HDMI_SUPPORT_INFO_EDID861ExtRev_get(long jarg1, NV_HDMI_SUPPORT_INFO jarg1_);
  public final static native long new_NV_HDMI_SUPPORT_INFO();
  public final static native void delete_NV_HDMI_SUPPORT_INFO(long jarg1);
  public final static native int NvAPI_GetHDMISupportInfo(long jarg1, NvDisplayHandle__ jarg1_, long jarg2, long jarg3, NV_HDMI_SUPPORT_INFO jarg3_);
  public final static native int NV_INFOFRAME_CMD_GET_DEFAULT_get();
  public final static native int NV_INFOFRAME_PROPERTY_MODE_AUTO_get();
  public final static native int NV_INFOFRAME_PROPERTY_BLACKLIST_FALSE_get();
  public final static native void NV_INFOFRAME_PROPERTY_mode_set(long jarg1, NV_INFOFRAME_PROPERTY jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_PROPERTY_mode_get(long jarg1, NV_INFOFRAME_PROPERTY jarg1_);
  public final static native void NV_INFOFRAME_PROPERTY_blackList_set(long jarg1, NV_INFOFRAME_PROPERTY jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_PROPERTY_blackList_get(long jarg1, NV_INFOFRAME_PROPERTY jarg1_);
  public final static native void NV_INFOFRAME_PROPERTY_reserved_set(long jarg1, NV_INFOFRAME_PROPERTY jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_PROPERTY_reserved_get(long jarg1, NV_INFOFRAME_PROPERTY jarg1_);
  public final static native void NV_INFOFRAME_PROPERTY_version_set(long jarg1, NV_INFOFRAME_PROPERTY jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_PROPERTY_version_get(long jarg1, NV_INFOFRAME_PROPERTY jarg1_);
  public final static native void NV_INFOFRAME_PROPERTY_length_set(long jarg1, NV_INFOFRAME_PROPERTY jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_PROPERTY_length_get(long jarg1, NV_INFOFRAME_PROPERTY jarg1_);
  public final static native long new_NV_INFOFRAME_PROPERTY();
  public final static native void delete_NV_INFOFRAME_PROPERTY(long jarg1);
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_SCANINFO_NODATA_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_SCANINFO_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_BARDATA_NOT_PRESENT_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_BARDATA_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_AFI_ABSENT_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_AFI_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_COLORFORMAT_RGB_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_COLORFORMAT_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_F17_FALSE_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_F17_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_ASPECTRATIOACTIVEPORTION_NO_AFD_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_ASPECTRATIOACTIVEPORTION_EQUAL_CODEDFRAME_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_ASPECTRATIOACTIVEPORTION_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_ASPECTRATIOCODEDFRAME_NO_DATA_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_ASPECTRATIOCODEDFRAME_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_COLORIMETRY_NO_DATA_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_COLORIMETRY_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_NONUNIFORMPICTURESCALING_NO_DATA_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_NONUNIFORMPICTURESCALING_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_RGBQUANTIZATION_DEFAULT_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_RGBQUANTIZATION_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_EXTENDEDCOLORIMETRY_XVYCC601_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_EXTENDEDCOLORIMETRY_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_ITC_VIDEO_CONTENT_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_ITC_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_PIXELREPETITION_NONE_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_PIXELREPETITION_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_CONTENTTYPE_GRAPHICS_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_CONTENTTYPE_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_YCCQUANTIZATION_LIMITED_RANGE_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AVI_YCCQUANTIZATION_AUTO_get();
  public final static native void NV_INFOFRAME_VIDEO_vic_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_vic_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_pixelRepeat_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_pixelRepeat_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_colorSpace_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_colorSpace_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_colorimetry_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_colorimetry_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_extendedColorimetry_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_extendedColorimetry_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_rgbQuantizationRange_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_rgbQuantizationRange_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_yccQuantizationRange_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_yccQuantizationRange_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_itContent_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_itContent_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_contentTypes_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_contentTypes_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_scanInfo_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_scanInfo_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_activeFormatInfoPresent_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_activeFormatInfoPresent_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_activeFormatAspectRatio_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_activeFormatAspectRatio_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_picAspectRatio_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_picAspectRatio_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_nonuniformScaling_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_nonuniformScaling_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_barInfo_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_barInfo_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_top_bar_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_top_bar_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_bottom_bar_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_bottom_bar_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_left_bar_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_left_bar_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_right_bar_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_right_bar_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_Future17_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_Future17_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native void NV_INFOFRAME_VIDEO_Future47_set(long jarg1, NV_INFOFRAME_VIDEO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_VIDEO_Future47_get(long jarg1, NV_INFOFRAME_VIDEO jarg1_);
  public final static native long new_NV_INFOFRAME_VIDEO();
  public final static native void delete_NV_INFOFRAME_VIDEO(long jarg1);
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_CHANNELCOUNT_IN_HEADER_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_CHANNELCOUNT_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_CODINGTYPE_IN_HEADER_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_CODINGTYPE_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_SAMPLESIZE_IN_HEADER_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_SAMPLESIZE_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_SAMPLEFREQUENCY_IN_HEADER_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_SAMPLEFREQUENCY_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_CODINGEXTENSIONTYPE_USE_CODING_TYPE_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_CODINGEXTENSIONTYPE_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_CHANNELALLOCATION_X_X_X_X_X_X_FR_FL_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_CHANNELALLOCATION_FRW_FLW_RR_RL_FC_LFE_FR_FL_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_CHANNELALLOCATION_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_LFEPLAYBACKLEVEL_NO_DATA_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_LFEPLAYBACKLEVEL_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_LEVELSHIFTVALUES_0DB_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_LEVELSHIFTVALUES_AUTO_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_DOWNMIX_PERMITTED_get();
  public final static native int NV_INFOFRAME_FIELD_VALUE_AUDIO_DOWNMIX_AUTO_get();
  public final static native void NV_INFOFRAME_AUDIO_codingType_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_codingType_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_codingExtensionType_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_codingExtensionType_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_sampleSize_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_sampleSize_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_sampleRate_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_sampleRate_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_channelCount_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_channelCount_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_speakerPlacement_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_speakerPlacement_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_downmixInhibit_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_downmixInhibit_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_lfePlaybackLevel_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_lfePlaybackLevel_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_levelShift_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_levelShift_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_Future12_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_Future12_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_Future2x_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_Future2x_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_Future3x_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_Future3x_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_Future52_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_Future52_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_Future6_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_Future6_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_Future7_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_Future7_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_Future8_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_Future8_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_Future9_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_Future9_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native void NV_INFOFRAME_AUDIO_Future10_set(long jarg1, NV_INFOFRAME_AUDIO jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_AUDIO_Future10_get(long jarg1, NV_INFOFRAME_AUDIO jarg1_);
  public final static native long new_NV_INFOFRAME_AUDIO();
  public final static native void delete_NV_INFOFRAME_AUDIO(long jarg1);
  public final static native void NV_INFOFRAME_DATA_version_set(long jarg1, NV_INFOFRAME_DATA jarg1_, long jarg2);
  public final static native long NV_INFOFRAME_DATA_version_get(long jarg1, NV_INFOFRAME_DATA jarg1_);
  public final static native void NV_INFOFRAME_DATA_size_set(long jarg1, NV_INFOFRAME_DATA jarg1_, int jarg2);
  public final static native int NV_INFOFRAME_DATA_size_get(long jarg1, NV_INFOFRAME_DATA jarg1_);
  public final static native void NV_INFOFRAME_DATA_cmd_set(long jarg1, NV_INFOFRAME_DATA jarg1_, short jarg2);
  public final static native short NV_INFOFRAME_DATA_cmd_get(long jarg1, NV_INFOFRAME_DATA jarg1_);
  public final static native void NV_INFOFRAME_DATA_type_set(long jarg1, NV_INFOFRAME_DATA jarg1_, short jarg2);
  public final static native short NV_INFOFRAME_DATA_type_get(long jarg1, NV_INFOFRAME_DATA jarg1_);
  public final static native long NV_INFOFRAME_DATA_infoframe_get(long jarg1, NV_INFOFRAME_DATA jarg1_);
  public final static native long new_NV_INFOFRAME_DATA();
  public final static native void delete_NV_INFOFRAME_DATA(long jarg1);
  public final static native void NV_INFOFRAME_DATA_infoframe_property_set(long jarg1, NV_INFOFRAME_DATA_infoframe jarg1_, long jarg2, NV_INFOFRAME_PROPERTY jarg2_);
  public final static native long NV_INFOFRAME_DATA_infoframe_property_get(long jarg1, NV_INFOFRAME_DATA_infoframe jarg1_);
  public final static native void NV_INFOFRAME_DATA_infoframe_audio_set(long jarg1, NV_INFOFRAME_DATA_infoframe jarg1_, long jarg2, NV_INFOFRAME_AUDIO jarg2_);
  public final static native long NV_INFOFRAME_DATA_infoframe_audio_get(long jarg1, NV_INFOFRAME_DATA_infoframe jarg1_);
  public final static native void NV_INFOFRAME_DATA_infoframe_video_set(long jarg1, NV_INFOFRAME_DATA_infoframe jarg1_, long jarg2, NV_INFOFRAME_VIDEO jarg2_);
  public final static native long NV_INFOFRAME_DATA_infoframe_video_get(long jarg1, NV_INFOFRAME_DATA_infoframe jarg1_);
  public final static native long new_NV_INFOFRAME_DATA_infoframe();
  public final static native void delete_NV_INFOFRAME_DATA_infoframe(long jarg1);
  public final static native int NvAPI_Disp_InfoFrameControl(long jarg1, long jarg2, NV_INFOFRAME_DATA jarg2_);
  public final static native int NV_COLOR_CMD_GET_get();
  public final static native int NV_COLOR_FORMAT_RGB_get();
  public final static native int NV_COLOR_FORMAT_DEFAULT_get();
  public final static native int NV_COLOR_FORMAT_AUTO_get();
  public final static native int NV_COLOR_COLORIMETRY_RGB_get();
  public final static native int NV_COLOR_COLORIMETRY_DEFAULT_get();
  public final static native int NV_COLOR_COLORIMETRY_AUTO_get();
  public final static native void NV_COLOR_DATA_version_set(long jarg1, NV_COLOR_DATA jarg1_, long jarg2);
  public final static native long NV_COLOR_DATA_version_get(long jarg1, NV_COLOR_DATA jarg1_);
  public final static native void NV_COLOR_DATA_size_set(long jarg1, NV_COLOR_DATA jarg1_, int jarg2);
  public final static native int NV_COLOR_DATA_size_get(long jarg1, NV_COLOR_DATA jarg1_);
  public final static native void NV_COLOR_DATA_cmd_set(long jarg1, NV_COLOR_DATA jarg1_, short jarg2);
  public final static native short NV_COLOR_DATA_cmd_get(long jarg1, NV_COLOR_DATA jarg1_);
  public final static native long NV_COLOR_DATA_data_get(long jarg1, NV_COLOR_DATA jarg1_);
  public final static native long new_NV_COLOR_DATA();
  public final static native void delete_NV_COLOR_DATA(long jarg1);
  public final static native void NV_COLOR_DATA_data_colorFormat_set(long jarg1, NV_COLOR_DATA_data jarg1_, short jarg2);
  public final static native short NV_COLOR_DATA_data_colorFormat_get(long jarg1, NV_COLOR_DATA_data jarg1_);
  public final static native void NV_COLOR_DATA_data_colorimetry_set(long jarg1, NV_COLOR_DATA_data jarg1_, short jarg2);
  public final static native short NV_COLOR_DATA_data_colorimetry_get(long jarg1, NV_COLOR_DATA_data jarg1_);
  public final static native long new_NV_COLOR_DATA_data();
  public final static native void delete_NV_COLOR_DATA_data(long jarg1);
  public final static native int NvAPI_Disp_ColorControl(long jarg1, long jarg2, NV_COLOR_DATA jarg2_);
  public final static native void NV_TIMING_FLAG_isInterlaced_set(long jarg1, NV_TIMING_FLAG jarg1_, long jarg2);
  public final static native long NV_TIMING_FLAG_isInterlaced_get(long jarg1, NV_TIMING_FLAG jarg1_);
  public final static native void NV_TIMING_FLAG_reserved0_set(long jarg1, NV_TIMING_FLAG jarg1_, long jarg2);
  public final static native long NV_TIMING_FLAG_reserved0_get(long jarg1, NV_TIMING_FLAG jarg1_);
  public final static native void NV_TIMING_FLAG_scaling_set(long jarg1, NV_TIMING_FLAG jarg1_, long jarg2);
  public final static native long NV_TIMING_FLAG_scaling_get(long jarg1, NV_TIMING_FLAG jarg1_);
  public final static native long new_NV_TIMING_FLAG();
  public final static native void delete_NV_TIMING_FLAG(long jarg1);
  public final static native void NV_TIMING_INPUT_version_set(long jarg1, NV_TIMING_INPUT jarg1_, long jarg2);
  public final static native long NV_TIMING_INPUT_version_get(long jarg1, NV_TIMING_INPUT jarg1_);
  public final static native void NV_TIMING_INPUT_width_set(long jarg1, NV_TIMING_INPUT jarg1_, long jarg2);
  public final static native long NV_TIMING_INPUT_width_get(long jarg1, NV_TIMING_INPUT jarg1_);
  public final static native void NV_TIMING_INPUT_height_set(long jarg1, NV_TIMING_INPUT jarg1_, long jarg2);
  public final static native long NV_TIMING_INPUT_height_get(long jarg1, NV_TIMING_INPUT jarg1_);
  public final static native void NV_TIMING_INPUT_rr_set(long jarg1, NV_TIMING_INPUT jarg1_, float jarg2);
  public final static native float NV_TIMING_INPUT_rr_get(long jarg1, NV_TIMING_INPUT jarg1_);
  public final static native void NV_TIMING_INPUT_flag_set(long jarg1, NV_TIMING_INPUT jarg1_, long jarg2, NV_TIMING_FLAG jarg2_);
  public final static native long NV_TIMING_INPUT_flag_get(long jarg1, NV_TIMING_INPUT jarg1_);
  public final static native void NV_TIMING_INPUT_type_set(long jarg1, NV_TIMING_INPUT jarg1_, int jarg2);
  public final static native int NV_TIMING_INPUT_type_get(long jarg1, NV_TIMING_INPUT jarg1_);
  public final static native long new_NV_TIMING_INPUT();
  public final static native void delete_NV_TIMING_INPUT(long jarg1);
  public final static native int NvAPI_DISP_GetTiming(long jarg1, long jarg2, NV_TIMING_INPUT jarg2_, long jarg3, NV_TIMING jarg3_);
  public final static native int NV_MONITOR_CAPS_TYPE_HDMI_VSDB_get();
  public final static native int NV_MONITOR_CAPS_TYPE_HDMI_VCDB_get();
  public final static native void NV_MONITOR_CAPS_VCDB_quantizationRangeYcc_set(long jarg1, NV_MONITOR_CAPS_VCDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VCDB_quantizationRangeYcc_get(long jarg1, NV_MONITOR_CAPS_VCDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VCDB_quantizationRangeRgb_set(long jarg1, NV_MONITOR_CAPS_VCDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VCDB_quantizationRangeRgb_get(long jarg1, NV_MONITOR_CAPS_VCDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VCDB_scanInfoPreferredVideoFormat_set(long jarg1, NV_MONITOR_CAPS_VCDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VCDB_scanInfoPreferredVideoFormat_get(long jarg1, NV_MONITOR_CAPS_VCDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VCDB_scanInfoITVideoFormats_set(long jarg1, NV_MONITOR_CAPS_VCDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VCDB_scanInfoITVideoFormats_get(long jarg1, NV_MONITOR_CAPS_VCDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VCDB_scanInfoCEVideoFormats_set(long jarg1, NV_MONITOR_CAPS_VCDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VCDB_scanInfoCEVideoFormats_get(long jarg1, NV_MONITOR_CAPS_VCDB jarg1_);
  public final static native long new_NV_MONITOR_CAPS_VCDB();
  public final static native void delete_NV_MONITOR_CAPS_VCDB(long jarg1);
  public final static native void NV_MONITOR_CAPS_VSDB_sourcePhysicalAddressB_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_sourcePhysicalAddressB_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_sourcePhysicalAddressA_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_sourcePhysicalAddressA_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_sourcePhysicalAddressD_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_sourcePhysicalAddressD_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_sourcePhysicalAddressC_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_sourcePhysicalAddressC_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_supportDualDviOperation_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_supportDualDviOperation_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_reserved6_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_reserved6_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_supportDeepColorYCbCr444_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_supportDeepColorYCbCr444_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_supportDeepColor30bits_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_supportDeepColor30bits_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_supportDeepColor36bits_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_supportDeepColor36bits_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_supportDeepColor48bits_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_supportDeepColor48bits_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_supportAI_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_supportAI_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_maxTmdsClock_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_maxTmdsClock_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_cnc0SupportGraphicsTextContent_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_cnc0SupportGraphicsTextContent_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_cnc1SupportPhotoContent_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_cnc1SupportPhotoContent_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_cnc2SupportCinemaContent_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_cnc2SupportCinemaContent_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_cnc3SupportGameContent_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_cnc3SupportGameContent_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_reserved8_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_reserved8_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_hasVicEntries_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_hasVicEntries_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_hasInterlacedLatencyField_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_hasInterlacedLatencyField_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_hasLatencyField_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_hasLatencyField_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_videoLatency_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_videoLatency_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_audioLatency_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_audioLatency_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_interlacedVideoLatency_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_interlacedVideoLatency_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_interlacedAudioLatency_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_interlacedAudioLatency_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_reserved13_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_reserved13_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_has3dEntries_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_has3dEntries_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_hdmi3dLength_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_hdmi3dLength_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_hdmiVicLength_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPS_VSDB_hdmiVicLength_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_hdmi_vic_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short[] jarg2);
  public final static native short[] NV_MONITOR_CAPS_VSDB_hdmi_vic_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native void NV_MONITOR_CAPS_VSDB_hdmi_3d_set(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_, short[] jarg2);
  public final static native short[] NV_MONITOR_CAPS_VSDB_hdmi_3d_get(long jarg1, NV_MONITOR_CAPS_VSDB jarg1_);
  public final static native long new_NV_MONITOR_CAPS_VSDB();
  public final static native void delete_NV_MONITOR_CAPS_VSDB(long jarg1);
  public final static native void NV_MONITOR_CAPABILITIES_version_set(long jarg1, NV_MONITOR_CAPABILITIES jarg1_, long jarg2);
  public final static native long NV_MONITOR_CAPABILITIES_version_get(long jarg1, NV_MONITOR_CAPABILITIES jarg1_);
  public final static native void NV_MONITOR_CAPABILITIES_size_set(long jarg1, NV_MONITOR_CAPABILITIES jarg1_, int jarg2);
  public final static native int NV_MONITOR_CAPABILITIES_size_get(long jarg1, NV_MONITOR_CAPABILITIES jarg1_);
  public final static native void NV_MONITOR_CAPABILITIES_infoType_set(long jarg1, NV_MONITOR_CAPABILITIES jarg1_, long jarg2);
  public final static native long NV_MONITOR_CAPABILITIES_infoType_get(long jarg1, NV_MONITOR_CAPABILITIES jarg1_);
  public final static native void NV_MONITOR_CAPABILITIES_connectorType_set(long jarg1, NV_MONITOR_CAPABILITIES jarg1_, long jarg2);
  public final static native long NV_MONITOR_CAPABILITIES_connectorType_get(long jarg1, NV_MONITOR_CAPABILITIES jarg1_);
  public final static native void NV_MONITOR_CAPABILITIES_bIsValidInfo_set(long jarg1, NV_MONITOR_CAPABILITIES jarg1_, short jarg2);
  public final static native short NV_MONITOR_CAPABILITIES_bIsValidInfo_get(long jarg1, NV_MONITOR_CAPABILITIES jarg1_);
  public final static native long NV_MONITOR_CAPABILITIES_data_get(long jarg1, NV_MONITOR_CAPABILITIES jarg1_);
  public final static native long new_NV_MONITOR_CAPABILITIES();
  public final static native void delete_NV_MONITOR_CAPABILITIES(long jarg1);
  public final static native void NV_MONITOR_CAPABILITIES_data_vsdb_set(long jarg1, NV_MONITOR_CAPABILITIES_data jarg1_, long jarg2, NV_MONITOR_CAPS_VSDB jarg2_);
  public final static native long NV_MONITOR_CAPABILITIES_data_vsdb_get(long jarg1, NV_MONITOR_CAPABILITIES_data jarg1_);
  public final static native void NV_MONITOR_CAPABILITIES_data_vcdb_set(long jarg1, NV_MONITOR_CAPABILITIES_data jarg1_, long jarg2, NV_MONITOR_CAPS_VCDB jarg2_);
  public final static native long NV_MONITOR_CAPABILITIES_data_vcdb_get(long jarg1, NV_MONITOR_CAPABILITIES_data jarg1_);
  public final static native long new_NV_MONITOR_CAPABILITIES_data();
  public final static native void delete_NV_MONITOR_CAPABILITIES_data(long jarg1);
  public final static native int NvAPI_DISP_GetMonitorCapabilities(long jarg1, long jarg2, NV_MONITOR_CAPABILITIES jarg2_);
  public final static native void NV_MONITOR_COLOR_CAPS_V1_version_set(long jarg1, NV_MONITOR_COLOR_CAPS_V1 jarg1_, long jarg2);
  public final static native long NV_MONITOR_COLOR_CAPS_V1_version_get(long jarg1, NV_MONITOR_COLOR_CAPS_V1 jarg1_);
  public final static native void NV_MONITOR_COLOR_CAPS_V1_colorFormat_set(long jarg1, NV_MONITOR_COLOR_CAPS_V1 jarg1_, int jarg2);
  public final static native int NV_MONITOR_COLOR_CAPS_V1_colorFormat_get(long jarg1, NV_MONITOR_COLOR_CAPS_V1 jarg1_);
  public final static native void NV_MONITOR_COLOR_CAPS_V1_backendBitDepths_set(long jarg1, NV_MONITOR_COLOR_CAPS_V1 jarg1_, int jarg2);
  public final static native int NV_MONITOR_COLOR_CAPS_V1_backendBitDepths_get(long jarg1, NV_MONITOR_COLOR_CAPS_V1 jarg1_);
  public final static native long new_NV_MONITOR_COLOR_CAPS_V1();
  public final static native void delete_NV_MONITOR_COLOR_CAPS_V1(long jarg1);
  public final static native int NvAPI_DISP_GetMonitorColorCapabilities(long jarg1, long jarg2, NV_MONITOR_COLOR_CAPS_V1 jarg2_, long jarg3);
  public final static native void NV_CUSTOM_DISPLAY_version_set(long jarg1, NV_CUSTOM_DISPLAY jarg1_, long jarg2);
  public final static native long NV_CUSTOM_DISPLAY_version_get(long jarg1, NV_CUSTOM_DISPLAY jarg1_);
  public final static native void NV_CUSTOM_DISPLAY_width_set(long jarg1, NV_CUSTOM_DISPLAY jarg1_, long jarg2);
  public final static native long NV_CUSTOM_DISPLAY_width_get(long jarg1, NV_CUSTOM_DISPLAY jarg1_);
  public final static native void NV_CUSTOM_DISPLAY_height_set(long jarg1, NV_CUSTOM_DISPLAY jarg1_, long jarg2);
  public final static native long NV_CUSTOM_DISPLAY_height_get(long jarg1, NV_CUSTOM_DISPLAY jarg1_);
  public final static native void NV_CUSTOM_DISPLAY_depth_set(long jarg1, NV_CUSTOM_DISPLAY jarg1_, long jarg2);
  public final static native long NV_CUSTOM_DISPLAY_depth_get(long jarg1, NV_CUSTOM_DISPLAY jarg1_);
  public final static native void NV_CUSTOM_DISPLAY_colorFormat_set(long jarg1, NV_CUSTOM_DISPLAY jarg1_, int jarg2);
  public final static native int NV_CUSTOM_DISPLAY_colorFormat_get(long jarg1, NV_CUSTOM_DISPLAY jarg1_);
  public final static native void NV_CUSTOM_DISPLAY_srcPartition_set(long jarg1, NV_CUSTOM_DISPLAY jarg1_, long jarg2, NV_VIEWPORTF jarg2_);
  public final static native long NV_CUSTOM_DISPLAY_srcPartition_get(long jarg1, NV_CUSTOM_DISPLAY jarg1_);
  public final static native void NV_CUSTOM_DISPLAY_xRatio_set(long jarg1, NV_CUSTOM_DISPLAY jarg1_, float jarg2);
  public final static native float NV_CUSTOM_DISPLAY_xRatio_get(long jarg1, NV_CUSTOM_DISPLAY jarg1_);
  public final static native void NV_CUSTOM_DISPLAY_yRatio_set(long jarg1, NV_CUSTOM_DISPLAY jarg1_, float jarg2);
  public final static native float NV_CUSTOM_DISPLAY_yRatio_get(long jarg1, NV_CUSTOM_DISPLAY jarg1_);
  public final static native void NV_CUSTOM_DISPLAY_timing_set(long jarg1, NV_CUSTOM_DISPLAY jarg1_, long jarg2, NV_TIMING jarg2_);
  public final static native long NV_CUSTOM_DISPLAY_timing_get(long jarg1, NV_CUSTOM_DISPLAY jarg1_);
  public final static native void NV_CUSTOM_DISPLAY_hwModeSetOnly_set(long jarg1, NV_CUSTOM_DISPLAY jarg1_, long jarg2);
  public final static native long NV_CUSTOM_DISPLAY_hwModeSetOnly_get(long jarg1, NV_CUSTOM_DISPLAY jarg1_);
  public final static native long new_NV_CUSTOM_DISPLAY();
  public final static native void delete_NV_CUSTOM_DISPLAY(long jarg1);
  public final static native int NvAPI_DISP_EnumCustomDisplay(long jarg1, long jarg2, long jarg3, NV_CUSTOM_DISPLAY jarg3_);
  public final static native int NvAPI_DISP_TryCustomDisplay(long jarg1, long jarg2, long jarg3, NV_CUSTOM_DISPLAY jarg3_);
  public final static native int NvAPI_DISP_DeleteCustomDisplay(long jarg1, long jarg2, long jarg3, NV_CUSTOM_DISPLAY jarg3_);
  public final static native int NvAPI_DISP_SaveCustomDisplay(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int NvAPI_DISP_RevertCustomDisplayTrial(long jarg1, long jarg2);
  public final static native int NvAPI_GetView(long jarg1, NvDisplayHandle__ jarg1_, long jarg2, NV_VIEW_TARGET_INFO jarg2_, long jarg3, long jarg4);
  public final static native int NvAPI_GetViewEx(long jarg1, NvDisplayHandle__ jarg1_, long jarg2, NV_DISPLAY_PATH_INFO jarg2_, long jarg3, long jarg4);
  public final static native int NvAPI_GetSupportedViews(long jarg1, NvDisplayHandle__ jarg1_, long jarg2, long jarg3);
  public final static native int NvAPI_DISP_GetDisplayIdByDisplayName(String jarg1, long jarg2);
  public final static native int NvAPI_DISP_GetDisplayConfig(long jarg1, long jarg2, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg2_);
  public final static native int NvAPI_DISP_SetDisplayConfig(long jarg1, long jarg2, NV_DISPLAYCONFIG_PATH_INFO_V2 jarg2_, long jarg3);
  public final static native int NVAPI_MAX_MOSAIC_DISPLAY_ROWS_get();
  public final static native int NVAPI_MAX_MOSAIC_DISPLAY_COLUMNS_get();
  public final static native int NV_MOSAIC_TOPO_VALIDITY_VALID_get();
  public final static native int NV_MOSAIC_TOPO_VALIDITY_MISSING_GPU_get();
  public final static native int NV_MOSAIC_TOPO_VALIDITY_MISSING_DISPLAY_get();
  public final static native int NV_MOSAIC_TOPO_VALIDITY_MIXED_DISPLAY_TYPES_get();
  public final static native void NV_MOSAIC_TOPO_DETAILS_version_set(long jarg1, NV_MOSAIC_TOPO_DETAILS jarg1_, long jarg2);
  public final static native long NV_MOSAIC_TOPO_DETAILS_version_get(long jarg1, NV_MOSAIC_TOPO_DETAILS jarg1_);
  public final static native void NV_MOSAIC_TOPO_DETAILS_hLogicalGPU_set(long jarg1, NV_MOSAIC_TOPO_DETAILS jarg1_, long jarg2, NvLogicalGpuHandle__ jarg2_);
  public final static native long NV_MOSAIC_TOPO_DETAILS_hLogicalGPU_get(long jarg1, NV_MOSAIC_TOPO_DETAILS jarg1_);
  public final static native void NV_MOSAIC_TOPO_DETAILS_validityMask_set(long jarg1, NV_MOSAIC_TOPO_DETAILS jarg1_, long jarg2);
  public final static native long NV_MOSAIC_TOPO_DETAILS_validityMask_get(long jarg1, NV_MOSAIC_TOPO_DETAILS jarg1_);
  public final static native void NV_MOSAIC_TOPO_DETAILS_rowCount_set(long jarg1, NV_MOSAIC_TOPO_DETAILS jarg1_, long jarg2);
  public final static native long NV_MOSAIC_TOPO_DETAILS_rowCount_get(long jarg1, NV_MOSAIC_TOPO_DETAILS jarg1_);
  public final static native void NV_MOSAIC_TOPO_DETAILS_colCount_set(long jarg1, NV_MOSAIC_TOPO_DETAILS jarg1_, long jarg2);
  public final static native long NV_MOSAIC_TOPO_DETAILS_colCount_get(long jarg1, NV_MOSAIC_TOPO_DETAILS jarg1_);
  public final static native long NV_MOSAIC_TOPO_DETAILS_gpuLayout_get(long jarg1, NV_MOSAIC_TOPO_DETAILS jarg1_);
  public final static native long new_NV_MOSAIC_TOPO_DETAILS();
  public final static native void delete_NV_MOSAIC_TOPO_DETAILS(long jarg1);
  public final static native void NV_MOSAIC_TOPO_DETAILS_gpuLayout_hPhysicalGPU_set(long jarg1, NV_MOSAIC_TOPO_DETAILS_gpuLayout jarg1_, long jarg2, NvPhysicalGpuHandle__ jarg2_);
  public final static native long NV_MOSAIC_TOPO_DETAILS_gpuLayout_hPhysicalGPU_get(long jarg1, NV_MOSAIC_TOPO_DETAILS_gpuLayout jarg1_);
  public final static native void NV_MOSAIC_TOPO_DETAILS_gpuLayout_displayOutputId_set(long jarg1, NV_MOSAIC_TOPO_DETAILS_gpuLayout jarg1_, long jarg2);
  public final static native long NV_MOSAIC_TOPO_DETAILS_gpuLayout_displayOutputId_get(long jarg1, NV_MOSAIC_TOPO_DETAILS_gpuLayout jarg1_);
  public final static native void NV_MOSAIC_TOPO_DETAILS_gpuLayout_overlapX_set(long jarg1, NV_MOSAIC_TOPO_DETAILS_gpuLayout jarg1_, int jarg2);
  public final static native int NV_MOSAIC_TOPO_DETAILS_gpuLayout_overlapX_get(long jarg1, NV_MOSAIC_TOPO_DETAILS_gpuLayout jarg1_);
  public final static native void NV_MOSAIC_TOPO_DETAILS_gpuLayout_overlapY_set(long jarg1, NV_MOSAIC_TOPO_DETAILS_gpuLayout jarg1_, int jarg2);
  public final static native int NV_MOSAIC_TOPO_DETAILS_gpuLayout_overlapY_get(long jarg1, NV_MOSAIC_TOPO_DETAILS_gpuLayout jarg1_);
  public final static native long new_NV_MOSAIC_TOPO_DETAILS_gpuLayout();
  public final static native void delete_NV_MOSAIC_TOPO_DETAILS_gpuLayout(long jarg1);
  public final static native int NV_MOSAIC_TOPO_1x2_BASIC_get();
  public final static native int NV_MOSAIC_TOPO_END_BASIC_get();
  public final static native int NV_MOSAIC_TOPO_1x2_PASSIVE_STEREO_get();
  public final static native int NV_MOSAIC_TOPO_END_PASSIVE_STEREO_get();
  public final static native void NV_MOSAIC_TOPO_BRIEF_version_set(long jarg1, NV_MOSAIC_TOPO_BRIEF jarg1_, long jarg2);
  public final static native long NV_MOSAIC_TOPO_BRIEF_version_get(long jarg1, NV_MOSAIC_TOPO_BRIEF jarg1_);
  public final static native void NV_MOSAIC_TOPO_BRIEF_topo_set(long jarg1, NV_MOSAIC_TOPO_BRIEF jarg1_, int jarg2);
  public final static native int NV_MOSAIC_TOPO_BRIEF_topo_get(long jarg1, NV_MOSAIC_TOPO_BRIEF jarg1_);
  public final static native void NV_MOSAIC_TOPO_BRIEF_enabled_set(long jarg1, NV_MOSAIC_TOPO_BRIEF jarg1_, long jarg2);
  public final static native long NV_MOSAIC_TOPO_BRIEF_enabled_get(long jarg1, NV_MOSAIC_TOPO_BRIEF jarg1_);
  public final static native void NV_MOSAIC_TOPO_BRIEF_isPossible_set(long jarg1, NV_MOSAIC_TOPO_BRIEF jarg1_, long jarg2);
  public final static native long NV_MOSAIC_TOPO_BRIEF_isPossible_get(long jarg1, NV_MOSAIC_TOPO_BRIEF jarg1_);
  public final static native long new_NV_MOSAIC_TOPO_BRIEF();
  public final static native void delete_NV_MOSAIC_TOPO_BRIEF(long jarg1);
  public final static native void NV_MOSAIC_DISPLAY_SETTING_version_set(long jarg1, NV_MOSAIC_DISPLAY_SETTING jarg1_, long jarg2);
  public final static native long NV_MOSAIC_DISPLAY_SETTING_version_get(long jarg1, NV_MOSAIC_DISPLAY_SETTING jarg1_);
  public final static native void NV_MOSAIC_DISPLAY_SETTING_width_set(long jarg1, NV_MOSAIC_DISPLAY_SETTING jarg1_, long jarg2);
  public final static native long NV_MOSAIC_DISPLAY_SETTING_width_get(long jarg1, NV_MOSAIC_DISPLAY_SETTING jarg1_);
  public final static native void NV_MOSAIC_DISPLAY_SETTING_height_set(long jarg1, NV_MOSAIC_DISPLAY_SETTING jarg1_, long jarg2);
  public final static native long NV_MOSAIC_DISPLAY_SETTING_height_get(long jarg1, NV_MOSAIC_DISPLAY_SETTING jarg1_);
  public final static native void NV_MOSAIC_DISPLAY_SETTING_bpp_set(long jarg1, NV_MOSAIC_DISPLAY_SETTING jarg1_, long jarg2);
  public final static native long NV_MOSAIC_DISPLAY_SETTING_bpp_get(long jarg1, NV_MOSAIC_DISPLAY_SETTING jarg1_);
  public final static native void NV_MOSAIC_DISPLAY_SETTING_freq_set(long jarg1, NV_MOSAIC_DISPLAY_SETTING jarg1_, long jarg2);
  public final static native long NV_MOSAIC_DISPLAY_SETTING_freq_get(long jarg1, NV_MOSAIC_DISPLAY_SETTING jarg1_);
  public final static native long new_NV_MOSAIC_DISPLAY_SETTING();
  public final static native void delete_NV_MOSAIC_DISPLAY_SETTING(long jarg1);
  public final static native int NV_MOSAIC_DISPLAY_SETTINGS_MAX_get();
  public final static native void NV_MOSAIC_SUPPORTED_TOPO_INFO_version_set(long jarg1, NV_MOSAIC_SUPPORTED_TOPO_INFO jarg1_, long jarg2);
  public final static native long NV_MOSAIC_SUPPORTED_TOPO_INFO_version_get(long jarg1, NV_MOSAIC_SUPPORTED_TOPO_INFO jarg1_);
  public final static native void NV_MOSAIC_SUPPORTED_TOPO_INFO_topoBriefsCount_set(long jarg1, NV_MOSAIC_SUPPORTED_TOPO_INFO jarg1_, long jarg2);
  public final static native long NV_MOSAIC_SUPPORTED_TOPO_INFO_topoBriefsCount_get(long jarg1, NV_MOSAIC_SUPPORTED_TOPO_INFO jarg1_);
  public final static native void NV_MOSAIC_SUPPORTED_TOPO_INFO_topoBriefs_set(long jarg1, NV_MOSAIC_SUPPORTED_TOPO_INFO jarg1_, long jarg2, NV_MOSAIC_TOPO_BRIEF jarg2_);
  public final static native long NV_MOSAIC_SUPPORTED_TOPO_INFO_topoBriefs_get(long jarg1, NV_MOSAIC_SUPPORTED_TOPO_INFO jarg1_);
  public final static native void NV_MOSAIC_SUPPORTED_TOPO_INFO_displaySettingsCount_set(long jarg1, NV_MOSAIC_SUPPORTED_TOPO_INFO jarg1_, long jarg2);
  public final static native long NV_MOSAIC_SUPPORTED_TOPO_INFO_displaySettingsCount_get(long jarg1, NV_MOSAIC_SUPPORTED_TOPO_INFO jarg1_);
  public final static native void NV_MOSAIC_SUPPORTED_TOPO_INFO_displaySettings_set(long jarg1, NV_MOSAIC_SUPPORTED_TOPO_INFO jarg1_, long jarg2, NV_MOSAIC_DISPLAY_SETTING jarg2_);
  public final static native long NV_MOSAIC_SUPPORTED_TOPO_INFO_displaySettings_get(long jarg1, NV_MOSAIC_SUPPORTED_TOPO_INFO jarg1_);
  public final static native long new_NV_MOSAIC_SUPPORTED_TOPO_INFO();
  public final static native void delete_NV_MOSAIC_SUPPORTED_TOPO_INFO(long jarg1);
  public final static native int NV_MOSAIC_TOPO_IDX_DEFAULT_get();
  public final static native int NV_MOSAIC_TOPO_IDX_LEFT_EYE_get();
  public final static native int NV_MOSAIC_TOPO_IDX_RIGHT_EYE_get();
  public final static native int NV_MOSAIC_TOPO_NUM_EYES_get();
  public final static native int NV_MOSAIC_MAX_TOPO_PER_TOPO_GROUP_get();
  public final static native void NV_MOSAIC_TOPO_GROUP_version_set(long jarg1, NV_MOSAIC_TOPO_GROUP jarg1_, long jarg2);
  public final static native long NV_MOSAIC_TOPO_GROUP_version_get(long jarg1, NV_MOSAIC_TOPO_GROUP jarg1_);
  public final static native void NV_MOSAIC_TOPO_GROUP_brief_set(long jarg1, NV_MOSAIC_TOPO_GROUP jarg1_, long jarg2, NV_MOSAIC_TOPO_BRIEF jarg2_);
  public final static native long NV_MOSAIC_TOPO_GROUP_brief_get(long jarg1, NV_MOSAIC_TOPO_GROUP jarg1_);
  public final static native void NV_MOSAIC_TOPO_GROUP_count_set(long jarg1, NV_MOSAIC_TOPO_GROUP jarg1_, long jarg2);
  public final static native long NV_MOSAIC_TOPO_GROUP_count_get(long jarg1, NV_MOSAIC_TOPO_GROUP jarg1_);
  public final static native void NV_MOSAIC_TOPO_GROUP_topos_set(long jarg1, NV_MOSAIC_TOPO_GROUP jarg1_, long jarg2, NV_MOSAIC_TOPO_DETAILS jarg2_);
  public final static native long NV_MOSAIC_TOPO_GROUP_topos_get(long jarg1, NV_MOSAIC_TOPO_GROUP jarg1_);
  public final static native long new_NV_MOSAIC_TOPO_GROUP();
  public final static native void delete_NV_MOSAIC_TOPO_GROUP(long jarg1);
  public final static native int NvAPI_Mosaic_GetSupportedTopoInfo(long jarg1, NV_MOSAIC_SUPPORTED_TOPO_INFO jarg1_, int jarg2);
  public final static native int NvAPI_Mosaic_GetTopoGroup(long jarg1, NV_MOSAIC_TOPO_BRIEF jarg1_, long jarg2, NV_MOSAIC_TOPO_GROUP jarg2_);
  public final static native int NvAPI_Mosaic_GetOverlapLimits(long jarg1, NV_MOSAIC_TOPO_BRIEF jarg1_, long jarg2, NV_MOSAIC_DISPLAY_SETTING jarg2_, int[] jarg3, int[] jarg4, int[] jarg5, int[] jarg6);
  public final static native int NvAPI_Mosaic_SetCurrentTopo(long jarg1, NV_MOSAIC_TOPO_BRIEF jarg1_, long jarg2, NV_MOSAIC_DISPLAY_SETTING jarg2_, int jarg3, int jarg4, long jarg5);
  public final static native int NvAPI_Mosaic_GetCurrentTopo(long jarg1, NV_MOSAIC_TOPO_BRIEF jarg1_, long jarg2, NV_MOSAIC_DISPLAY_SETTING jarg2_, int[] jarg3, int[] jarg4);
  public final static native int NvAPI_Mosaic_EnableCurrentTopo(long jarg1);
  public final static native void NV_MOSAIC_GRID_TOPO_DISPLAY_displayId_set(long jarg1, NV_MOSAIC_GRID_TOPO_DISPLAY jarg1_, long jarg2);
  public final static native long NV_MOSAIC_GRID_TOPO_DISPLAY_displayId_get(long jarg1, NV_MOSAIC_GRID_TOPO_DISPLAY jarg1_);
  public final static native void NV_MOSAIC_GRID_TOPO_DISPLAY_overlapX_set(long jarg1, NV_MOSAIC_GRID_TOPO_DISPLAY jarg1_, int jarg2);
  public final static native int NV_MOSAIC_GRID_TOPO_DISPLAY_overlapX_get(long jarg1, NV_MOSAIC_GRID_TOPO_DISPLAY jarg1_);
  public final static native void NV_MOSAIC_GRID_TOPO_DISPLAY_overlapY_set(long jarg1, NV_MOSAIC_GRID_TOPO_DISPLAY jarg1_, int jarg2);
  public final static native int NV_MOSAIC_GRID_TOPO_DISPLAY_overlapY_get(long jarg1, NV_MOSAIC_GRID_TOPO_DISPLAY jarg1_);
  public final static native void NV_MOSAIC_GRID_TOPO_DISPLAY_rotation_set(long jarg1, NV_MOSAIC_GRID_TOPO_DISPLAY jarg1_, int jarg2);
  public final static native int NV_MOSAIC_GRID_TOPO_DISPLAY_rotation_get(long jarg1, NV_MOSAIC_GRID_TOPO_DISPLAY jarg1_);
  public final static native void NV_MOSAIC_GRID_TOPO_DISPLAY_cloneGroup_set(long jarg1, NV_MOSAIC_GRID_TOPO_DISPLAY jarg1_, long jarg2);
  public final static native long NV_MOSAIC_GRID_TOPO_DISPLAY_cloneGroup_get(long jarg1, NV_MOSAIC_GRID_TOPO_DISPLAY jarg1_);
  public final static native long new_NV_MOSAIC_GRID_TOPO_DISPLAY();
  public final static native void delete_NV_MOSAIC_GRID_TOPO_DISPLAY(long jarg1);
  public final static native void NV_MOSAIC_GRID_TOPO_V1_version_set(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_, long jarg2);
  public final static native long NV_MOSAIC_GRID_TOPO_V1_version_get(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_);
  public final static native void NV_MOSAIC_GRID_TOPO_V1_rows_set(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_, long jarg2);
  public final static native long NV_MOSAIC_GRID_TOPO_V1_rows_get(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_);
  public final static native void NV_MOSAIC_GRID_TOPO_V1_columns_set(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_, long jarg2);
  public final static native long NV_MOSAIC_GRID_TOPO_V1_columns_get(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_);
  public final static native void NV_MOSAIC_GRID_TOPO_V1_displayCount_set(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_, long jarg2);
  public final static native long NV_MOSAIC_GRID_TOPO_V1_displayCount_get(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_);
  public final static native void NV_MOSAIC_GRID_TOPO_V1_applyWithBezelCorrect_set(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_, long jarg2);
  public final static native long NV_MOSAIC_GRID_TOPO_V1_applyWithBezelCorrect_get(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_);
  public final static native void NV_MOSAIC_GRID_TOPO_V1_immersiveGaming_set(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_, long jarg2);
  public final static native long NV_MOSAIC_GRID_TOPO_V1_immersiveGaming_get(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_);
  public final static native void NV_MOSAIC_GRID_TOPO_V1_baseMosaic_set(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_, long jarg2);
  public final static native long NV_MOSAIC_GRID_TOPO_V1_baseMosaic_get(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_);
  public final static native void NV_MOSAIC_GRID_TOPO_V1_driverReloadAllowed_set(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_, long jarg2);
  public final static native long NV_MOSAIC_GRID_TOPO_V1_driverReloadAllowed_get(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_);
  public final static native void NV_MOSAIC_GRID_TOPO_V1_acceleratePrimaryDisplay_set(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_, long jarg2);
  public final static native long NV_MOSAIC_GRID_TOPO_V1_acceleratePrimaryDisplay_get(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_);
  public final static native void NV_MOSAIC_GRID_TOPO_V1_reserved_set(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_, long jarg2);
  public final static native long NV_MOSAIC_GRID_TOPO_V1_reserved_get(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_);
  public final static native void NV_MOSAIC_GRID_TOPO_V1_displays_set(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_, long jarg2, NV_MOSAIC_GRID_TOPO_DISPLAY jarg2_);
  public final static native long NV_MOSAIC_GRID_TOPO_V1_displays_get(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_);
  public final static native void NV_MOSAIC_GRID_TOPO_V1_displaySettings_set(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_, long jarg2, NV_MOSAIC_DISPLAY_SETTING jarg2_);
  public final static native long NV_MOSAIC_GRID_TOPO_V1_displaySettings_get(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_);
  public final static native long new_NV_MOSAIC_GRID_TOPO_V1();
  public final static native void delete_NV_MOSAIC_GRID_TOPO_V1(long jarg1);
  public final static native int NV_MOSAIC_SETDISPLAYTOPO_FLAG_CURRENT_GPU_TOPOLOGY_get();
  public final static native int NV_MOSAIC_SETDISPLAYTOPO_FLAG_NO_DRIVER_RELOAD_get();
  public final static native int NV_MOSAIC_SETDISPLAYTOPO_FLAG_MAXIMIZE_PERFORMANCE_get();
  public final static native int NV_MOSAIC_SETDISPLAYTOPO_FLAG_ALLOW_INVALID_get();
  public final static native int NvAPI_Mosaic_SetDisplayGrids(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_, long jarg2, long jarg3);
  public final static native void NV_MOSAIC_DISPLAY_TOPO_STATUS_version_set(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS jarg1_, long jarg2);
  public final static native long NV_MOSAIC_DISPLAY_TOPO_STATUS_version_get(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS jarg1_);
  public final static native void NV_MOSAIC_DISPLAY_TOPO_STATUS_errorFlags_set(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS jarg1_, long jarg2);
  public final static native long NV_MOSAIC_DISPLAY_TOPO_STATUS_errorFlags_get(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS jarg1_);
  public final static native void NV_MOSAIC_DISPLAY_TOPO_STATUS_warningFlags_set(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS jarg1_, long jarg2);
  public final static native long NV_MOSAIC_DISPLAY_TOPO_STATUS_warningFlags_get(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS jarg1_);
  public final static native void NV_MOSAIC_DISPLAY_TOPO_STATUS_displayCount_set(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS jarg1_, long jarg2);
  public final static native long NV_MOSAIC_DISPLAY_TOPO_STATUS_displayCount_get(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS jarg1_);
  public final static native long NV_MOSAIC_DISPLAY_TOPO_STATUS_displays_get(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS jarg1_);
  public final static native long new_NV_MOSAIC_DISPLAY_TOPO_STATUS();
  public final static native void delete_NV_MOSAIC_DISPLAY_TOPO_STATUS(long jarg1);
  public final static native void NV_MOSAIC_DISPLAY_TOPO_STATUS_displays_displayId_set(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS_displays jarg1_, long jarg2);
  public final static native long NV_MOSAIC_DISPLAY_TOPO_STATUS_displays_displayId_get(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS_displays jarg1_);
  public final static native void NV_MOSAIC_DISPLAY_TOPO_STATUS_displays_errorFlags_set(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS_displays jarg1_, long jarg2);
  public final static native long NV_MOSAIC_DISPLAY_TOPO_STATUS_displays_errorFlags_get(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS_displays jarg1_);
  public final static native void NV_MOSAIC_DISPLAY_TOPO_STATUS_displays_warningFlags_set(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS_displays jarg1_, long jarg2);
  public final static native long NV_MOSAIC_DISPLAY_TOPO_STATUS_displays_warningFlags_get(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS_displays jarg1_);
  public final static native void NV_MOSAIC_DISPLAY_TOPO_STATUS_displays_supportsRotation_set(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS_displays jarg1_, long jarg2);
  public final static native long NV_MOSAIC_DISPLAY_TOPO_STATUS_displays_supportsRotation_get(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS_displays jarg1_);
  public final static native void NV_MOSAIC_DISPLAY_TOPO_STATUS_displays_reserved_set(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS_displays jarg1_, long jarg2);
  public final static native long NV_MOSAIC_DISPLAY_TOPO_STATUS_displays_reserved_get(long jarg1, NV_MOSAIC_DISPLAY_TOPO_STATUS_displays jarg1_);
  public final static native long new_NV_MOSAIC_DISPLAY_TOPO_STATUS_displays();
  public final static native void delete_NV_MOSAIC_DISPLAY_TOPO_STATUS_displays(long jarg1);
  public final static native int NvAPI_Mosaic_ValidateDisplayGrids(long jarg1, long jarg2, NV_MOSAIC_GRID_TOPO_V1 jarg2_, long jarg3, NV_MOSAIC_DISPLAY_TOPO_STATUS jarg3_, long jarg4);
  public final static native int NvAPI_Mosaic_EnumDisplayModes(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_, long jarg2, NV_MOSAIC_DISPLAY_SETTING jarg2_, long jarg3);
  public final static native int NvAPI_Mosaic_EnumDisplayGrids(long jarg1, NV_MOSAIC_GRID_TOPO_V1 jarg1_, long jarg2);
  public final static native int NVAPI_MAX_MOSAIC_TOPOS_get();
  public final static native void NV_MOSAIC_TOPOLOGY_version_set(long jarg1, NV_MOSAIC_TOPOLOGY jarg1_, long jarg2);
  public final static native long NV_MOSAIC_TOPOLOGY_version_get(long jarg1, NV_MOSAIC_TOPOLOGY jarg1_);
  public final static native void NV_MOSAIC_TOPOLOGY_rowCount_set(long jarg1, NV_MOSAIC_TOPOLOGY jarg1_, long jarg2);
  public final static native long NV_MOSAIC_TOPOLOGY_rowCount_get(long jarg1, NV_MOSAIC_TOPOLOGY jarg1_);
  public final static native void NV_MOSAIC_TOPOLOGY_colCount_set(long jarg1, NV_MOSAIC_TOPOLOGY jarg1_, long jarg2);
  public final static native long NV_MOSAIC_TOPOLOGY_colCount_get(long jarg1, NV_MOSAIC_TOPOLOGY jarg1_);
  public final static native long NV_MOSAIC_TOPOLOGY_gpuLayout_get(long jarg1, NV_MOSAIC_TOPOLOGY jarg1_);
  public final static native long new_NV_MOSAIC_TOPOLOGY();
  public final static native void delete_NV_MOSAIC_TOPOLOGY(long jarg1);
  public final static native void NV_MOSAIC_TOPOLOGY_gpuLayout_hPhysicalGPU_set(long jarg1, NV_MOSAIC_TOPOLOGY_gpuLayout jarg1_, long jarg2, NvPhysicalGpuHandle__ jarg2_);
  public final static native long NV_MOSAIC_TOPOLOGY_gpuLayout_hPhysicalGPU_get(long jarg1, NV_MOSAIC_TOPOLOGY_gpuLayout jarg1_);
  public final static native void NV_MOSAIC_TOPOLOGY_gpuLayout_displayOutputId_set(long jarg1, NV_MOSAIC_TOPOLOGY_gpuLayout jarg1_, long jarg2);
  public final static native long NV_MOSAIC_TOPOLOGY_gpuLayout_displayOutputId_get(long jarg1, NV_MOSAIC_TOPOLOGY_gpuLayout jarg1_);
  public final static native void NV_MOSAIC_TOPOLOGY_gpuLayout_overlapX_set(long jarg1, NV_MOSAIC_TOPOLOGY_gpuLayout jarg1_, int jarg2);
  public final static native int NV_MOSAIC_TOPOLOGY_gpuLayout_overlapX_get(long jarg1, NV_MOSAIC_TOPOLOGY_gpuLayout jarg1_);
  public final static native void NV_MOSAIC_TOPOLOGY_gpuLayout_overlapY_set(long jarg1, NV_MOSAIC_TOPOLOGY_gpuLayout jarg1_, int jarg2);
  public final static native int NV_MOSAIC_TOPOLOGY_gpuLayout_overlapY_get(long jarg1, NV_MOSAIC_TOPOLOGY_gpuLayout jarg1_);
  public final static native long new_NV_MOSAIC_TOPOLOGY_gpuLayout();
  public final static native void delete_NV_MOSAIC_TOPOLOGY_gpuLayout(long jarg1);
  public final static native void NV_MOSAIC_SUPPORTED_TOPOLOGIES_version_set(long jarg1, NV_MOSAIC_SUPPORTED_TOPOLOGIES jarg1_, long jarg2);
  public final static native long NV_MOSAIC_SUPPORTED_TOPOLOGIES_version_get(long jarg1, NV_MOSAIC_SUPPORTED_TOPOLOGIES jarg1_);
  public final static native void NV_MOSAIC_SUPPORTED_TOPOLOGIES_totalCount_set(long jarg1, NV_MOSAIC_SUPPORTED_TOPOLOGIES jarg1_, long jarg2);
  public final static native long NV_MOSAIC_SUPPORTED_TOPOLOGIES_totalCount_get(long jarg1, NV_MOSAIC_SUPPORTED_TOPOLOGIES jarg1_);
  public final static native void NV_MOSAIC_SUPPORTED_TOPOLOGIES_topos_set(long jarg1, NV_MOSAIC_SUPPORTED_TOPOLOGIES jarg1_, long jarg2, NV_MOSAIC_TOPOLOGY jarg2_);
  public final static native long NV_MOSAIC_SUPPORTED_TOPOLOGIES_topos_get(long jarg1, NV_MOSAIC_SUPPORTED_TOPOLOGIES jarg1_);
  public final static native long new_NV_MOSAIC_SUPPORTED_TOPOLOGIES();
  public final static native void delete_NV_MOSAIC_SUPPORTED_TOPOLOGIES(long jarg1);
  public final static native int NvAPI_GetSupportedMosaicTopologies(long jarg1, NV_MOSAIC_SUPPORTED_TOPOLOGIES jarg1_);
  public final static native int NvAPI_GetCurrentMosaicTopology(long jarg1, NV_MOSAIC_TOPOLOGY jarg1_, long jarg2);
  public final static native int NvAPI_SetCurrentMosaicTopology(long jarg1, NV_MOSAIC_TOPOLOGY jarg1_);
  public final static native int NvAPI_EnableCurrentMosaicTopology(long jarg1);
  public final static native int NVAPI_MAX_GSYNC_DEVICES_get();
  public final static native int NvAPI_GSync_EnumSyncDevices(long jarg1, long jarg2);
  public final static native int NVAPI_GSYNC_BOARD_ID_P358_get();
  public final static native int NVAPI_GSYNC_BOARD_ID_P2060_get();
  public final static native void NV_GSYNC_CAPABILITIES_version_set(long jarg1, NV_GSYNC_CAPABILITIES jarg1_, long jarg2);
  public final static native long NV_GSYNC_CAPABILITIES_version_get(long jarg1, NV_GSYNC_CAPABILITIES jarg1_);
  public final static native void NV_GSYNC_CAPABILITIES_boardId_set(long jarg1, NV_GSYNC_CAPABILITIES jarg1_, long jarg2);
  public final static native long NV_GSYNC_CAPABILITIES_boardId_get(long jarg1, NV_GSYNC_CAPABILITIES jarg1_);
  public final static native void NV_GSYNC_CAPABILITIES_revision_set(long jarg1, NV_GSYNC_CAPABILITIES jarg1_, long jarg2);
  public final static native long NV_GSYNC_CAPABILITIES_revision_get(long jarg1, NV_GSYNC_CAPABILITIES jarg1_);
  public final static native void NV_GSYNC_CAPABILITIES_capFlags_set(long jarg1, NV_GSYNC_CAPABILITIES jarg1_, long jarg2);
  public final static native long NV_GSYNC_CAPABILITIES_capFlags_get(long jarg1, NV_GSYNC_CAPABILITIES jarg1_);
  public final static native long new_NV_GSYNC_CAPABILITIES();
  public final static native void delete_NV_GSYNC_CAPABILITIES(long jarg1);
  public final static native int NvAPI_GSync_QueryCapabilities(long jarg1, NvGSyncDeviceHandle__ jarg1_, long jarg2, NV_GSYNC_CAPABILITIES jarg2_);
  public final static native int NVAPI_GSYNC_GPU_TOPOLOGY_CONNECTOR_NONE_get();
  public final static native int NVAPI_GSYNC_GPU_TOPOLOGY_CONNECTOR_PRIMARY_get();
  public final static native int NVAPI_GSYNC_GPU_TOPOLOGY_CONNECTOR_SECONDARY_get();
  public final static native int NVAPI_GSYNC_GPU_TOPOLOGY_CONNECTOR_TERTIARY_get();
  public final static native int NVAPI_GSYNC_GPU_TOPOLOGY_CONNECTOR_QUARTERNARY_get();
  public final static native int NVAPI_GSYNC_DISPLAY_SYNC_STATE_UNSYNCED_get();
  public final static native int NVAPI_GSYNC_DISPLAY_SYNC_STATE_SLAVE_get();
  public final static native int NVAPI_GSYNC_DISPLAY_SYNC_STATE_MASTER_get();
  public final static native void NV_GSYNC_GPU_version_set(long jarg1, NV_GSYNC_GPU jarg1_, long jarg2);
  public final static native long NV_GSYNC_GPU_version_get(long jarg1, NV_GSYNC_GPU jarg1_);
  public final static native void NV_GSYNC_GPU_hPhysicalGpu_set(long jarg1, NV_GSYNC_GPU jarg1_, long jarg2, NvPhysicalGpuHandle__ jarg2_);
  public final static native long NV_GSYNC_GPU_hPhysicalGpu_get(long jarg1, NV_GSYNC_GPU jarg1_);
  public final static native void NV_GSYNC_GPU_connector_set(long jarg1, NV_GSYNC_GPU jarg1_, int jarg2);
  public final static native int NV_GSYNC_GPU_connector_get(long jarg1, NV_GSYNC_GPU jarg1_);
  public final static native void NV_GSYNC_GPU_hProxyPhysicalGpu_set(long jarg1, NV_GSYNC_GPU jarg1_, long jarg2, NvPhysicalGpuHandle__ jarg2_);
  public final static native long NV_GSYNC_GPU_hProxyPhysicalGpu_get(long jarg1, NV_GSYNC_GPU jarg1_);
  public final static native void NV_GSYNC_GPU_isSynced_set(long jarg1, NV_GSYNC_GPU jarg1_, long jarg2);
  public final static native long NV_GSYNC_GPU_isSynced_get(long jarg1, NV_GSYNC_GPU jarg1_);
  public final static native void NV_GSYNC_GPU_reserved_set(long jarg1, NV_GSYNC_GPU jarg1_, long jarg2);
  public final static native long NV_GSYNC_GPU_reserved_get(long jarg1, NV_GSYNC_GPU jarg1_);
  public final static native long new_NV_GSYNC_GPU();
  public final static native void delete_NV_GSYNC_GPU(long jarg1);
  public final static native void NV_GSYNC_DISPLAY_version_set(long jarg1, NV_GSYNC_DISPLAY jarg1_, long jarg2);
  public final static native long NV_GSYNC_DISPLAY_version_get(long jarg1, NV_GSYNC_DISPLAY jarg1_);
  public final static native void NV_GSYNC_DISPLAY_displayId_set(long jarg1, NV_GSYNC_DISPLAY jarg1_, long jarg2);
  public final static native long NV_GSYNC_DISPLAY_displayId_get(long jarg1, NV_GSYNC_DISPLAY jarg1_);
  public final static native void NV_GSYNC_DISPLAY_isMasterable_set(long jarg1, NV_GSYNC_DISPLAY jarg1_, long jarg2);
  public final static native long NV_GSYNC_DISPLAY_isMasterable_get(long jarg1, NV_GSYNC_DISPLAY jarg1_);
  public final static native void NV_GSYNC_DISPLAY_reserved_set(long jarg1, NV_GSYNC_DISPLAY jarg1_, long jarg2);
  public final static native long NV_GSYNC_DISPLAY_reserved_get(long jarg1, NV_GSYNC_DISPLAY jarg1_);
  public final static native void NV_GSYNC_DISPLAY_syncState_set(long jarg1, NV_GSYNC_DISPLAY jarg1_, int jarg2);
  public final static native int NV_GSYNC_DISPLAY_syncState_get(long jarg1, NV_GSYNC_DISPLAY jarg1_);
  public final static native long new_NV_GSYNC_DISPLAY();
  public final static native void delete_NV_GSYNC_DISPLAY(long jarg1);
  public final static native int NvAPI_GSync_GetTopology(long jarg1, NvGSyncDeviceHandle__ jarg1_, long jarg2, long jarg3, NV_GSYNC_GPU jarg3_, long jarg4, long jarg5, NV_GSYNC_DISPLAY jarg5_);
  public final static native int NvAPI_GSync_SetSyncStateSettings(long jarg1, long jarg2, NV_GSYNC_DISPLAY jarg2_, long jarg3);
  public final static native int NVAPI_GSYNC_POLARITY_RISING_EDGE_get();
  public final static native int NVAPI_GSYNC_POLARITY_FALLING_EDGE_get();
  public final static native int NVAPI_GSYNC_POLARITY_BOTH_EDGES_get();
  public final static native int NVAPI_GSYNC_VIDEO_MODE_NONE_get();
  public final static native int NVAPI_GSYNC_VIDEO_MODE_TTL_get();
  public final static native int NVAPI_GSYNC_VIDEO_MODE_NTSCPALSECAM_get();
  public final static native int NVAPI_GSYNC_VIDEO_MODE_HDTV_get();
  public final static native int NVAPI_GSYNC_VIDEO_MODE_COMPOSITE_get();
  public final static native int NVAPI_GSYNC_SYNC_SOURCE_VSYNC_get();
  public final static native int NVAPI_GSYNC_SYNC_SOURCE_HOUSESYNC_get();
  public final static native void NV_GSYNC_DELAY_version_set(long jarg1, NV_GSYNC_DELAY jarg1_, long jarg2);
  public final static native long NV_GSYNC_DELAY_version_get(long jarg1, NV_GSYNC_DELAY jarg1_);
  public final static native void NV_GSYNC_DELAY_numLines_set(long jarg1, NV_GSYNC_DELAY jarg1_, long jarg2);
  public final static native long NV_GSYNC_DELAY_numLines_get(long jarg1, NV_GSYNC_DELAY jarg1_);
  public final static native void NV_GSYNC_DELAY_numPixels_set(long jarg1, NV_GSYNC_DELAY jarg1_, long jarg2);
  public final static native long NV_GSYNC_DELAY_numPixels_get(long jarg1, NV_GSYNC_DELAY jarg1_);
  public final static native void NV_GSYNC_DELAY_maxLines_set(long jarg1, NV_GSYNC_DELAY jarg1_, long jarg2);
  public final static native long NV_GSYNC_DELAY_maxLines_get(long jarg1, NV_GSYNC_DELAY jarg1_);
  public final static native void NV_GSYNC_DELAY_minPixels_set(long jarg1, NV_GSYNC_DELAY jarg1_, long jarg2);
  public final static native long NV_GSYNC_DELAY_minPixels_get(long jarg1, NV_GSYNC_DELAY jarg1_);
  public final static native long new_NV_GSYNC_DELAY();
  public final static native void delete_NV_GSYNC_DELAY(long jarg1);
  public final static native void NV_GSYNC_CONTROL_PARAMS_version_set(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_, long jarg2);
  public final static native long NV_GSYNC_CONTROL_PARAMS_version_get(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_);
  public final static native void NV_GSYNC_CONTROL_PARAMS_polarity_set(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_, int jarg2);
  public final static native int NV_GSYNC_CONTROL_PARAMS_polarity_get(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_);
  public final static native void NV_GSYNC_CONTROL_PARAMS_vmode_set(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_, int jarg2);
  public final static native int NV_GSYNC_CONTROL_PARAMS_vmode_get(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_);
  public final static native void NV_GSYNC_CONTROL_PARAMS_interval_set(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_, long jarg2);
  public final static native long NV_GSYNC_CONTROL_PARAMS_interval_get(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_);
  public final static native void NV_GSYNC_CONTROL_PARAMS_source_set(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_, int jarg2);
  public final static native int NV_GSYNC_CONTROL_PARAMS_source_get(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_);
  public final static native void NV_GSYNC_CONTROL_PARAMS_interlaceMode_set(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_, long jarg2);
  public final static native long NV_GSYNC_CONTROL_PARAMS_interlaceMode_get(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_);
  public final static native void NV_GSYNC_CONTROL_PARAMS_reserved_set(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_, long jarg2);
  public final static native long NV_GSYNC_CONTROL_PARAMS_reserved_get(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_);
  public final static native void NV_GSYNC_CONTROL_PARAMS_syncSkew_set(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_, long jarg2, NV_GSYNC_DELAY jarg2_);
  public final static native long NV_GSYNC_CONTROL_PARAMS_syncSkew_get(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_);
  public final static native void NV_GSYNC_CONTROL_PARAMS_startupDelay_set(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_, long jarg2, NV_GSYNC_DELAY jarg2_);
  public final static native long NV_GSYNC_CONTROL_PARAMS_startupDelay_get(long jarg1, NV_GSYNC_CONTROL_PARAMS jarg1_);
  public final static native long new_NV_GSYNC_CONTROL_PARAMS();
  public final static native void delete_NV_GSYNC_CONTROL_PARAMS(long jarg1);
  public final static native int NvAPI_GSync_GetControlParameters(long jarg1, NvGSyncDeviceHandle__ jarg1_, long jarg2, NV_GSYNC_CONTROL_PARAMS jarg2_);
  public final static native int NvAPI_GSync_SetControlParameters(long jarg1, NvGSyncDeviceHandle__ jarg1_, long jarg2, NV_GSYNC_CONTROL_PARAMS jarg2_);
  public final static native int NVAPI_GSYNC_DELAY_TYPE_UNKNOWN_get();
  public final static native int NVAPI_GSYNC_DELAY_TYPE_SYNC_SKEW_get();
  public final static native int NVAPI_GSYNC_DELAY_TYPE_STARTUP_get();
  public final static native int NvAPI_GSync_AdjustSyncDelay(long jarg1, NvGSyncDeviceHandle__ jarg1_, int jarg2, long jarg3, NV_GSYNC_DELAY jarg3_, long jarg4);
  public final static native void NV_GSYNC_STATUS_version_set(long jarg1, NV_GSYNC_STATUS jarg1_, long jarg2);
  public final static native long NV_GSYNC_STATUS_version_get(long jarg1, NV_GSYNC_STATUS jarg1_);
  public final static native void NV_GSYNC_STATUS_bIsSynced_set(long jarg1, NV_GSYNC_STATUS jarg1_, long jarg2);
  public final static native long NV_GSYNC_STATUS_bIsSynced_get(long jarg1, NV_GSYNC_STATUS jarg1_);
  public final static native void NV_GSYNC_STATUS_bIsStereoSynced_set(long jarg1, NV_GSYNC_STATUS jarg1_, long jarg2);
  public final static native long NV_GSYNC_STATUS_bIsStereoSynced_get(long jarg1, NV_GSYNC_STATUS jarg1_);
  public final static native void NV_GSYNC_STATUS_bIsSyncSignalAvailable_set(long jarg1, NV_GSYNC_STATUS jarg1_, long jarg2);
  public final static native long NV_GSYNC_STATUS_bIsSyncSignalAvailable_get(long jarg1, NV_GSYNC_STATUS jarg1_);
  public final static native long new_NV_GSYNC_STATUS();
  public final static native void delete_NV_GSYNC_STATUS(long jarg1);
  public final static native int NvAPI_GSync_GetSyncStatus(long jarg1, NvGSyncDeviceHandle__ jarg1_, long jarg2, NvPhysicalGpuHandle__ jarg2_, long jarg3, NV_GSYNC_STATUS jarg3_);
  public final static native int NVAPI_MAX_RJ45_PER_GSYNC_get();
  public final static native int NVAPI_GSYNC_RJ45_OUTPUT_get();
  public final static native int NVAPI_GSYNC_RJ45_INPUT_get();
  public final static native int NVAPI_GSYNC_RJ45_UNUSED_get();
  public final static native void NV_GSYNC_STATUS_PARAMS_version_set(long jarg1, NV_GSYNC_STATUS_PARAMS jarg1_, long jarg2);
  public final static native long NV_GSYNC_STATUS_PARAMS_version_get(long jarg1, NV_GSYNC_STATUS_PARAMS jarg1_);
  public final static native void NV_GSYNC_STATUS_PARAMS_refreshRate_set(long jarg1, NV_GSYNC_STATUS_PARAMS jarg1_, long jarg2);
  public final static native long NV_GSYNC_STATUS_PARAMS_refreshRate_get(long jarg1, NV_GSYNC_STATUS_PARAMS jarg1_);
  public final static native void NV_GSYNC_STATUS_PARAMS_RJ45_IO_set(long jarg1, NV_GSYNC_STATUS_PARAMS jarg1_, long jarg2);
  public final static native long NV_GSYNC_STATUS_PARAMS_RJ45_IO_get(long jarg1, NV_GSYNC_STATUS_PARAMS jarg1_);
  public final static native void NV_GSYNC_STATUS_PARAMS_RJ45_Ethernet_set(long jarg1, NV_GSYNC_STATUS_PARAMS jarg1_, long[] jarg2);
  public final static native long[] NV_GSYNC_STATUS_PARAMS_RJ45_Ethernet_get(long jarg1, NV_GSYNC_STATUS_PARAMS jarg1_);
  public final static native void NV_GSYNC_STATUS_PARAMS_houseSyncIncoming_set(long jarg1, NV_GSYNC_STATUS_PARAMS jarg1_, long jarg2);
  public final static native long NV_GSYNC_STATUS_PARAMS_houseSyncIncoming_get(long jarg1, NV_GSYNC_STATUS_PARAMS jarg1_);
  public final static native void NV_GSYNC_STATUS_PARAMS_bHouseSync_set(long jarg1, NV_GSYNC_STATUS_PARAMS jarg1_, long jarg2);
  public final static native long NV_GSYNC_STATUS_PARAMS_bHouseSync_get(long jarg1, NV_GSYNC_STATUS_PARAMS jarg1_);
  public final static native long new_NV_GSYNC_STATUS_PARAMS();
  public final static native void delete_NV_GSYNC_STATUS_PARAMS(long jarg1);
  public final static native int NvAPI_GSync_GetStatusParameters(long jarg1, NvGSyncDeviceHandle__ jarg1_, long jarg2, NV_GSYNC_STATUS_PARAMS jarg2_);
  public final static native int NVVIOOWNERID_NONE_get();
  public final static native int NVVIO_O_READ_get();
  public final static native int NVVIO_O_WRITE_EXCLUSIVE_get();
  public final static native int NVVIO_VALID_ACCESSRIGHTS_get();
  public final static native int NVVIO_OWNERID_INITIALIZED_get();
  public final static native int NVVIO_OWNERID_EXCLUSIVE_get();
  public final static native int NVVIO_OWNERID_TYPEMASK_get();
  public final static native int NVVIODATAFORMAT_UNKNOWN_get();
  public final static native int NVAPI_MAX_VIO_DEVICES_get();
  public final static native int NVAPI_MAX_VIO_JACKS_get();
  public final static native int NVAPI_MAX_VIO_CHANNELS_PER_JACK_get();
  public final static native int NVAPI_MAX_VIO_STREAMS_get();
  public final static native int NVAPI_MIN_VIO_STREAMS_get();
  public final static native int NVAPI_MAX_VIO_LINKS_PER_STREAM_get();
  public final static native int NVAPI_MAX_FRAMELOCK_MAPPING_MODES_get();
  public final static native int NVAPI_GVI_MIN_RAW_CAPTURE_IMAGES_get();
  public final static native int NVAPI_GVI_MAX_RAW_CAPTURE_IMAGES_get();
  public final static native int NVAPI_GVI_DEFAULT_RAW_CAPTURE_IMAGES_get();
  public final static native int NVVIOCAPS_VIDOUT_SDI_get();
  public final static native int NVVIOCAPS_SYNC_INTERNAL_get();
  public final static native int NVVIOCAPS_SYNC_GENLOCK_get();
  public final static native int NVVIOCAPS_SYNCSRC_SDI_get();
  public final static native int NVVIOCAPS_SYNCSRC_COMP_get();
  public final static native int NVVIOCAPS_OUTPUTMODE_DESKTOP_get();
  public final static native int NVVIOCAPS_OUTPUTMODE_OPENGL_get();
  public final static native int NVVIOCAPS_VIDIN_SDI_get();
  public final static native int NVVIOCAPS_PACKED_ANC_SUPPORTED_get();
  public final static native int NVVIOCAPS_AUDIO_BLANKING_SUPPORTED_get();
  public final static native int NVVIOCLASS_SDI_get();
  public final static native void NVVIOCAPS_version_set(long jarg1, NVVIOCAPS jarg1_, long jarg2);
  public final static native long NVVIOCAPS_version_get(long jarg1, NVVIOCAPS jarg1_);
  public final static native void NVVIOCAPS_adapterName_set(long jarg1, NVVIOCAPS jarg1_, String jarg2);
  public final static native String NVVIOCAPS_adapterName_get(long jarg1, NVVIOCAPS jarg1_);
  public final static native void NVVIOCAPS_adapterClass_set(long jarg1, NVVIOCAPS jarg1_, long jarg2);
  public final static native long NVVIOCAPS_adapterClass_get(long jarg1, NVVIOCAPS jarg1_);
  public final static native void NVVIOCAPS_adapterCaps_set(long jarg1, NVVIOCAPS jarg1_, long jarg2);
  public final static native long NVVIOCAPS_adapterCaps_get(long jarg1, NVVIOCAPS jarg1_);
  public final static native void NVVIOCAPS_dipSwitch_set(long jarg1, NVVIOCAPS jarg1_, long jarg2);
  public final static native long NVVIOCAPS_dipSwitch_get(long jarg1, NVVIOCAPS jarg1_);
  public final static native void NVVIOCAPS_dipSwitchReserved_set(long jarg1, NVVIOCAPS jarg1_, long jarg2);
  public final static native long NVVIOCAPS_dipSwitchReserved_get(long jarg1, NVVIOCAPS jarg1_);
  public final static native void NVVIOCAPS_boardID_set(long jarg1, NVVIOCAPS jarg1_, long jarg2);
  public final static native long NVVIOCAPS_boardID_get(long jarg1, NVVIOCAPS jarg1_);
  public final static native void NVVIOCAPS_ownerId_set(long jarg1, NVVIOCAPS jarg1_, long jarg2);
  public final static native long NVVIOCAPS_ownerId_get(long jarg1, NVVIOCAPS jarg1_);
  public final static native void NVVIOCAPS_ownerType_set(long jarg1, NVVIOCAPS jarg1_, int jarg2);
  public final static native int NVVIOCAPS_ownerType_get(long jarg1, NVVIOCAPS jarg1_);
  public final static native long NVVIOCAPS_driver_get(long jarg1, NVVIOCAPS jarg1_);
  public final static native long NVVIOCAPS_firmWare_get(long jarg1, NVVIOCAPS jarg1_);
  public final static native long new_NVVIOCAPS();
  public final static native void delete_NVVIOCAPS(long jarg1);
  public final static native void NVVIOCAPS_firmWare_majorVersion_set(long jarg1, NVVIOCAPS_firmWare jarg1_, long jarg2);
  public final static native long NVVIOCAPS_firmWare_majorVersion_get(long jarg1, NVVIOCAPS_firmWare jarg1_);
  public final static native void NVVIOCAPS_firmWare_minorVersion_set(long jarg1, NVVIOCAPS_firmWare jarg1_, long jarg2);
  public final static native long NVVIOCAPS_firmWare_minorVersion_get(long jarg1, NVVIOCAPS_firmWare jarg1_);
  public final static native long new_NVVIOCAPS_firmWare();
  public final static native void delete_NVVIOCAPS_firmWare(long jarg1);
  public final static native void NVVIOCAPS_driver_majorVersion_set(long jarg1, NVVIOCAPS_driver jarg1_, long jarg2);
  public final static native long NVVIOCAPS_driver_majorVersion_get(long jarg1, NVVIOCAPS_driver jarg1_);
  public final static native void NVVIOCAPS_driver_minorVersion_set(long jarg1, NVVIOCAPS_driver jarg1_, long jarg2);
  public final static native long NVVIOCAPS_driver_minorVersion_get(long jarg1, NVVIOCAPS_driver jarg1_);
  public final static native long new_NVVIOCAPS_driver();
  public final static native void delete_NVVIOCAPS_driver(long jarg1);
  public final static native void NVVIOCHANNELSTATUS_smpte352_set(long jarg1, NVVIOCHANNELSTATUS jarg1_, long jarg2);
  public final static native long NVVIOCHANNELSTATUS_smpte352_get(long jarg1, NVVIOCHANNELSTATUS jarg1_);
  public final static native void NVVIOCHANNELSTATUS_signalFormat_set(long jarg1, NVVIOCHANNELSTATUS jarg1_, int jarg2);
  public final static native int NVVIOCHANNELSTATUS_signalFormat_get(long jarg1, NVVIOCHANNELSTATUS jarg1_);
  public final static native void NVVIOCHANNELSTATUS_bitsPerComponent_set(long jarg1, NVVIOCHANNELSTATUS jarg1_, int jarg2);
  public final static native int NVVIOCHANNELSTATUS_bitsPerComponent_get(long jarg1, NVVIOCHANNELSTATUS jarg1_);
  public final static native void NVVIOCHANNELSTATUS_samplingFormat_set(long jarg1, NVVIOCHANNELSTATUS jarg1_, int jarg2);
  public final static native int NVVIOCHANNELSTATUS_samplingFormat_get(long jarg1, NVVIOCHANNELSTATUS jarg1_);
  public final static native void NVVIOCHANNELSTATUS_colorSpace_set(long jarg1, NVVIOCHANNELSTATUS jarg1_, int jarg2);
  public final static native int NVVIOCHANNELSTATUS_colorSpace_get(long jarg1, NVVIOCHANNELSTATUS jarg1_);
  public final static native void NVVIOCHANNELSTATUS_linkID_set(long jarg1, NVVIOCHANNELSTATUS jarg1_, int jarg2);
  public final static native int NVVIOCHANNELSTATUS_linkID_get(long jarg1, NVVIOCHANNELSTATUS jarg1_);
  public final static native long new_NVVIOCHANNELSTATUS();
  public final static native void delete_NVVIOCHANNELSTATUS(long jarg1);
  public final static native void NVVIOINPUTSTATUS_vidIn_set(long jarg1, NVVIOINPUTSTATUS jarg1_, long jarg2);
  public final static native long NVVIOINPUTSTATUS_vidIn_get(long jarg1, NVVIOINPUTSTATUS jarg1_);
  public final static native void NVVIOINPUTSTATUS_captureStatus_set(long jarg1, NVVIOINPUTSTATUS jarg1_, int jarg2);
  public final static native int NVVIOINPUTSTATUS_captureStatus_get(long jarg1, NVVIOINPUTSTATUS jarg1_);
  public final static native long new_NVVIOINPUTSTATUS();
  public final static native void delete_NVVIOINPUTSTATUS(long jarg1);
  public final static native void NVVIOOUTPUTSTATUS_vid1Out_set(long jarg1, NVVIOOUTPUTSTATUS jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTSTATUS_vid1Out_get(long jarg1, NVVIOOUTPUTSTATUS jarg1_);
  public final static native void NVVIOOUTPUTSTATUS_vid2Out_set(long jarg1, NVVIOOUTPUTSTATUS jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTSTATUS_vid2Out_get(long jarg1, NVVIOOUTPUTSTATUS jarg1_);
  public final static native void NVVIOOUTPUTSTATUS_sdiSyncIn_set(long jarg1, NVVIOOUTPUTSTATUS jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTSTATUS_sdiSyncIn_get(long jarg1, NVVIOOUTPUTSTATUS jarg1_);
  public final static native void NVVIOOUTPUTSTATUS_compSyncIn_set(long jarg1, NVVIOOUTPUTSTATUS jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTSTATUS_compSyncIn_get(long jarg1, NVVIOOUTPUTSTATUS jarg1_);
  public final static native void NVVIOOUTPUTSTATUS_syncEnable_set(long jarg1, NVVIOOUTPUTSTATUS jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTSTATUS_syncEnable_get(long jarg1, NVVIOOUTPUTSTATUS jarg1_);
  public final static native void NVVIOOUTPUTSTATUS_syncSource_set(long jarg1, NVVIOOUTPUTSTATUS jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTSTATUS_syncSource_get(long jarg1, NVVIOOUTPUTSTATUS jarg1_);
  public final static native void NVVIOOUTPUTSTATUS_syncFormat_set(long jarg1, NVVIOOUTPUTSTATUS jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTSTATUS_syncFormat_get(long jarg1, NVVIOOUTPUTSTATUS jarg1_);
  public final static native void NVVIOOUTPUTSTATUS_frameLockEnable_set(long jarg1, NVVIOOUTPUTSTATUS jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTSTATUS_frameLockEnable_get(long jarg1, NVVIOOUTPUTSTATUS jarg1_);
  public final static native void NVVIOOUTPUTSTATUS_outputVideoLocked_set(long jarg1, NVVIOOUTPUTSTATUS jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTSTATUS_outputVideoLocked_get(long jarg1, NVVIOOUTPUTSTATUS jarg1_);
  public final static native void NVVIOOUTPUTSTATUS_dataIntegrityCheckErrorCount_set(long jarg1, NVVIOOUTPUTSTATUS jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTSTATUS_dataIntegrityCheckErrorCount_get(long jarg1, NVVIOOUTPUTSTATUS jarg1_);
  public final static native void NVVIOOUTPUTSTATUS_dataIntegrityCheckEnabled_set(long jarg1, NVVIOOUTPUTSTATUS jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTSTATUS_dataIntegrityCheckEnabled_get(long jarg1, NVVIOOUTPUTSTATUS jarg1_);
  public final static native void NVVIOOUTPUTSTATUS_dataIntegrityCheckFailed_set(long jarg1, NVVIOOUTPUTSTATUS jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTSTATUS_dataIntegrityCheckFailed_get(long jarg1, NVVIOOUTPUTSTATUS jarg1_);
  public final static native void NVVIOOUTPUTSTATUS_uSyncSourceLocked_set(long jarg1, NVVIOOUTPUTSTATUS jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTSTATUS_uSyncSourceLocked_get(long jarg1, NVVIOOUTPUTSTATUS jarg1_);
  public final static native void NVVIOOUTPUTSTATUS_uPowerOn_set(long jarg1, NVVIOOUTPUTSTATUS jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTSTATUS_uPowerOn_get(long jarg1, NVVIOOUTPUTSTATUS jarg1_);
  public final static native long new_NVVIOOUTPUTSTATUS();
  public final static native void delete_NVVIOOUTPUTSTATUS(long jarg1);
  public final static native void NVVIOSTATUS_version_set(long jarg1, NVVIOSTATUS jarg1_, long jarg2);
  public final static native long NVVIOSTATUS_version_get(long jarg1, NVVIOSTATUS jarg1_);
  public final static native void NVVIOSTATUS_nvvioStatusType_set(long jarg1, NVVIOSTATUS jarg1_, int jarg2);
  public final static native int NVVIOSTATUS_nvvioStatusType_get(long jarg1, NVVIOSTATUS jarg1_);
  public final static native long NVVIOSTATUS_vioStatus_get(long jarg1, NVVIOSTATUS jarg1_);
  public final static native long new_NVVIOSTATUS();
  public final static native void delete_NVVIOSTATUS(long jarg1);
  public final static native void NVVIOSTATUS_vioStatus_inStatus_set(long jarg1, NVVIOSTATUS_vioStatus jarg1_, long jarg2, NVVIOINPUTSTATUS jarg2_);
  public final static native long NVVIOSTATUS_vioStatus_inStatus_get(long jarg1, NVVIOSTATUS_vioStatus jarg1_);
  public final static native void NVVIOSTATUS_vioStatus_outStatus_set(long jarg1, NVVIOSTATUS_vioStatus jarg1_, long jarg2, NVVIOOUTPUTSTATUS jarg2_);
  public final static native long NVVIOSTATUS_vioStatus_outStatus_get(long jarg1, NVVIOSTATUS_vioStatus jarg1_);
  public final static native long new_NVVIOSTATUS_vioStatus();
  public final static native void delete_NVVIOSTATUS_vioStatus(long jarg1);
  public final static native void NVVIOOUTPUTREGION_x_set(long jarg1, NVVIOOUTPUTREGION jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTREGION_x_get(long jarg1, NVVIOOUTPUTREGION jarg1_);
  public final static native void NVVIOOUTPUTREGION_y_set(long jarg1, NVVIOOUTPUTREGION jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTREGION_y_get(long jarg1, NVVIOOUTPUTREGION jarg1_);
  public final static native void NVVIOOUTPUTREGION_width_set(long jarg1, NVVIOOUTPUTREGION jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTREGION_width_get(long jarg1, NVVIOOUTPUTREGION jarg1_);
  public final static native void NVVIOOUTPUTREGION_height_set(long jarg1, NVVIOOUTPUTREGION jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTREGION_height_get(long jarg1, NVVIOOUTPUTREGION jarg1_);
  public final static native long new_NVVIOOUTPUTREGION();
  public final static native void delete_NVVIOOUTPUTREGION(long jarg1);
  public final static native void NVVIOGAMMARAMP8_uRed_set(long jarg1, NVVIOGAMMARAMP8 jarg1_, int[] jarg2);
  public final static native int[] NVVIOGAMMARAMP8_uRed_get(long jarg1, NVVIOGAMMARAMP8 jarg1_);
  public final static native void NVVIOGAMMARAMP8_uGreen_set(long jarg1, NVVIOGAMMARAMP8 jarg1_, int[] jarg2);
  public final static native int[] NVVIOGAMMARAMP8_uGreen_get(long jarg1, NVVIOGAMMARAMP8 jarg1_);
  public final static native void NVVIOGAMMARAMP8_uBlue_set(long jarg1, NVVIOGAMMARAMP8 jarg1_, int[] jarg2);
  public final static native int[] NVVIOGAMMARAMP8_uBlue_get(long jarg1, NVVIOGAMMARAMP8 jarg1_);
  public final static native long new_NVVIOGAMMARAMP8();
  public final static native void delete_NVVIOGAMMARAMP8(long jarg1);
  public final static native void NVVIOGAMMARAMP10_uRed_set(long jarg1, NVVIOGAMMARAMP10 jarg1_, int[] jarg2);
  public final static native int[] NVVIOGAMMARAMP10_uRed_get(long jarg1, NVVIOGAMMARAMP10 jarg1_);
  public final static native void NVVIOGAMMARAMP10_uGreen_set(long jarg1, NVVIOGAMMARAMP10 jarg1_, int[] jarg2);
  public final static native int[] NVVIOGAMMARAMP10_uGreen_get(long jarg1, NVVIOGAMMARAMP10 jarg1_);
  public final static native void NVVIOGAMMARAMP10_uBlue_set(long jarg1, NVVIOGAMMARAMP10 jarg1_, int[] jarg2);
  public final static native int[] NVVIOGAMMARAMP10_uBlue_get(long jarg1, NVVIOGAMMARAMP10 jarg1_);
  public final static native long new_NVVIOGAMMARAMP10();
  public final static native void delete_NVVIOGAMMARAMP10(long jarg1);
  public final static native void NVVIOSYNCDELAY_version_set(long jarg1, NVVIOSYNCDELAY jarg1_, long jarg2);
  public final static native long NVVIOSYNCDELAY_version_get(long jarg1, NVVIOSYNCDELAY jarg1_);
  public final static native void NVVIOSYNCDELAY_horizontalDelay_set(long jarg1, NVVIOSYNCDELAY jarg1_, long jarg2);
  public final static native long NVVIOSYNCDELAY_horizontalDelay_get(long jarg1, NVVIOSYNCDELAY jarg1_);
  public final static native void NVVIOSYNCDELAY_verticalDelay_set(long jarg1, NVVIOSYNCDELAY jarg1_, long jarg2);
  public final static native long NVVIOSYNCDELAY_verticalDelay_get(long jarg1, NVVIOSYNCDELAY jarg1_);
  public final static native long new_NVVIOSYNCDELAY();
  public final static native void delete_NVVIOSYNCDELAY(long jarg1);
  public final static native void NVVIOVIDEOMODE_horizontalPixels_set(long jarg1, NVVIOVIDEOMODE jarg1_, long jarg2);
  public final static native long NVVIOVIDEOMODE_horizontalPixels_get(long jarg1, NVVIOVIDEOMODE jarg1_);
  public final static native void NVVIOVIDEOMODE_verticalLines_set(long jarg1, NVVIOVIDEOMODE jarg1_, long jarg2);
  public final static native long NVVIOVIDEOMODE_verticalLines_get(long jarg1, NVVIOVIDEOMODE jarg1_);
  public final static native void NVVIOVIDEOMODE_fFrameRate_set(long jarg1, NVVIOVIDEOMODE jarg1_, float jarg2);
  public final static native float NVVIOVIDEOMODE_fFrameRate_get(long jarg1, NVVIOVIDEOMODE jarg1_);
  public final static native void NVVIOVIDEOMODE_interlaceMode_set(long jarg1, NVVIOVIDEOMODE jarg1_, int jarg2);
  public final static native int NVVIOVIDEOMODE_interlaceMode_get(long jarg1, NVVIOVIDEOMODE jarg1_);
  public final static native void NVVIOVIDEOMODE_videoStandard_set(long jarg1, NVVIOVIDEOMODE jarg1_, int jarg2);
  public final static native int NVVIOVIDEOMODE_videoStandard_get(long jarg1, NVVIOVIDEOMODE jarg1_);
  public final static native void NVVIOVIDEOMODE_videoType_set(long jarg1, NVVIOVIDEOMODE jarg1_, int jarg2);
  public final static native int NVVIOVIDEOMODE_videoType_get(long jarg1, NVVIOVIDEOMODE jarg1_);
  public final static native long new_NVVIOVIDEOMODE();
  public final static native void delete_NVVIOVIDEOMODE(long jarg1);
  public final static native void NVVIOSIGNALFORMATDETAIL_signalFormat_set(long jarg1, NVVIOSIGNALFORMATDETAIL jarg1_, int jarg2);
  public final static native int NVVIOSIGNALFORMATDETAIL_signalFormat_get(long jarg1, NVVIOSIGNALFORMATDETAIL jarg1_);
  public final static native void NVVIOSIGNALFORMATDETAIL_videoMode_set(long jarg1, NVVIOSIGNALFORMATDETAIL jarg1_, long jarg2, NVVIOVIDEOMODE jarg2_);
  public final static native long NVVIOSIGNALFORMATDETAIL_videoMode_get(long jarg1, NVVIOSIGNALFORMATDETAIL jarg1_);
  public final static native long new_NVVIOSIGNALFORMATDETAIL();
  public final static native void delete_NVVIOSIGNALFORMATDETAIL(long jarg1);
  public final static native int NVVIOBUFFERFORMAT_R8G8B8_get();
  public final static native int NVVIOBUFFERFORMAT_R8G8B8Z24_get();
  public final static native int NVVIOBUFFERFORMAT_R8G8B8A8_get();
  public final static native int NVVIOBUFFERFORMAT_R8G8B8A8Z24_get();
  public final static native int NVVIOBUFFERFORMAT_R16FPG16FPB16FP_get();
  public final static native int NVVIOBUFFERFORMAT_R16FPG16FPB16FPZ24_get();
  public final static native int NVVIOBUFFERFORMAT_R16FPG16FPB16FPA16FP_get();
  public final static native int NVVIOBUFFERFORMAT_R16FPG16FPB16FPA16FPZ24_get();
  public final static native void NVVIODATAFORMATDETAIL_dataFormat_set(long jarg1, NVVIODATAFORMATDETAIL jarg1_, int jarg2);
  public final static native int NVVIODATAFORMATDETAIL_dataFormat_get(long jarg1, NVVIODATAFORMATDETAIL jarg1_);
  public final static native void NVVIODATAFORMATDETAIL_vioCaps_set(long jarg1, NVVIODATAFORMATDETAIL jarg1_, long jarg2);
  public final static native long NVVIODATAFORMATDETAIL_vioCaps_get(long jarg1, NVVIODATAFORMATDETAIL jarg1_);
  public final static native long new_NVVIODATAFORMATDETAIL();
  public final static native void delete_NVVIODATAFORMATDETAIL(long jarg1);
  public final static native void NVVIOCOLORCONVERSION_version_set(long jarg1, NVVIOCOLORCONVERSION jarg1_, long jarg2);
  public final static native long NVVIOCOLORCONVERSION_version_get(long jarg1, NVVIOCOLORCONVERSION jarg1_);
  public final static native void NVVIOCOLORCONVERSION_colorMatrix_set(long jarg1, NVVIOCOLORCONVERSION jarg1_, long jarg2);
  public final static native long NVVIOCOLORCONVERSION_colorMatrix_get(long jarg1, NVVIOCOLORCONVERSION jarg1_);
  public final static native void NVVIOCOLORCONVERSION_colorOffset_set(long jarg1, NVVIOCOLORCONVERSION jarg1_, float[] jarg2);
  public final static native float[] NVVIOCOLORCONVERSION_colorOffset_get(long jarg1, NVVIOCOLORCONVERSION jarg1_);
  public final static native void NVVIOCOLORCONVERSION_colorScale_set(long jarg1, NVVIOCOLORCONVERSION jarg1_, float[] jarg2);
  public final static native float[] NVVIOCOLORCONVERSION_colorScale_get(long jarg1, NVVIOCOLORCONVERSION jarg1_);
  public final static native void NVVIOCOLORCONVERSION_compositeSafe_set(long jarg1, NVVIOCOLORCONVERSION jarg1_, long jarg2);
  public final static native long NVVIOCOLORCONVERSION_compositeSafe_get(long jarg1, NVVIOCOLORCONVERSION jarg1_);
  public final static native long new_NVVIOCOLORCONVERSION();
  public final static native void delete_NVVIOCOLORCONVERSION(long jarg1);
  public final static native void NVVIOGAMMACORRECTION_version_set(long jarg1, NVVIOGAMMACORRECTION jarg1_, long jarg2);
  public final static native long NVVIOGAMMACORRECTION_version_get(long jarg1, NVVIOGAMMACORRECTION jarg1_);
  public final static native void NVVIOGAMMACORRECTION_vioGammaCorrectionType_set(long jarg1, NVVIOGAMMACORRECTION jarg1_, long jarg2);
  public final static native long NVVIOGAMMACORRECTION_vioGammaCorrectionType_get(long jarg1, NVVIOGAMMACORRECTION jarg1_);
  public final static native void NVVIOGAMMACORRECTION_fGammaValueR_set(long jarg1, NVVIOGAMMACORRECTION jarg1_, float jarg2);
  public final static native float NVVIOGAMMACORRECTION_fGammaValueR_get(long jarg1, NVVIOGAMMACORRECTION jarg1_);
  public final static native void NVVIOGAMMACORRECTION_fGammaValueG_set(long jarg1, NVVIOGAMMACORRECTION jarg1_, float jarg2);
  public final static native float NVVIOGAMMACORRECTION_fGammaValueG_get(long jarg1, NVVIOGAMMACORRECTION jarg1_);
  public final static native void NVVIOGAMMACORRECTION_fGammaValueB_set(long jarg1, NVVIOGAMMACORRECTION jarg1_, float jarg2);
  public final static native float NVVIOGAMMACORRECTION_fGammaValueB_get(long jarg1, NVVIOGAMMACORRECTION jarg1_);
  public final static native long NVVIOGAMMACORRECTION_gammaRamp_get(long jarg1, NVVIOGAMMACORRECTION jarg1_);
  public final static native long new_NVVIOGAMMACORRECTION();
  public final static native void delete_NVVIOGAMMACORRECTION(long jarg1);
  public final static native void NVVIOGAMMACORRECTION_gammaRamp_gammaRamp8_set(long jarg1, NVVIOGAMMACORRECTION_gammaRamp jarg1_, long jarg2, NVVIOGAMMARAMP8 jarg2_);
  public final static native long NVVIOGAMMACORRECTION_gammaRamp_gammaRamp8_get(long jarg1, NVVIOGAMMACORRECTION_gammaRamp jarg1_);
  public final static native void NVVIOGAMMACORRECTION_gammaRamp_gammaRamp10_set(long jarg1, NVVIOGAMMACORRECTION_gammaRamp jarg1_, long jarg2, NVVIOGAMMARAMP10 jarg2_);
  public final static native long NVVIOGAMMACORRECTION_gammaRamp_gammaRamp10_get(long jarg1, NVVIOGAMMACORRECTION_gammaRamp jarg1_);
  public final static native long new_NVVIOGAMMACORRECTION_gammaRamp();
  public final static native void delete_NVVIOGAMMACORRECTION_gammaRamp(long jarg1);
  public final static native int MAX_NUM_COMPOSITE_RANGE_get();
  public final static native void NVVIOCOMPOSITERANGE_uRange_set(long jarg1, NVVIOCOMPOSITERANGE jarg1_, long jarg2);
  public final static native long NVVIOCOMPOSITERANGE_uRange_get(long jarg1, NVVIOCOMPOSITERANGE jarg1_);
  public final static native void NVVIOCOMPOSITERANGE_uEnabled_set(long jarg1, NVVIOCOMPOSITERANGE jarg1_, long jarg2);
  public final static native long NVVIOCOMPOSITERANGE_uEnabled_get(long jarg1, NVVIOCOMPOSITERANGE jarg1_);
  public final static native void NVVIOCOMPOSITERANGE_uMin_set(long jarg1, NVVIOCOMPOSITERANGE jarg1_, long jarg2);
  public final static native long NVVIOCOMPOSITERANGE_uMin_get(long jarg1, NVVIOCOMPOSITERANGE jarg1_);
  public final static native void NVVIOCOMPOSITERANGE_uMax_set(long jarg1, NVVIOCOMPOSITERANGE jarg1_, long jarg2);
  public final static native long NVVIOCOMPOSITERANGE_uMax_get(long jarg1, NVVIOCOMPOSITERANGE jarg1_);
  public final static native long new_NVVIOCOMPOSITERANGE();
  public final static native void delete_NVVIOCOMPOSITERANGE(long jarg1);
  public final static native int NVVIOCONFIG_SIGNALFORMAT_get();
  public final static native int NVVIOCONFIG_DATAFORMAT_get();
  public final static native int NVVIOCONFIG_OUTPUTREGION_get();
  public final static native int NVVIOCONFIG_OUTPUTAREA_get();
  public final static native int NVVIOCONFIG_COLORCONVERSION_get();
  public final static native int NVVIOCONFIG_GAMMACORRECTION_get();
  public final static native int NVVIOCONFIG_SYNCSOURCEENABLE_get();
  public final static native int NVVIOCONFIG_SYNCDELAY_get();
  public final static native int NVVIOCONFIG_COMPOSITESYNCTYPE_get();
  public final static native int NVVIOCONFIG_FRAMELOCKENABLE_get();
  public final static native int NVVIOCONFIG_422FILTER_get();
  public final static native int NVVIOCONFIG_COMPOSITETERMINATE_get();
  public final static native int NVVIOCONFIG_DATAINTEGRITYCHECK_get();
  public final static native int NVVIOCONFIG_CSCOVERRIDE_get();
  public final static native int NVVIOCONFIG_FLIPQUEUELENGTH_get();
  public final static native int NVVIOCONFIG_ANCTIMECODEGENERATION_get();
  public final static native int NVVIOCONFIG_COMPOSITE_get();
  public final static native int NVVIOCONFIG_ALPHAKEYCOMPOSITE_get();
  public final static native int NVVIOCONFIG_COMPOSITE_Y_get();
  public final static native int NVVIOCONFIG_COMPOSITE_CR_get();
  public final static native int NVVIOCONFIG_COMPOSITE_CB_get();
  public final static native int NVVIOCONFIG_FULL_COLOR_RANGE_get();
  public final static native int NVVIOCONFIG_RGB_DATA_get();
  public final static native int NVVIOCONFIG_RESERVED_SDIOUTPUTENABLE_get();
  public final static native int NVVIOCONFIG_STREAMS_get();
  public final static native int NVVIOCONFIG_ANC_PARITY_COMPUTATION_get();
  public final static native int NVVIOCONFIG_ANC_AUDIO_REPEAT_get();
  public final static native int NVVIOCONFIG_ALLFIELDS_get();
  public final static native int NVVIOCONFIG_VALIDFIELDS_get();
  public final static native int NVVIOCONFIG_DRIVERFIELDS_get();
  public final static native int NVVIOCONFIG_GAMMAFIELDS_get();
  public final static native int NVVIOCONFIG_RMCTRLFIELDS_get();
  public final static native int NVVIOCONFIG_RMSKEWFIELDS_get();
  public final static native int NVVIOCONFIG_ALLOWSDIRUNNING_FIELDS_get();
  public final static native int NVVIOCONFIG_RMMODESET_FIELDS_get();
  public final static native void NVVIOOUTPUTCONFIG_V1_signalFormat_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V1_signalFormat_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_dataFormat_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V1_dataFormat_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_outputRegion_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2, NVVIOOUTPUTREGION jarg2_);
  public final static native long NVVIOOUTPUTCONFIG_V1_outputRegion_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_outputArea_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V1_outputArea_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_colorConversion_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2, NVVIOCOLORCONVERSION jarg2_);
  public final static native long NVVIOOUTPUTCONFIG_V1_colorConversion_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_gammaCorrection_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2, NVVIOGAMMACORRECTION jarg2_);
  public final static native long NVVIOOUTPUTCONFIG_V1_gammaCorrection_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_syncEnable_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V1_syncEnable_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_syncSource_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V1_syncSource_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_syncDelay_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2, NVVIOSYNCDELAY jarg2_);
  public final static native long NVVIOOUTPUTCONFIG_V1_syncDelay_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_compositeSyncType_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V1_compositeSyncType_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_frameLockEnable_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V1_frameLockEnable_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_psfSignalFormat_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V1_psfSignalFormat_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_enable422Filter_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V1_enable422Filter_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_compositeTerminate_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V1_compositeTerminate_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_enableDataIntegrityCheck_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V1_enableDataIntegrityCheck_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_cscOverride_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V1_cscOverride_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_flipQueueLength_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V1_flipQueueLength_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_enableANCTimeCodeGeneration_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V1_enableANCTimeCodeGeneration_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_enableComposite_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V1_enableComposite_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_enableAlphaKeyComposite_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V1_enableAlphaKeyComposite_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_compRange_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2, NVVIOCOMPOSITERANGE jarg2_);
  public final static native long NVVIOOUTPUTCONFIG_V1_compRange_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_reservedData_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, short[] jarg2);
  public final static native short[] NVVIOOUTPUTCONFIG_V1_reservedData_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_enableFullColorRange_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V1_enableFullColorRange_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V1_enableRGBData_set(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V1_enableRGBData_get(long jarg1, NVVIOOUTPUTCONFIG_V1 jarg1_);
  public final static native long new_NVVIOOUTPUTCONFIG_V1();
  public final static native void delete_NVVIOOUTPUTCONFIG_V1(long jarg1);
  public final static native void NVVIOOUTPUTCONFIG_V2_signalFormat_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V2_signalFormat_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_dataFormat_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V2_dataFormat_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_outputRegion_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2, NVVIOOUTPUTREGION jarg2_);
  public final static native long NVVIOOUTPUTCONFIG_V2_outputRegion_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_outputArea_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V2_outputArea_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_colorConversion_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2, NVVIOCOLORCONVERSION jarg2_);
  public final static native long NVVIOOUTPUTCONFIG_V2_colorConversion_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_gammaCorrection_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2, NVVIOGAMMACORRECTION jarg2_);
  public final static native long NVVIOOUTPUTCONFIG_V2_gammaCorrection_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_syncEnable_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V2_syncEnable_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_syncSource_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V2_syncSource_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_syncDelay_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2, NVVIOSYNCDELAY jarg2_);
  public final static native long NVVIOOUTPUTCONFIG_V2_syncDelay_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_compositeSyncType_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V2_compositeSyncType_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_frameLockEnable_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V2_frameLockEnable_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_psfSignalFormat_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V2_psfSignalFormat_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_enable422Filter_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V2_enable422Filter_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_compositeTerminate_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V2_compositeTerminate_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_enableDataIntegrityCheck_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V2_enableDataIntegrityCheck_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_cscOverride_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V2_cscOverride_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_flipQueueLength_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V2_flipQueueLength_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_enableANCTimeCodeGeneration_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V2_enableANCTimeCodeGeneration_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_enableComposite_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V2_enableComposite_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_enableAlphaKeyComposite_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V2_enableAlphaKeyComposite_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_compRange_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2, NVVIOCOMPOSITERANGE jarg2_);
  public final static native long NVVIOOUTPUTCONFIG_V2_compRange_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_reservedData_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, short[] jarg2);
  public final static native short[] NVVIOOUTPUTCONFIG_V2_reservedData_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_enableFullColorRange_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V2_enableFullColorRange_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_enableRGBData_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V2_enableRGBData_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V2_ancParityComputation_set(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V2_ancParityComputation_get(long jarg1, NVVIOOUTPUTCONFIG_V2 jarg1_);
  public final static native long new_NVVIOOUTPUTCONFIG_V2();
  public final static native void delete_NVVIOOUTPUTCONFIG_V2(long jarg1);
  public final static native void NVVIOOUTPUTCONFIG_V3_signalFormat_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V3_signalFormat_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_dataFormat_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V3_dataFormat_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_outputRegion_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2, NVVIOOUTPUTREGION jarg2_);
  public final static native long NVVIOOUTPUTCONFIG_V3_outputRegion_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_outputArea_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V3_outputArea_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_colorConversion_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2, NVVIOCOLORCONVERSION jarg2_);
  public final static native long NVVIOOUTPUTCONFIG_V3_colorConversion_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_gammaCorrection_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2, NVVIOGAMMACORRECTION jarg2_);
  public final static native long NVVIOOUTPUTCONFIG_V3_gammaCorrection_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_syncEnable_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V3_syncEnable_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_syncSource_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V3_syncSource_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_syncDelay_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2, NVVIOSYNCDELAY jarg2_);
  public final static native long NVVIOOUTPUTCONFIG_V3_syncDelay_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_compositeSyncType_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V3_compositeSyncType_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_frameLockEnable_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V3_frameLockEnable_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_psfSignalFormat_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V3_psfSignalFormat_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_enable422Filter_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V3_enable422Filter_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_compositeTerminate_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V3_compositeTerminate_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_enableDataIntegrityCheck_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V3_enableDataIntegrityCheck_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_cscOverride_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V3_cscOverride_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_flipQueueLength_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V3_flipQueueLength_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_enableANCTimeCodeGeneration_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V3_enableANCTimeCodeGeneration_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_enableComposite_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V3_enableComposite_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_enableAlphaKeyComposite_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V3_enableAlphaKeyComposite_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_compRange_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2, NVVIOCOMPOSITERANGE jarg2_);
  public final static native long NVVIOOUTPUTCONFIG_V3_compRange_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_reservedData_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, short[] jarg2);
  public final static native short[] NVVIOOUTPUTCONFIG_V3_reservedData_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_enableFullColorRange_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V3_enableFullColorRange_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_enableRGBData_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V3_enableRGBData_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_ancParityComputation_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, int jarg2);
  public final static native int NVVIOOUTPUTCONFIG_V3_ancParityComputation_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native void NVVIOOUTPUTCONFIG_V3_enableAudioBlanking_set(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOOUTPUTCONFIG_V3_enableAudioBlanking_get(long jarg1, NVVIOOUTPUTCONFIG_V3 jarg1_);
  public final static native long new_NVVIOOUTPUTCONFIG_V3();
  public final static native void delete_NVVIOOUTPUTCONFIG_V3(long jarg1);
  public final static native void NVVIOSTREAM_bitsPerComponent_set(long jarg1, NVVIOSTREAM jarg1_, long jarg2);
  public final static native long NVVIOSTREAM_bitsPerComponent_get(long jarg1, NVVIOSTREAM jarg1_);
  public final static native void NVVIOSTREAM_sampling_set(long jarg1, NVVIOSTREAM jarg1_, int jarg2);
  public final static native int NVVIOSTREAM_sampling_get(long jarg1, NVVIOSTREAM jarg1_);
  public final static native void NVVIOSTREAM_expansionEnable_set(long jarg1, NVVIOSTREAM jarg1_, long jarg2);
  public final static native long NVVIOSTREAM_expansionEnable_get(long jarg1, NVVIOSTREAM jarg1_);
  public final static native void NVVIOSTREAM_numLinks_set(long jarg1, NVVIOSTREAM jarg1_, long jarg2);
  public final static native long NVVIOSTREAM_numLinks_get(long jarg1, NVVIOSTREAM jarg1_);
  public final static native long NVVIOSTREAM_links_get(long jarg1, NVVIOSTREAM jarg1_);
  public final static native long new_NVVIOSTREAM();
  public final static native void delete_NVVIOSTREAM(long jarg1);
  public final static native void NVVIOSTREAM_links_jack_set(long jarg1, NVVIOSTREAM_links jarg1_, long jarg2);
  public final static native long NVVIOSTREAM_links_jack_get(long jarg1, NVVIOSTREAM_links jarg1_);
  public final static native void NVVIOSTREAM_links_channel_set(long jarg1, NVVIOSTREAM_links jarg1_, long jarg2);
  public final static native long NVVIOSTREAM_links_channel_get(long jarg1, NVVIOSTREAM_links jarg1_);
  public final static native long new_NVVIOSTREAM_links();
  public final static native void delete_NVVIOSTREAM_links(long jarg1);
  public final static native void NVVIOINPUTCONFIG_numRawCaptureImages_set(long jarg1, NVVIOINPUTCONFIG jarg1_, long jarg2);
  public final static native long NVVIOINPUTCONFIG_numRawCaptureImages_get(long jarg1, NVVIOINPUTCONFIG jarg1_);
  public final static native void NVVIOINPUTCONFIG_signalFormat_set(long jarg1, NVVIOINPUTCONFIG jarg1_, int jarg2);
  public final static native int NVVIOINPUTCONFIG_signalFormat_get(long jarg1, NVVIOINPUTCONFIG jarg1_);
  public final static native void NVVIOINPUTCONFIG_numStreams_set(long jarg1, NVVIOINPUTCONFIG jarg1_, long jarg2);
  public final static native long NVVIOINPUTCONFIG_numStreams_get(long jarg1, NVVIOINPUTCONFIG jarg1_);
  public final static native void NVVIOINPUTCONFIG_streams_set(long jarg1, NVVIOINPUTCONFIG jarg1_, long jarg2, NVVIOSTREAM jarg2_);
  public final static native long NVVIOINPUTCONFIG_streams_get(long jarg1, NVVIOINPUTCONFIG jarg1_);
  public final static native void NVVIOINPUTCONFIG_bTestMode_set(long jarg1, NVVIOINPUTCONFIG jarg1_, long jarg2);
  public final static native long NVVIOINPUTCONFIG_bTestMode_get(long jarg1, NVVIOINPUTCONFIG jarg1_);
  public final static native long new_NVVIOINPUTCONFIG();
  public final static native void delete_NVVIOINPUTCONFIG(long jarg1);
  public final static native void NVVIOCONFIG_V1_version_set(long jarg1, NVVIOCONFIG_V1 jarg1_, long jarg2);
  public final static native long NVVIOCONFIG_V1_version_get(long jarg1, NVVIOCONFIG_V1 jarg1_);
  public final static native void NVVIOCONFIG_V1_fields_set(long jarg1, NVVIOCONFIG_V1 jarg1_, long jarg2);
  public final static native long NVVIOCONFIG_V1_fields_get(long jarg1, NVVIOCONFIG_V1 jarg1_);
  public final static native void NVVIOCONFIG_V1_nvvioConfigType_set(long jarg1, NVVIOCONFIG_V1 jarg1_, int jarg2);
  public final static native int NVVIOCONFIG_V1_nvvioConfigType_get(long jarg1, NVVIOCONFIG_V1 jarg1_);
  public final static native long NVVIOCONFIG_V1_vioConfig_get(long jarg1, NVVIOCONFIG_V1 jarg1_);
  public final static native long new_NVVIOCONFIG_V1();
  public final static native void delete_NVVIOCONFIG_V1(long jarg1);
  public final static native void NVVIOCONFIG_V1_vioConfig_inConfig_set(long jarg1, NVVIOCONFIG_V1_vioConfig jarg1_, long jarg2, NVVIOINPUTCONFIG jarg2_);
  public final static native long NVVIOCONFIG_V1_vioConfig_inConfig_get(long jarg1, NVVIOCONFIG_V1_vioConfig jarg1_);
  public final static native void NVVIOCONFIG_V1_vioConfig_outConfig_set(long jarg1, NVVIOCONFIG_V1_vioConfig jarg1_, long jarg2, NVVIOOUTPUTCONFIG_V1 jarg2_);
  public final static native long NVVIOCONFIG_V1_vioConfig_outConfig_get(long jarg1, NVVIOCONFIG_V1_vioConfig jarg1_);
  public final static native long new_NVVIOCONFIG_V1_vioConfig();
  public final static native void delete_NVVIOCONFIG_V1_vioConfig(long jarg1);
  public final static native void NVVIOCONFIG_V2_version_set(long jarg1, NVVIOCONFIG_V2 jarg1_, long jarg2);
  public final static native long NVVIOCONFIG_V2_version_get(long jarg1, NVVIOCONFIG_V2 jarg1_);
  public final static native void NVVIOCONFIG_V2_fields_set(long jarg1, NVVIOCONFIG_V2 jarg1_, long jarg2);
  public final static native long NVVIOCONFIG_V2_fields_get(long jarg1, NVVIOCONFIG_V2 jarg1_);
  public final static native void NVVIOCONFIG_V2_nvvioConfigType_set(long jarg1, NVVIOCONFIG_V2 jarg1_, int jarg2);
  public final static native int NVVIOCONFIG_V2_nvvioConfigType_get(long jarg1, NVVIOCONFIG_V2 jarg1_);
  public final static native long NVVIOCONFIG_V2_vioConfig_get(long jarg1, NVVIOCONFIG_V2 jarg1_);
  public final static native long new_NVVIOCONFIG_V2();
  public final static native void delete_NVVIOCONFIG_V2(long jarg1);
  public final static native void NVVIOCONFIG_V2_vioConfig_inConfig_set(long jarg1, NVVIOCONFIG_V2_vioConfig jarg1_, long jarg2, NVVIOINPUTCONFIG jarg2_);
  public final static native long NVVIOCONFIG_V2_vioConfig_inConfig_get(long jarg1, NVVIOCONFIG_V2_vioConfig jarg1_);
  public final static native void NVVIOCONFIG_V2_vioConfig_outConfig_set(long jarg1, NVVIOCONFIG_V2_vioConfig jarg1_, long jarg2, NVVIOOUTPUTCONFIG_V2 jarg2_);
  public final static native long NVVIOCONFIG_V2_vioConfig_outConfig_get(long jarg1, NVVIOCONFIG_V2_vioConfig jarg1_);
  public final static native long new_NVVIOCONFIG_V2_vioConfig();
  public final static native void delete_NVVIOCONFIG_V2_vioConfig(long jarg1);
  public final static native void NVVIOCONFIG_V3_version_set(long jarg1, NVVIOCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOCONFIG_V3_version_get(long jarg1, NVVIOCONFIG_V3 jarg1_);
  public final static native void NVVIOCONFIG_V3_fields_set(long jarg1, NVVIOCONFIG_V3 jarg1_, long jarg2);
  public final static native long NVVIOCONFIG_V3_fields_get(long jarg1, NVVIOCONFIG_V3 jarg1_);
  public final static native void NVVIOCONFIG_V3_nvvioConfigType_set(long jarg1, NVVIOCONFIG_V3 jarg1_, int jarg2);
  public final static native int NVVIOCONFIG_V3_nvvioConfigType_get(long jarg1, NVVIOCONFIG_V3 jarg1_);
  public final static native long NVVIOCONFIG_V3_vioConfig_get(long jarg1, NVVIOCONFIG_V3 jarg1_);
  public final static native long new_NVVIOCONFIG_V3();
  public final static native void delete_NVVIOCONFIG_V3(long jarg1);
  public final static native void NVVIOCONFIG_V3_vioConfig_inConfig_set(long jarg1, NVVIOCONFIG_V3_vioConfig jarg1_, long jarg2, NVVIOINPUTCONFIG jarg2_);
  public final static native long NVVIOCONFIG_V3_vioConfig_inConfig_get(long jarg1, NVVIOCONFIG_V3_vioConfig jarg1_);
  public final static native void NVVIOCONFIG_V3_vioConfig_outConfig_set(long jarg1, NVVIOCONFIG_V3_vioConfig jarg1_, long jarg2, NVVIOOUTPUTCONFIG_V3 jarg2_);
  public final static native long NVVIOCONFIG_V3_vioConfig_outConfig_get(long jarg1, NVVIOCONFIG_V3_vioConfig jarg1_);
  public final static native long new_NVVIOCONFIG_V3_vioConfig();
  public final static native void delete_NVVIOCONFIG_V3_vioConfig(long jarg1);
  public final static native void NVVIOTOPOLOGYTARGET_hPhysicalGpu_set(long jarg1, NVVIOTOPOLOGYTARGET jarg1_, long jarg2, NvPhysicalGpuHandle__ jarg2_);
  public final static native long NVVIOTOPOLOGYTARGET_hPhysicalGpu_get(long jarg1, NVVIOTOPOLOGYTARGET jarg1_);
  public final static native void NVVIOTOPOLOGYTARGET_hVioHandle_set(long jarg1, NVVIOTOPOLOGYTARGET jarg1_, long jarg2, NvVioHandle__ jarg2_);
  public final static native long NVVIOTOPOLOGYTARGET_hVioHandle_get(long jarg1, NVVIOTOPOLOGYTARGET jarg1_);
  public final static native void NVVIOTOPOLOGYTARGET_vioId_set(long jarg1, NVVIOTOPOLOGYTARGET jarg1_, long jarg2);
  public final static native long NVVIOTOPOLOGYTARGET_vioId_get(long jarg1, NVVIOTOPOLOGYTARGET jarg1_);
  public final static native void NVVIOTOPOLOGYTARGET_outputId_set(long jarg1, NVVIOTOPOLOGYTARGET jarg1_, long jarg2);
  public final static native long NVVIOTOPOLOGYTARGET_outputId_get(long jarg1, NVVIOTOPOLOGYTARGET jarg1_);
  public final static native long new_NVVIOTOPOLOGYTARGET();
  public final static native void delete_NVVIOTOPOLOGYTARGET(long jarg1);
  public final static native void NV_VIO_TOPOLOGY_version_set(long jarg1, NV_VIO_TOPOLOGY jarg1_, long jarg2);
  public final static native long NV_VIO_TOPOLOGY_version_get(long jarg1, NV_VIO_TOPOLOGY jarg1_);
  public final static native void NV_VIO_TOPOLOGY_vioTotalDeviceCount_set(long jarg1, NV_VIO_TOPOLOGY jarg1_, long jarg2);
  public final static native long NV_VIO_TOPOLOGY_vioTotalDeviceCount_get(long jarg1, NV_VIO_TOPOLOGY jarg1_);
  public final static native void NV_VIO_TOPOLOGY_vioTarget_set(long jarg1, NV_VIO_TOPOLOGY jarg1_, long jarg2, NVVIOTOPOLOGYTARGET jarg2_);
  public final static native long NV_VIO_TOPOLOGY_vioTarget_get(long jarg1, NV_VIO_TOPOLOGY jarg1_);
  public final static native long new_NV_VIO_TOPOLOGY();
  public final static native void delete_NV_VIO_TOPOLOGY(long jarg1);
  public final static native int NvAPI_VIO_GetCapabilities(long jarg1, NvVioHandle__ jarg1_, long jarg2, NVVIOCAPS jarg2_);
  public final static native int NvAPI_VIO_Open(long jarg1, NvVioHandle__ jarg1_, long jarg2, int jarg3);
  public final static native int NvAPI_VIO_Close(long jarg1, NvVioHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_VIO_Status(long jarg1, NvVioHandle__ jarg1_, long jarg2, NVVIOSTATUS jarg2_);
  public final static native int NvAPI_VIO_SyncFormatDetect(long jarg1, NvVioHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_VIO_GetConfig(long jarg1, NvVioHandle__ jarg1_, long jarg2, NVVIOCONFIG_V3 jarg2_);
  public final static native int NvAPI_VIO_SetConfig(long jarg1, NvVioHandle__ jarg1_, long jarg2, NVVIOCONFIG_V3 jarg2_);
  public final static native int NvAPI_VIO_SetCSC(long jarg1, NvVioHandle__ jarg1_, long jarg2, NVVIOCOLORCONVERSION jarg2_);
  public final static native int NvAPI_VIO_GetCSC(long jarg1, NvVioHandle__ jarg1_, long jarg2, NVVIOCOLORCONVERSION jarg2_);
  public final static native int NvAPI_VIO_SetGamma(long jarg1, NvVioHandle__ jarg1_, long jarg2, NVVIOGAMMACORRECTION jarg2_);
  public final static native int NvAPI_VIO_GetGamma(long jarg1, NvVioHandle__ jarg1_, long jarg2, NVVIOGAMMACORRECTION jarg2_);
  public final static native int NvAPI_VIO_SetSyncDelay(long jarg1, NvVioHandle__ jarg1_, long jarg2, NVVIOSYNCDELAY jarg2_);
  public final static native int NvAPI_VIO_GetSyncDelay(long jarg1, NvVioHandle__ jarg1_, long jarg2, NVVIOSYNCDELAY jarg2_);
  public final static native int NVVIOPCILINKRATE_UNKNOWN_get();
  public final static native int NVVIOPCILINKRATE_GEN1_get();
  public final static native int NVVIOPCILINKRATE_GEN2_get();
  public final static native int NVVIOPCILINKRATE_GEN3_get();
  public final static native int NVVIOPCILINKWIDTH_UNKNOWN_get();
  public final static native int NVVIOPCILINKWIDTH_x1_get();
  public final static native int NVVIOPCILINKWIDTH_x2_get();
  public final static native int NVVIOPCILINKWIDTH_x4_get();
  public final static native int NVVIOPCILINKWIDTH_x8_get();
  public final static native int NVVIOPCILINKWIDTH_x16_get();
  public final static native void NVVIOPCIINFO_V1_version_set(long jarg1, NVVIOPCIINFO_V1 jarg1_, long jarg2);
  public final static native long NVVIOPCIINFO_V1_version_get(long jarg1, NVVIOPCIINFO_V1 jarg1_);
  public final static native void NVVIOPCIINFO_V1_pciDeviceId_set(long jarg1, NVVIOPCIINFO_V1 jarg1_, long jarg2);
  public final static native long NVVIOPCIINFO_V1_pciDeviceId_get(long jarg1, NVVIOPCIINFO_V1 jarg1_);
  public final static native void NVVIOPCIINFO_V1_pciSubSystemId_set(long jarg1, NVVIOPCIINFO_V1 jarg1_, long jarg2);
  public final static native long NVVIOPCIINFO_V1_pciSubSystemId_get(long jarg1, NVVIOPCIINFO_V1 jarg1_);
  public final static native void NVVIOPCIINFO_V1_pciRevisionId_set(long jarg1, NVVIOPCIINFO_V1 jarg1_, long jarg2);
  public final static native long NVVIOPCIINFO_V1_pciRevisionId_get(long jarg1, NVVIOPCIINFO_V1 jarg1_);
  public final static native void NVVIOPCIINFO_V1_pciDomain_set(long jarg1, NVVIOPCIINFO_V1 jarg1_, long jarg2);
  public final static native long NVVIOPCIINFO_V1_pciDomain_get(long jarg1, NVVIOPCIINFO_V1 jarg1_);
  public final static native void NVVIOPCIINFO_V1_pciBus_set(long jarg1, NVVIOPCIINFO_V1 jarg1_, long jarg2);
  public final static native long NVVIOPCIINFO_V1_pciBus_get(long jarg1, NVVIOPCIINFO_V1 jarg1_);
  public final static native void NVVIOPCIINFO_V1_pciSlot_set(long jarg1, NVVIOPCIINFO_V1 jarg1_, long jarg2);
  public final static native long NVVIOPCIINFO_V1_pciSlot_get(long jarg1, NVVIOPCIINFO_V1 jarg1_);
  public final static native void NVVIOPCIINFO_V1_pciLinkWidth_set(long jarg1, NVVIOPCIINFO_V1 jarg1_, int jarg2);
  public final static native int NVVIOPCIINFO_V1_pciLinkWidth_get(long jarg1, NVVIOPCIINFO_V1 jarg1_);
  public final static native void NVVIOPCIINFO_V1_pciLinkRate_set(long jarg1, NVVIOPCIINFO_V1 jarg1_, int jarg2);
  public final static native int NVVIOPCIINFO_V1_pciLinkRate_get(long jarg1, NVVIOPCIINFO_V1 jarg1_);
  public final static native long new_NVVIOPCIINFO_V1();
  public final static native void delete_NVVIOPCIINFO_V1(long jarg1);
  public final static native int NvAPI_VIO_GetPCIInfo(long jarg1, NvVioHandle__ jarg1_, long jarg2, NVVIOPCIINFO_V1 jarg2_);
  public final static native int NvAPI_VIO_IsRunning(long jarg1, NvVioHandle__ jarg1_);
  public final static native int NvAPI_VIO_Start(long jarg1, NvVioHandle__ jarg1_);
  public final static native int NvAPI_VIO_Stop(long jarg1, NvVioHandle__ jarg1_);
  public final static native int NvAPI_VIO_IsFrameLockModeCompatible(long jarg1, NvVioHandle__ jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native int NvAPI_VIO_EnumDevices(long jarg1, long jarg2);
  public final static native int NvAPI_VIO_QueryTopology(long jarg1, NV_VIO_TOPOLOGY jarg1_);
  public final static native int NvAPI_VIO_EnumSignalFormats(long jarg1, NvVioHandle__ jarg1_, long jarg2, long jarg3, NVVIOSIGNALFORMATDETAIL jarg3_);
  public final static native int NvAPI_VIO_EnumDataFormats(long jarg1, NvVioHandle__ jarg1_, long jarg2, long jarg3, NVVIODATAFORMATDETAIL jarg3_);
  public final static native int NvAPI_Stereo_CreateConfigurationProfileRegistryKey(int jarg1);
  public final static native int NvAPI_Stereo_DeleteConfigurationProfileRegistryKey(int jarg1);
  public final static native int NvAPI_Stereo_SetConfigurationProfileValue(int jarg1, int jarg2, long jarg3);
  public final static native int NvAPI_Stereo_DeleteConfigurationProfileValue(int jarg1, int jarg2);
  public final static native void NVAPI_STEREO_CAPS_V1_version_set(long jarg1, NVAPI_STEREO_CAPS_V1 jarg1_, long jarg2);
  public final static native long NVAPI_STEREO_CAPS_V1_version_get(long jarg1, NVAPI_STEREO_CAPS_V1 jarg1_);
  public final static native void NVAPI_STEREO_CAPS_V1_supportsWindowedModeOff_set(long jarg1, NVAPI_STEREO_CAPS_V1 jarg1_, long jarg2);
  public final static native long NVAPI_STEREO_CAPS_V1_supportsWindowedModeOff_get(long jarg1, NVAPI_STEREO_CAPS_V1 jarg1_);
  public final static native void NVAPI_STEREO_CAPS_V1_supportsWindowedModeAutomatic_set(long jarg1, NVAPI_STEREO_CAPS_V1 jarg1_, long jarg2);
  public final static native long NVAPI_STEREO_CAPS_V1_supportsWindowedModeAutomatic_get(long jarg1, NVAPI_STEREO_CAPS_V1 jarg1_);
  public final static native void NVAPI_STEREO_CAPS_V1_supportsWindowedModePersistent_set(long jarg1, NVAPI_STEREO_CAPS_V1 jarg1_, long jarg2);
  public final static native long NVAPI_STEREO_CAPS_V1_supportsWindowedModePersistent_get(long jarg1, NVAPI_STEREO_CAPS_V1 jarg1_);
  public final static native void NVAPI_STEREO_CAPS_V1_reserved_set(long jarg1, NVAPI_STEREO_CAPS_V1 jarg1_, long jarg2);
  public final static native long NVAPI_STEREO_CAPS_V1_reserved_get(long jarg1, NVAPI_STEREO_CAPS_V1 jarg1_);
  public final static native void NVAPI_STEREO_CAPS_V1_reserved2_set(long jarg1, NVAPI_STEREO_CAPS_V1 jarg1_, long[] jarg2);
  public final static native long[] NVAPI_STEREO_CAPS_V1_reserved2_get(long jarg1, NVAPI_STEREO_CAPS_V1 jarg1_);
  public final static native long new_NVAPI_STEREO_CAPS_V1();
  public final static native void delete_NVAPI_STEREO_CAPS_V1(long jarg1);
  public final static native int NvAPI_Stereo_GetStereoSupport(long jarg1, NvMonitorHandle__ jarg1_, long jarg2, NVAPI_STEREO_CAPS_V1 jarg2_);
  public final static native int NvAPI_Stereo_DecreaseSeparation(long jarg1);
  public final static native int NvAPI_Stereo_IncreaseSeparation(long jarg1);
  public final static native int NvAPI_Stereo_DecreaseConvergence(long jarg1);
  public final static native int NvAPI_Stereo_IncreaseConvergence(long jarg1);
  public final static native int NvAPI_Stereo_GetFrustumAdjustMode(long jarg1, long jarg2);
  public final static native int NvAPI_Stereo_SetFrustumAdjustMode(long jarg1, int jarg2);
  public final static native int NvAPI_Stereo_CaptureJpegImage(long jarg1, long jarg2);
  public final static native int NVAPI_STEREO_INIT_ACTIVATION_IMMEDIATE_get();
  public final static native int NVAPI_STEREO_INIT_ACTIVATION_DELAYED_get();
  public final static native int NvAPI_Stereo_InitActivation(long jarg1, int jarg2);
  public final static native int NvAPI_Stereo_Trigger_Activation(long jarg1);
  public final static native int NvAPI_Stereo_CapturePngImage(long jarg1);
  public final static native int NvAPI_Stereo_ReverseStereoBlitControl(long jarg1, short jarg2);
  public final static native int NvAPI_Stereo_SetNotificationMessage(long jarg1, java.math.BigInteger jarg2, java.math.BigInteger jarg3);
  public final static native int NVAPI_STEREO_QUADBUFFERED_API_VERSION_get();
  public final static native int NVAPI_STEREO_SWAPCHAIN_DEFAULT_get();
  public final static native int NVAPI_STEREO_SWAPCHAIN_STEREO_get();
  public final static native int NVAPI_STEREO_SWAPCHAIN_MONO_get();
  public final static native void NvDRSSessionHandle___unused_set(long jarg1, NvDRSSessionHandle__ jarg1_, int jarg2);
  public final static native int NvDRSSessionHandle___unused_get(long jarg1, NvDRSSessionHandle__ jarg1_);
  public final static native long new_NvDRSSessionHandle__();
  public final static native void delete_NvDRSSessionHandle__(long jarg1);
  public final static native void NvDRSProfileHandle___unused_set(long jarg1, NvDRSProfileHandle__ jarg1_, int jarg2);
  public final static native int NvDRSProfileHandle___unused_get(long jarg1, NvDRSProfileHandle__ jarg1_);
  public final static native long new_NvDRSProfileHandle__();
  public final static native void delete_NvDRSProfileHandle__(long jarg1);
  public final static native int NVAPI_SETTING_MAX_VALUES_get();
  public final static native void NVDRS_GPU_SUPPORT_geforce_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_geforce_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_quadro_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_quadro_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_nvs_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_nvs_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved4_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved4_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved5_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved5_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved6_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved6_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved7_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved7_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved8_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved8_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved9_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved9_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved10_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved10_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved11_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved11_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved12_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved12_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved13_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved13_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved14_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved14_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved15_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved15_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved16_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved16_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved17_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved17_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved18_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved18_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved19_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved19_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved20_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved20_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved21_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved21_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved22_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved22_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved23_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved23_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved24_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved24_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved25_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved25_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved26_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved26_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved27_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved27_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved28_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved28_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved29_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved29_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved30_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved30_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved31_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved31_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native void NVDRS_GPU_SUPPORT_reserved32_set(long jarg1, NVDRS_GPU_SUPPORT jarg1_, long jarg2);
  public final static native long NVDRS_GPU_SUPPORT_reserved32_get(long jarg1, NVDRS_GPU_SUPPORT jarg1_);
  public final static native long new_NVDRS_GPU_SUPPORT();
  public final static native void delete_NVDRS_GPU_SUPPORT(long jarg1);
  public final static native void NVDRS_BINARY_SETTING_valueLength_set(long jarg1, NVDRS_BINARY_SETTING jarg1_, long jarg2);
  public final static native long NVDRS_BINARY_SETTING_valueLength_get(long jarg1, NVDRS_BINARY_SETTING jarg1_);
  public final static native void NVDRS_BINARY_SETTING_valueData_set(long jarg1, NVDRS_BINARY_SETTING jarg1_, short[] jarg2);
  public final static native short[] NVDRS_BINARY_SETTING_valueData_get(long jarg1, NVDRS_BINARY_SETTING jarg1_);
  public final static native long new_NVDRS_BINARY_SETTING();
  public final static native void delete_NVDRS_BINARY_SETTING(long jarg1);
  public final static native void NVDRS_SETTING_VALUES_version_set(long jarg1, NVDRS_SETTING_VALUES jarg1_, long jarg2);
  public final static native long NVDRS_SETTING_VALUES_version_get(long jarg1, NVDRS_SETTING_VALUES jarg1_);
  public final static native void NVDRS_SETTING_VALUES_numSettingValues_set(long jarg1, NVDRS_SETTING_VALUES jarg1_, long jarg2);
  public final static native long NVDRS_SETTING_VALUES_numSettingValues_get(long jarg1, NVDRS_SETTING_VALUES jarg1_);
  public final static native void NVDRS_SETTING_VALUES_settingType_set(long jarg1, NVDRS_SETTING_VALUES jarg1_, int jarg2);
  public final static native int NVDRS_SETTING_VALUES_settingType_get(long jarg1, NVDRS_SETTING_VALUES jarg1_);
  public final static native long NVDRS_SETTING_VALUES_settingValues_get(long jarg1, NVDRS_SETTING_VALUES jarg1_);
  public final static native long new_NVDRS_SETTING_VALUES();
  public final static native void delete_NVDRS_SETTING_VALUES(long jarg1);
  public final static native void NVDRS_SETTING_VALUES_settingValues_u32Value_set(long jarg1, NVDRS_SETTING_VALUES_settingValues jarg1_, long jarg2);
  public final static native long NVDRS_SETTING_VALUES_settingValues_u32Value_get(long jarg1, NVDRS_SETTING_VALUES_settingValues jarg1_);
  public final static native void NVDRS_SETTING_VALUES_settingValues_binaryValue_set(long jarg1, NVDRS_SETTING_VALUES_settingValues jarg1_, long jarg2, NVDRS_BINARY_SETTING jarg2_);
  public final static native long NVDRS_SETTING_VALUES_settingValues_binaryValue_get(long jarg1, NVDRS_SETTING_VALUES_settingValues jarg1_);
  public final static native void NVDRS_SETTING_VALUES_settingValues_wszValue_set(long jarg1, NVDRS_SETTING_VALUES_settingValues jarg1_, int[] jarg2);
  public final static native int[] NVDRS_SETTING_VALUES_settingValues_wszValue_get(long jarg1, NVDRS_SETTING_VALUES_settingValues jarg1_);
  public final static native long new_NVDRS_SETTING_VALUES_settingValues();
  public final static native void delete_NVDRS_SETTING_VALUES_settingValues(long jarg1);
  public final static native void NVDRS_SETTING_version_set(long jarg1, NVDRS_SETTING jarg1_, long jarg2);
  public final static native long NVDRS_SETTING_version_get(long jarg1, NVDRS_SETTING jarg1_);
  public final static native void NVDRS_SETTING_settingName_set(long jarg1, NVDRS_SETTING jarg1_, int[] jarg2);
  public final static native int[] NVDRS_SETTING_settingName_get(long jarg1, NVDRS_SETTING jarg1_);
  public final static native void NVDRS_SETTING_settingId_set(long jarg1, NVDRS_SETTING jarg1_, long jarg2);
  public final static native long NVDRS_SETTING_settingId_get(long jarg1, NVDRS_SETTING jarg1_);
  public final static native void NVDRS_SETTING_settingType_set(long jarg1, NVDRS_SETTING jarg1_, int jarg2);
  public final static native int NVDRS_SETTING_settingType_get(long jarg1, NVDRS_SETTING jarg1_);
  public final static native void NVDRS_SETTING_settingLocation_set(long jarg1, NVDRS_SETTING jarg1_, int jarg2);
  public final static native int NVDRS_SETTING_settingLocation_get(long jarg1, NVDRS_SETTING jarg1_);
  public final static native void NVDRS_SETTING_isCurrentPredefined_set(long jarg1, NVDRS_SETTING jarg1_, long jarg2);
  public final static native long NVDRS_SETTING_isCurrentPredefined_get(long jarg1, NVDRS_SETTING jarg1_);
  public final static native void NVDRS_SETTING_isPredefinedValid_set(long jarg1, NVDRS_SETTING jarg1_, long jarg2);
  public final static native long NVDRS_SETTING_isPredefinedValid_get(long jarg1, NVDRS_SETTING jarg1_);
  public final static native long new_NVDRS_SETTING();
  public final static native void delete_NVDRS_SETTING(long jarg1);
  public final static native void NVDRS_APPLICATION_V1_version_set(long jarg1, NVDRS_APPLICATION_V1 jarg1_, long jarg2);
  public final static native long NVDRS_APPLICATION_V1_version_get(long jarg1, NVDRS_APPLICATION_V1 jarg1_);
  public final static native void NVDRS_APPLICATION_V1_isPredefined_set(long jarg1, NVDRS_APPLICATION_V1 jarg1_, long jarg2);
  public final static native long NVDRS_APPLICATION_V1_isPredefined_get(long jarg1, NVDRS_APPLICATION_V1 jarg1_);
  public final static native void NVDRS_APPLICATION_V1_appName_set(long jarg1, NVDRS_APPLICATION_V1 jarg1_, int[] jarg2);
  public final static native int[] NVDRS_APPLICATION_V1_appName_get(long jarg1, NVDRS_APPLICATION_V1 jarg1_);
  public final static native void NVDRS_APPLICATION_V1_userFriendlyName_set(long jarg1, NVDRS_APPLICATION_V1 jarg1_, int[] jarg2);
  public final static native int[] NVDRS_APPLICATION_V1_userFriendlyName_get(long jarg1, NVDRS_APPLICATION_V1 jarg1_);
  public final static native void NVDRS_APPLICATION_V1_launcher_set(long jarg1, NVDRS_APPLICATION_V1 jarg1_, int[] jarg2);
  public final static native int[] NVDRS_APPLICATION_V1_launcher_get(long jarg1, NVDRS_APPLICATION_V1 jarg1_);
  public final static native long new_NVDRS_APPLICATION_V1();
  public final static native void delete_NVDRS_APPLICATION_V1(long jarg1);
  public final static native void NVDRS_APPLICATION_V2_version_set(long jarg1, NVDRS_APPLICATION_V2 jarg1_, long jarg2);
  public final static native long NVDRS_APPLICATION_V2_version_get(long jarg1, NVDRS_APPLICATION_V2 jarg1_);
  public final static native void NVDRS_APPLICATION_V2_isPredefined_set(long jarg1, NVDRS_APPLICATION_V2 jarg1_, long jarg2);
  public final static native long NVDRS_APPLICATION_V2_isPredefined_get(long jarg1, NVDRS_APPLICATION_V2 jarg1_);
  public final static native void NVDRS_APPLICATION_V2_appName_set(long jarg1, NVDRS_APPLICATION_V2 jarg1_, int[] jarg2);
  public final static native int[] NVDRS_APPLICATION_V2_appName_get(long jarg1, NVDRS_APPLICATION_V2 jarg1_);
  public final static native void NVDRS_APPLICATION_V2_userFriendlyName_set(long jarg1, NVDRS_APPLICATION_V2 jarg1_, int[] jarg2);
  public final static native int[] NVDRS_APPLICATION_V2_userFriendlyName_get(long jarg1, NVDRS_APPLICATION_V2 jarg1_);
  public final static native void NVDRS_APPLICATION_V2_launcher_set(long jarg1, NVDRS_APPLICATION_V2 jarg1_, int[] jarg2);
  public final static native int[] NVDRS_APPLICATION_V2_launcher_get(long jarg1, NVDRS_APPLICATION_V2 jarg1_);
  public final static native void NVDRS_APPLICATION_V2_fileInFolder_set(long jarg1, NVDRS_APPLICATION_V2 jarg1_, int[] jarg2);
  public final static native int[] NVDRS_APPLICATION_V2_fileInFolder_get(long jarg1, NVDRS_APPLICATION_V2 jarg1_);
  public final static native long new_NVDRS_APPLICATION_V2();
  public final static native void delete_NVDRS_APPLICATION_V2(long jarg1);
  public final static native void NVDRS_APPLICATION_V3_version_set(long jarg1, NVDRS_APPLICATION_V3 jarg1_, long jarg2);
  public final static native long NVDRS_APPLICATION_V3_version_get(long jarg1, NVDRS_APPLICATION_V3 jarg1_);
  public final static native void NVDRS_APPLICATION_V3_isPredefined_set(long jarg1, NVDRS_APPLICATION_V3 jarg1_, long jarg2);
  public final static native long NVDRS_APPLICATION_V3_isPredefined_get(long jarg1, NVDRS_APPLICATION_V3 jarg1_);
  public final static native void NVDRS_APPLICATION_V3_appName_set(long jarg1, NVDRS_APPLICATION_V3 jarg1_, int[] jarg2);
  public final static native int[] NVDRS_APPLICATION_V3_appName_get(long jarg1, NVDRS_APPLICATION_V3 jarg1_);
  public final static native void NVDRS_APPLICATION_V3_userFriendlyName_set(long jarg1, NVDRS_APPLICATION_V3 jarg1_, int[] jarg2);
  public final static native int[] NVDRS_APPLICATION_V3_userFriendlyName_get(long jarg1, NVDRS_APPLICATION_V3 jarg1_);
  public final static native void NVDRS_APPLICATION_V3_launcher_set(long jarg1, NVDRS_APPLICATION_V3 jarg1_, int[] jarg2);
  public final static native int[] NVDRS_APPLICATION_V3_launcher_get(long jarg1, NVDRS_APPLICATION_V3 jarg1_);
  public final static native void NVDRS_APPLICATION_V3_fileInFolder_set(long jarg1, NVDRS_APPLICATION_V3 jarg1_, int[] jarg2);
  public final static native int[] NVDRS_APPLICATION_V3_fileInFolder_get(long jarg1, NVDRS_APPLICATION_V3 jarg1_);
  public final static native void NVDRS_APPLICATION_V3_isMetro_set(long jarg1, NVDRS_APPLICATION_V3 jarg1_, long jarg2);
  public final static native long NVDRS_APPLICATION_V3_isMetro_get(long jarg1, NVDRS_APPLICATION_V3 jarg1_);
  public final static native void NVDRS_APPLICATION_V3_reserved_set(long jarg1, NVDRS_APPLICATION_V3 jarg1_, long jarg2);
  public final static native long NVDRS_APPLICATION_V3_reserved_get(long jarg1, NVDRS_APPLICATION_V3 jarg1_);
  public final static native long new_NVDRS_APPLICATION_V3();
  public final static native void delete_NVDRS_APPLICATION_V3(long jarg1);
  public final static native void NVDRS_PROFILE_version_set(long jarg1, NVDRS_PROFILE jarg1_, long jarg2);
  public final static native long NVDRS_PROFILE_version_get(long jarg1, NVDRS_PROFILE jarg1_);
  public final static native void NVDRS_PROFILE_profileName_set(long jarg1, NVDRS_PROFILE jarg1_, int[] jarg2);
  public final static native int[] NVDRS_PROFILE_profileName_get(long jarg1, NVDRS_PROFILE jarg1_);
  public final static native void NVDRS_PROFILE_gpuSupport_set(long jarg1, NVDRS_PROFILE jarg1_, long jarg2, NVDRS_GPU_SUPPORT jarg2_);
  public final static native long NVDRS_PROFILE_gpuSupport_get(long jarg1, NVDRS_PROFILE jarg1_);
  public final static native void NVDRS_PROFILE_isPredefined_set(long jarg1, NVDRS_PROFILE jarg1_, long jarg2);
  public final static native long NVDRS_PROFILE_isPredefined_get(long jarg1, NVDRS_PROFILE jarg1_);
  public final static native void NVDRS_PROFILE_numOfApps_set(long jarg1, NVDRS_PROFILE jarg1_, long jarg2);
  public final static native long NVDRS_PROFILE_numOfApps_get(long jarg1, NVDRS_PROFILE jarg1_);
  public final static native void NVDRS_PROFILE_numOfSettings_set(long jarg1, NVDRS_PROFILE jarg1_, long jarg2);
  public final static native long NVDRS_PROFILE_numOfSettings_get(long jarg1, NVDRS_PROFILE jarg1_);
  public final static native long new_NVDRS_PROFILE();
  public final static native void delete_NVDRS_PROFILE(long jarg1);
  public final static native int NvAPI_DRS_CreateSession(long jarg1);
  public final static native int NvAPI_DRS_DestroySession(long jarg1, NvDRSSessionHandle__ jarg1_);
  public final static native int NvAPI_DRS_LoadSettings(long jarg1, NvDRSSessionHandle__ jarg1_);
  public final static native int NvAPI_DRS_SaveSettings(long jarg1, NvDRSSessionHandle__ jarg1_);
  public final static native int NvAPI_DRS_LoadSettingsFromFile(long jarg1, NvDRSSessionHandle__ jarg1_, int[] jarg2);
  public final static native int NvAPI_DRS_SaveSettingsToFile(long jarg1, NvDRSSessionHandle__ jarg1_, int[] jarg2);
  public final static native int NvAPI_DRS_CreateProfile(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, NVDRS_PROFILE jarg2_, long jarg3);
  public final static native int NvAPI_DRS_DeleteProfile(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, NvDRSProfileHandle__ jarg2_);
  public final static native int NvAPI_DRS_SetCurrentGlobalProfile(long jarg1, NvDRSSessionHandle__ jarg1_, int[] jarg2);
  public final static native int NvAPI_DRS_GetCurrentGlobalProfile(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_DRS_GetProfileInfo(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, NvDRSProfileHandle__ jarg2_, long jarg3, NVDRS_PROFILE jarg3_);
  public final static native int NvAPI_DRS_SetProfileInfo(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, NvDRSProfileHandle__ jarg2_, long jarg3, NVDRS_PROFILE jarg3_);
  public final static native int NvAPI_DRS_FindProfileByName(long jarg1, NvDRSSessionHandle__ jarg1_, int[] jarg2, long jarg3);
  public final static native int NvAPI_DRS_EnumProfiles(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, long jarg3);
  public final static native int NvAPI_DRS_GetNumProfiles(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2);
  public final static native int NvAPI_DRS_CreateApplication(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, NvDRSProfileHandle__ jarg2_, long jarg3, NVDRS_APPLICATION_V3 jarg3_);
  public final static native int NvAPI_DRS_DeleteApplicationEx(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, NvDRSProfileHandle__ jarg2_, long jarg3, NVDRS_APPLICATION_V3 jarg3_);
  public final static native int NvAPI_DRS_DeleteApplication(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, NvDRSProfileHandle__ jarg2_, int[] jarg3);
  public final static native int NvAPI_DRS_GetApplicationInfo(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, NvDRSProfileHandle__ jarg2_, int[] jarg3, long jarg4, NVDRS_APPLICATION_V3 jarg4_);
  public final static native int NvAPI_DRS_EnumApplications(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, NvDRSProfileHandle__ jarg2_, long jarg3, long jarg4, long jarg5, NVDRS_APPLICATION_V3 jarg5_);
  public final static native int NvAPI_DRS_FindApplicationByName(long jarg1, NvDRSSessionHandle__ jarg1_, int[] jarg2, long jarg3, long jarg4, NVDRS_APPLICATION_V3 jarg4_);
  public final static native int NvAPI_DRS_SetSetting(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, NvDRSProfileHandle__ jarg2_, long jarg3, NVDRS_SETTING jarg3_);
  public final static native int NvAPI_DRS_GetSetting(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, NvDRSProfileHandle__ jarg2_, long jarg3, long jarg4, NVDRS_SETTING jarg4_);
  public final static native int NvAPI_DRS_EnumSettings(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, NvDRSProfileHandle__ jarg2_, long jarg3, long jarg4, long jarg5, NVDRS_SETTING jarg5_);
  public final static native int NvAPI_DRS_EnumAvailableSettingIds(long jarg1, long jarg2);
  public final static native int NvAPI_DRS_EnumAvailableSettingValues(long jarg1, long jarg2, long jarg3, NVDRS_SETTING_VALUES jarg3_);
  public final static native int NvAPI_DRS_GetSettingIdFromName(int[] jarg1, long jarg2);
  public final static native int NvAPI_DRS_GetSettingNameFromId(long jarg1, long jarg2);
  public final static native int NvAPI_DRS_DeleteProfileSetting(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, NvDRSProfileHandle__ jarg2_, long jarg3);
  public final static native int NvAPI_DRS_RestoreAllDefaults(long jarg1, NvDRSSessionHandle__ jarg1_);
  public final static native int NvAPI_DRS_RestoreProfileDefault(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, NvDRSProfileHandle__ jarg2_);
  public final static native int NvAPI_DRS_RestoreProfileDefaultSetting(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2, NvDRSProfileHandle__ jarg2_, long jarg3);
  public final static native int NvAPI_DRS_GetBaseProfile(long jarg1, NvDRSSessionHandle__ jarg1_, long jarg2);
  public final static native void NV_CHIPSET_INFO_v4_version_set(long jarg1, NV_CHIPSET_INFO_v4 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v4_version_get(long jarg1, NV_CHIPSET_INFO_v4 jarg1_);
  public final static native void NV_CHIPSET_INFO_v4_vendorId_set(long jarg1, NV_CHIPSET_INFO_v4 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v4_vendorId_get(long jarg1, NV_CHIPSET_INFO_v4 jarg1_);
  public final static native void NV_CHIPSET_INFO_v4_deviceId_set(long jarg1, NV_CHIPSET_INFO_v4 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v4_deviceId_get(long jarg1, NV_CHIPSET_INFO_v4 jarg1_);
  public final static native void NV_CHIPSET_INFO_v4_szVendorName_set(long jarg1, NV_CHIPSET_INFO_v4 jarg1_, String jarg2);
  public final static native String NV_CHIPSET_INFO_v4_szVendorName_get(long jarg1, NV_CHIPSET_INFO_v4 jarg1_);
  public final static native void NV_CHIPSET_INFO_v4_szChipsetName_set(long jarg1, NV_CHIPSET_INFO_v4 jarg1_, String jarg2);
  public final static native String NV_CHIPSET_INFO_v4_szChipsetName_get(long jarg1, NV_CHIPSET_INFO_v4 jarg1_);
  public final static native void NV_CHIPSET_INFO_v4_flags_set(long jarg1, NV_CHIPSET_INFO_v4 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v4_flags_get(long jarg1, NV_CHIPSET_INFO_v4 jarg1_);
  public final static native void NV_CHIPSET_INFO_v4_subSysVendorId_set(long jarg1, NV_CHIPSET_INFO_v4 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v4_subSysVendorId_get(long jarg1, NV_CHIPSET_INFO_v4 jarg1_);
  public final static native void NV_CHIPSET_INFO_v4_subSysDeviceId_set(long jarg1, NV_CHIPSET_INFO_v4 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v4_subSysDeviceId_get(long jarg1, NV_CHIPSET_INFO_v4 jarg1_);
  public final static native void NV_CHIPSET_INFO_v4_szSubSysVendorName_set(long jarg1, NV_CHIPSET_INFO_v4 jarg1_, String jarg2);
  public final static native String NV_CHIPSET_INFO_v4_szSubSysVendorName_get(long jarg1, NV_CHIPSET_INFO_v4 jarg1_);
  public final static native void NV_CHIPSET_INFO_v4_HBvendorId_set(long jarg1, NV_CHIPSET_INFO_v4 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v4_HBvendorId_get(long jarg1, NV_CHIPSET_INFO_v4 jarg1_);
  public final static native void NV_CHIPSET_INFO_v4_HBdeviceId_set(long jarg1, NV_CHIPSET_INFO_v4 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v4_HBdeviceId_get(long jarg1, NV_CHIPSET_INFO_v4 jarg1_);
  public final static native void NV_CHIPSET_INFO_v4_HBsubSysVendorId_set(long jarg1, NV_CHIPSET_INFO_v4 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v4_HBsubSysVendorId_get(long jarg1, NV_CHIPSET_INFO_v4 jarg1_);
  public final static native void NV_CHIPSET_INFO_v4_HBsubSysDeviceId_set(long jarg1, NV_CHIPSET_INFO_v4 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v4_HBsubSysDeviceId_get(long jarg1, NV_CHIPSET_INFO_v4 jarg1_);
  public final static native long new_NV_CHIPSET_INFO_v4();
  public final static native void delete_NV_CHIPSET_INFO_v4(long jarg1);
  public final static native void NV_CHIPSET_INFO_v3_version_set(long jarg1, NV_CHIPSET_INFO_v3 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v3_version_get(long jarg1, NV_CHIPSET_INFO_v3 jarg1_);
  public final static native void NV_CHIPSET_INFO_v3_vendorId_set(long jarg1, NV_CHIPSET_INFO_v3 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v3_vendorId_get(long jarg1, NV_CHIPSET_INFO_v3 jarg1_);
  public final static native void NV_CHIPSET_INFO_v3_deviceId_set(long jarg1, NV_CHIPSET_INFO_v3 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v3_deviceId_get(long jarg1, NV_CHIPSET_INFO_v3 jarg1_);
  public final static native void NV_CHIPSET_INFO_v3_szVendorName_set(long jarg1, NV_CHIPSET_INFO_v3 jarg1_, String jarg2);
  public final static native String NV_CHIPSET_INFO_v3_szVendorName_get(long jarg1, NV_CHIPSET_INFO_v3 jarg1_);
  public final static native void NV_CHIPSET_INFO_v3_szChipsetName_set(long jarg1, NV_CHIPSET_INFO_v3 jarg1_, String jarg2);
  public final static native String NV_CHIPSET_INFO_v3_szChipsetName_get(long jarg1, NV_CHIPSET_INFO_v3 jarg1_);
  public final static native void NV_CHIPSET_INFO_v3_flags_set(long jarg1, NV_CHIPSET_INFO_v3 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v3_flags_get(long jarg1, NV_CHIPSET_INFO_v3 jarg1_);
  public final static native void NV_CHIPSET_INFO_v3_subSysVendorId_set(long jarg1, NV_CHIPSET_INFO_v3 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v3_subSysVendorId_get(long jarg1, NV_CHIPSET_INFO_v3 jarg1_);
  public final static native void NV_CHIPSET_INFO_v3_subSysDeviceId_set(long jarg1, NV_CHIPSET_INFO_v3 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v3_subSysDeviceId_get(long jarg1, NV_CHIPSET_INFO_v3 jarg1_);
  public final static native void NV_CHIPSET_INFO_v3_szSubSysVendorName_set(long jarg1, NV_CHIPSET_INFO_v3 jarg1_, String jarg2);
  public final static native String NV_CHIPSET_INFO_v3_szSubSysVendorName_get(long jarg1, NV_CHIPSET_INFO_v3 jarg1_);
  public final static native long new_NV_CHIPSET_INFO_v3();
  public final static native void delete_NV_CHIPSET_INFO_v3(long jarg1);
  public final static native int NV_CHIPSET_INFO_HYBRID_get();
  public final static native void NV_CHIPSET_INFO_v2_version_set(long jarg1, NV_CHIPSET_INFO_v2 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v2_version_get(long jarg1, NV_CHIPSET_INFO_v2 jarg1_);
  public final static native void NV_CHIPSET_INFO_v2_vendorId_set(long jarg1, NV_CHIPSET_INFO_v2 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v2_vendorId_get(long jarg1, NV_CHIPSET_INFO_v2 jarg1_);
  public final static native void NV_CHIPSET_INFO_v2_deviceId_set(long jarg1, NV_CHIPSET_INFO_v2 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v2_deviceId_get(long jarg1, NV_CHIPSET_INFO_v2 jarg1_);
  public final static native void NV_CHIPSET_INFO_v2_szVendorName_set(long jarg1, NV_CHIPSET_INFO_v2 jarg1_, String jarg2);
  public final static native String NV_CHIPSET_INFO_v2_szVendorName_get(long jarg1, NV_CHIPSET_INFO_v2 jarg1_);
  public final static native void NV_CHIPSET_INFO_v2_szChipsetName_set(long jarg1, NV_CHIPSET_INFO_v2 jarg1_, String jarg2);
  public final static native String NV_CHIPSET_INFO_v2_szChipsetName_get(long jarg1, NV_CHIPSET_INFO_v2 jarg1_);
  public final static native void NV_CHIPSET_INFO_v2_flags_set(long jarg1, NV_CHIPSET_INFO_v2 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v2_flags_get(long jarg1, NV_CHIPSET_INFO_v2 jarg1_);
  public final static native long new_NV_CHIPSET_INFO_v2();
  public final static native void delete_NV_CHIPSET_INFO_v2(long jarg1);
  public final static native void NV_CHIPSET_INFO_v1_version_set(long jarg1, NV_CHIPSET_INFO_v1 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v1_version_get(long jarg1, NV_CHIPSET_INFO_v1 jarg1_);
  public final static native void NV_CHIPSET_INFO_v1_vendorId_set(long jarg1, NV_CHIPSET_INFO_v1 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v1_vendorId_get(long jarg1, NV_CHIPSET_INFO_v1 jarg1_);
  public final static native void NV_CHIPSET_INFO_v1_deviceId_set(long jarg1, NV_CHIPSET_INFO_v1 jarg1_, long jarg2);
  public final static native long NV_CHIPSET_INFO_v1_deviceId_get(long jarg1, NV_CHIPSET_INFO_v1 jarg1_);
  public final static native void NV_CHIPSET_INFO_v1_szVendorName_set(long jarg1, NV_CHIPSET_INFO_v1 jarg1_, String jarg2);
  public final static native String NV_CHIPSET_INFO_v1_szVendorName_get(long jarg1, NV_CHIPSET_INFO_v1 jarg1_);
  public final static native void NV_CHIPSET_INFO_v1_szChipsetName_set(long jarg1, NV_CHIPSET_INFO_v1 jarg1_, String jarg2);
  public final static native String NV_CHIPSET_INFO_v1_szChipsetName_get(long jarg1, NV_CHIPSET_INFO_v1 jarg1_);
  public final static native long new_NV_CHIPSET_INFO_v1();
  public final static native void delete_NV_CHIPSET_INFO_v1(long jarg1);
  public final static native int NvAPI_SYS_GetChipSetInfo(long jarg1, NV_CHIPSET_INFO_v4 jarg1_);
  public final static native void NV_LID_DOCK_PARAMS_version_set(long jarg1, NV_LID_DOCK_PARAMS jarg1_, long jarg2);
  public final static native long NV_LID_DOCK_PARAMS_version_get(long jarg1, NV_LID_DOCK_PARAMS jarg1_);
  public final static native void NV_LID_DOCK_PARAMS_currentLidState_set(long jarg1, NV_LID_DOCK_PARAMS jarg1_, long jarg2);
  public final static native long NV_LID_DOCK_PARAMS_currentLidState_get(long jarg1, NV_LID_DOCK_PARAMS jarg1_);
  public final static native void NV_LID_DOCK_PARAMS_currentDockState_set(long jarg1, NV_LID_DOCK_PARAMS jarg1_, long jarg2);
  public final static native long NV_LID_DOCK_PARAMS_currentDockState_get(long jarg1, NV_LID_DOCK_PARAMS jarg1_);
  public final static native void NV_LID_DOCK_PARAMS_currentLidPolicy_set(long jarg1, NV_LID_DOCK_PARAMS jarg1_, long jarg2);
  public final static native long NV_LID_DOCK_PARAMS_currentLidPolicy_get(long jarg1, NV_LID_DOCK_PARAMS jarg1_);
  public final static native void NV_LID_DOCK_PARAMS_currentDockPolicy_set(long jarg1, NV_LID_DOCK_PARAMS jarg1_, long jarg2);
  public final static native long NV_LID_DOCK_PARAMS_currentDockPolicy_get(long jarg1, NV_LID_DOCK_PARAMS jarg1_);
  public final static native void NV_LID_DOCK_PARAMS_forcedLidMechanismPresent_set(long jarg1, NV_LID_DOCK_PARAMS jarg1_, long jarg2);
  public final static native long NV_LID_DOCK_PARAMS_forcedLidMechanismPresent_get(long jarg1, NV_LID_DOCK_PARAMS jarg1_);
  public final static native void NV_LID_DOCK_PARAMS_forcedDockMechanismPresent_set(long jarg1, NV_LID_DOCK_PARAMS jarg1_, long jarg2);
  public final static native long NV_LID_DOCK_PARAMS_forcedDockMechanismPresent_get(long jarg1, NV_LID_DOCK_PARAMS jarg1_);
  public final static native long new_NV_LID_DOCK_PARAMS();
  public final static native void delete_NV_LID_DOCK_PARAMS(long jarg1);
  public final static native int NvAPI_SYS_GetLidAndDockInfo(long jarg1, NV_LID_DOCK_PARAMS jarg1_);
  public final static native int NvAPI_SYS_GetDisplayIdFromGpuAndOutputId(long jarg1, NvPhysicalGpuHandle__ jarg1_, long jarg2, long jarg3);
  public final static native int NvAPI_SYS_GetGpuAndOutputIdFromDisplayId(long jarg1, long jarg2, long jarg3);
  public final static native int NvAPI_SYS_GetPhysicalGpuFromDisplayId(long jarg1, long jarg2);
}
