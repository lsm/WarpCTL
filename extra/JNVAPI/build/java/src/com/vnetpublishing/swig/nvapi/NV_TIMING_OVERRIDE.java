/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.vnetpublishing.swig.nvapi;

public final class NV_TIMING_OVERRIDE {
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVERRIDE_CURRENT = new NV_TIMING_OVERRIDE("NV_TIMING_OVERRIDE_CURRENT", jnvapiJNI.NV_TIMING_OVERRIDE_CURRENT_get());
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVERRIDE_AUTO = new NV_TIMING_OVERRIDE("NV_TIMING_OVERRIDE_AUTO");
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVERRIDE_EDID = new NV_TIMING_OVERRIDE("NV_TIMING_OVERRIDE_EDID");
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVERRIDE_DMT = new NV_TIMING_OVERRIDE("NV_TIMING_OVERRIDE_DMT");
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVERRIDE_DMT_RB = new NV_TIMING_OVERRIDE("NV_TIMING_OVERRIDE_DMT_RB");
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVERRIDE_CVT = new NV_TIMING_OVERRIDE("NV_TIMING_OVERRIDE_CVT");
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVERRIDE_CVT_RB = new NV_TIMING_OVERRIDE("NV_TIMING_OVERRIDE_CVT_RB");
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVERRIDE_GTF = new NV_TIMING_OVERRIDE("NV_TIMING_OVERRIDE_GTF");
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVERRIDE_EIA861 = new NV_TIMING_OVERRIDE("NV_TIMING_OVERRIDE_EIA861");
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVERRIDE_ANALOG_TV = new NV_TIMING_OVERRIDE("NV_TIMING_OVERRIDE_ANALOG_TV");
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVERRIDE_CUST = new NV_TIMING_OVERRIDE("NV_TIMING_OVERRIDE_CUST");
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVERRIDE_NV_PREDEFINED = new NV_TIMING_OVERRIDE("NV_TIMING_OVERRIDE_NV_PREDEFINED");
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVERRIDE_NV_PSF = new NV_TIMING_OVERRIDE("NV_TIMING_OVERRIDE_NV_PSF", jnvapiJNI.NV_TIMING_OVERRIDE_NV_PSF_get());
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVERRIDE_NV_ASPR = new NV_TIMING_OVERRIDE("NV_TIMING_OVERRIDE_NV_ASPR");
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVERRIDE_SDI = new NV_TIMING_OVERRIDE("NV_TIMING_OVERRIDE_SDI");
  public final static NV_TIMING_OVERRIDE NV_TIMING_OVRRIDE_MAX = new NV_TIMING_OVERRIDE("NV_TIMING_OVRRIDE_MAX");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static NV_TIMING_OVERRIDE swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + NV_TIMING_OVERRIDE.class + " with value " + swigValue);
  }

  private NV_TIMING_OVERRIDE(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private NV_TIMING_OVERRIDE(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private NV_TIMING_OVERRIDE(String swigName, NV_TIMING_OVERRIDE swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static NV_TIMING_OVERRIDE[] swigValues = { NV_TIMING_OVERRIDE_CURRENT, NV_TIMING_OVERRIDE_AUTO, NV_TIMING_OVERRIDE_EDID, NV_TIMING_OVERRIDE_DMT, NV_TIMING_OVERRIDE_DMT_RB, NV_TIMING_OVERRIDE_CVT, NV_TIMING_OVERRIDE_CVT_RB, NV_TIMING_OVERRIDE_GTF, NV_TIMING_OVERRIDE_EIA861, NV_TIMING_OVERRIDE_ANALOG_TV, NV_TIMING_OVERRIDE_CUST, NV_TIMING_OVERRIDE_NV_PREDEFINED, NV_TIMING_OVERRIDE_NV_PSF, NV_TIMING_OVERRIDE_NV_ASPR, NV_TIMING_OVERRIDE_SDI, NV_TIMING_OVRRIDE_MAX };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

