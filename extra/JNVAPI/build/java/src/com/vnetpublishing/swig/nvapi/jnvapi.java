/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.vnetpublishing.swig.nvapi;

public class jnvapi implements jnvapiConstants {
  public static NVDX_SwapChainHandle__ getNVDX_SWAPCHAIN_NONE() {
    long cPtr = jnvapiJNI.NVDX_SWAPCHAIN_NONE_get();
    return (cPtr == 0) ? null : new NVDX_SwapChainHandle__(cPtr, false);
  }

  public static NvAPI_Status NvAPI_SYS_GetDriverAndBranchVersion(SWIGTYPE_p_unsigned_long pDriverVersion, String szBuildBranchString) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_SYS_GetDriverAndBranchVersion(SWIGTYPE_p_unsigned_long.getCPtr(pDriverVersion), szBuildBranchString));
  }

  public static NvAPI_Status NvAPI_GPU_GetMemoryInfo(NvPhysicalGpuHandle__ hPhysicalGpu, NV_DISPLAY_DRIVER_MEMORY_INFO_V2 pMemoryInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetMemoryInfo(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, NV_DISPLAY_DRIVER_MEMORY_INFO_V2.getCPtr(pMemoryInfo), pMemoryInfo));
  }

  public static NvAPI_Status NvAPI_EnumPhysicalGPUs(SWIGTYPE_p_p_NvPhysicalGpuHandle__ nvGPUHandle, SWIGTYPE_p_unsigned_long pGpuCount) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_EnumPhysicalGPUs(SWIGTYPE_p_p_NvPhysicalGpuHandle__.getCPtr(nvGPUHandle), SWIGTYPE_p_unsigned_long.getCPtr(pGpuCount)));
  }

  public static NvAPI_Status NvAPI_DISP_GetGDIPrimaryDisplayId(SWIGTYPE_p_unsigned_long displayId) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DISP_GetGDIPrimaryDisplayId(SWIGTYPE_p_unsigned_long.getCPtr(displayId)));
  }

  public static NvAPI_Status NvAPI_Mosaic_GetDisplayViewportsByResolution(long displayId, long srcWidth, long srcHeight, NV_RECT viewports, SWIGTYPE_p_unsigned_char bezelCorrected) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Mosaic_GetDisplayViewportsByResolution(displayId, srcWidth, srcHeight, NV_RECT.getCPtr(viewports), viewports, SWIGTYPE_p_unsigned_char.getCPtr(bezelCorrected)));
  }

  public static NvAPI_Status NvAPI_Stereo_Enable() {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_Enable());
  }

  public static NvAPI_Status NvAPI_Stereo_Disable() {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_Disable());
  }

  public static NvAPI_Status NvAPI_Stereo_IsEnabled(SWIGTYPE_p_unsigned_char pIsStereoEnabled) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_IsEnabled(SWIGTYPE_p_unsigned_char.getCPtr(pIsStereoEnabled)));
  }

  public static NvAPI_Status NvAPI_Stereo_DestroyHandle(SWIGTYPE_p_void stereoHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_DestroyHandle(SWIGTYPE_p_void.getCPtr(stereoHandle)));
  }

  public static NvAPI_Status NvAPI_Stereo_Activate(SWIGTYPE_p_void stereoHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_Activate(SWIGTYPE_p_void.getCPtr(stereoHandle)));
  }

  public static NvAPI_Status NvAPI_Stereo_Deactivate(SWIGTYPE_p_void stereoHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_Deactivate(SWIGTYPE_p_void.getCPtr(stereoHandle)));
  }

  public static NvAPI_Status NvAPI_Stereo_IsActivated(SWIGTYPE_p_void stereoHandle, SWIGTYPE_p_unsigned_char pIsStereoOn) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_IsActivated(SWIGTYPE_p_void.getCPtr(stereoHandle), SWIGTYPE_p_unsigned_char.getCPtr(pIsStereoOn)));
  }

  public static NvAPI_Status NvAPI_Stereo_GetSeparation(SWIGTYPE_p_void stereoHandle, SWIGTYPE_p_float pSeparationPercentage) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_GetSeparation(SWIGTYPE_p_void.getCPtr(stereoHandle), SWIGTYPE_p_float.getCPtr(pSeparationPercentage)));
  }

  public static NvAPI_Status NvAPI_Stereo_SetSeparation(SWIGTYPE_p_void stereoHandle, float newSeparationPercentage) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_SetSeparation(SWIGTYPE_p_void.getCPtr(stereoHandle), newSeparationPercentage));
  }

  public static NvAPI_Status NvAPI_Stereo_GetConvergence(SWIGTYPE_p_void stereoHandle, SWIGTYPE_p_float pConvergence) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_GetConvergence(SWIGTYPE_p_void.getCPtr(stereoHandle), SWIGTYPE_p_float.getCPtr(pConvergence)));
  }

  public static NvAPI_Status NvAPI_Stereo_SetConvergence(SWIGTYPE_p_void stereoHandle, float newConvergence) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_SetConvergence(SWIGTYPE_p_void.getCPtr(stereoHandle), newConvergence));
  }

  public static NvAPI_Status NvAPI_Stereo_SetActiveEye(SWIGTYPE_p_void hStereoHandle, NV_STEREO_ACTIVE_EYE StereoEye) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_SetActiveEye(SWIGTYPE_p_void.getCPtr(hStereoHandle), StereoEye.swigValue()));
  }

  public static NvAPI_Status NvAPI_Stereo_SetDriverMode(NV_STEREO_DRIVER_MODE mode) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_SetDriverMode(mode.swigValue()));
  }

  public static NvAPI_Status NvAPI_Stereo_GetEyeSeparation(SWIGTYPE_p_void hStereoHandle, SWIGTYPE_p_float pSeparation) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_GetEyeSeparation(SWIGTYPE_p_void.getCPtr(hStereoHandle), SWIGTYPE_p_float.getCPtr(pSeparation)));
  }

  public static NvAPI_Status NvAPI_Stereo_IsWindowedModeSupported(SWIGTYPE_p_unsigned_char bSupported) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_IsWindowedModeSupported(SWIGTYPE_p_unsigned_char.getCPtr(bSupported)));
  }

  public static NvAPI_Status NvAPI_Stereo_SetSurfaceCreationMode(SWIGTYPE_p_void hStereoHandle, NVAPI_STEREO_SURFACECREATEMODE creationMode) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_SetSurfaceCreationMode(SWIGTYPE_p_void.getCPtr(hStereoHandle), creationMode.swigValue()));
  }

  public static NvAPI_Status NvAPI_Stereo_GetSurfaceCreationMode(SWIGTYPE_p_void hStereoHandle, SWIGTYPE_p__NVAPI_STEREO_SURFACECREATEMODE pCreationMode) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_GetSurfaceCreationMode(SWIGTYPE_p_void.getCPtr(hStereoHandle), SWIGTYPE_p__NVAPI_STEREO_SURFACECREATEMODE.getCPtr(pCreationMode)));
  }

  public static NvAPI_Status NvAPI_Stereo_Debug_WasLastDrawStereoized(SWIGTYPE_p_void hStereoHandle, SWIGTYPE_p_unsigned_char pWasStereoized) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_Debug_WasLastDrawStereoized(SWIGTYPE_p_void.getCPtr(hStereoHandle), SWIGTYPE_p_unsigned_char.getCPtr(pWasStereoized)));
  }

  public static NvAPI_Status NvAPI_Stereo_SetDefaultProfile(String szProfileName) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_SetDefaultProfile(szProfileName));
  }

  public static NvAPI_Status NvAPI_Stereo_GetDefaultProfile(long cbSizeIn, String szProfileName, SWIGTYPE_p_unsigned_long pcbSizeOut) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_GetDefaultProfile(cbSizeIn, szProfileName, SWIGTYPE_p_unsigned_long.getCPtr(pcbSizeOut)));
  }

  public static NvAPI_Status NvAPI_Initialize() {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Initialize());
  }

  public static NvAPI_Status NvAPI_Unload() {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Unload());
  }

  public static NvAPI_Status NvAPI_GetErrorMessage(NvAPI_Status nr, String szDesc) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetErrorMessage(nr.swigValue(), szDesc));
  }

  public static NvAPI_Status NvAPI_GetInterfaceVersionString(String szDesc) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetInterfaceVersionString(szDesc));
  }

  public static NvAPI_Status NvAPI_GPU_GetEDID(NvPhysicalGpuHandle__ hPhysicalGpu, long displayOutputId, NV_EDID_V3 pEDID) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetEDID(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, displayOutputId, NV_EDID_V3.getCPtr(pEDID), pEDID));
  }

  public static NvAPI_Status NvAPI_SetView(NvDisplayHandle__ hNvDisplay, NV_VIEW_TARGET_INFO pTargetInfo, NV_TARGET_VIEW_MODE targetView) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_SetView(NvDisplayHandle__.getCPtr(hNvDisplay), hNvDisplay, NV_VIEW_TARGET_INFO.getCPtr(pTargetInfo), pTargetInfo, targetView.swigValue()));
  }

  public static NvAPI_Status NvAPI_SetViewEx(NvDisplayHandle__ hNvDisplay, NV_DISPLAY_PATH_INFO pPathInfo, NV_TARGET_VIEW_MODE displayView) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_SetViewEx(NvDisplayHandle__.getCPtr(hNvDisplay), hNvDisplay, NV_DISPLAY_PATH_INFO.getCPtr(pPathInfo), pPathInfo, displayView.swigValue()));
  }

  public static NvAPI_Status NvAPI_GetDisplayDriverVersion(NvDisplayHandle__ hNvDisplay, NV_DISPLAY_DRIVER_VERSION pVersion) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetDisplayDriverVersion(NvDisplayHandle__.getCPtr(hNvDisplay), hNvDisplay, NV_DISPLAY_DRIVER_VERSION.getCPtr(pVersion), pVersion));
  }

  public static NvAPI_Status NvAPI_OGL_ExpertModeSet(long expertDetailLevel, long expertReportMask, long expertOutputMask, SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__char__void expertCallback) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_OGL_ExpertModeSet(expertDetailLevel, expertReportMask, expertOutputMask, SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__char__void.getCPtr(expertCallback)));
  }

  public static NvAPI_Status NvAPI_OGL_ExpertModeGet(SWIGTYPE_p_unsigned_long pExpertDetailLevel, SWIGTYPE_p_unsigned_long pExpertReportMask, SWIGTYPE_p_unsigned_long pExpertOutputMask, SWIGTYPE_p_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__char__void pExpertCallback) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_OGL_ExpertModeGet(SWIGTYPE_p_unsigned_long.getCPtr(pExpertDetailLevel), SWIGTYPE_p_unsigned_long.getCPtr(pExpertReportMask), SWIGTYPE_p_unsigned_long.getCPtr(pExpertOutputMask), SWIGTYPE_p_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__char__void.getCPtr(pExpertCallback)));
  }

  public static NvAPI_Status NvAPI_OGL_ExpertModeDefaultsSet(long expertDetailLevel, long expertReportMask, long expertOutputMask) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_OGL_ExpertModeDefaultsSet(expertDetailLevel, expertReportMask, expertOutputMask));
  }

  public static NvAPI_Status NvAPI_OGL_ExpertModeDefaultsGet(SWIGTYPE_p_unsigned_long pExpertDetailLevel, SWIGTYPE_p_unsigned_long pExpertReportMask, SWIGTYPE_p_unsigned_long pExpertOutputMask) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_OGL_ExpertModeDefaultsGet(SWIGTYPE_p_unsigned_long.getCPtr(pExpertDetailLevel), SWIGTYPE_p_unsigned_long.getCPtr(pExpertReportMask), SWIGTYPE_p_unsigned_long.getCPtr(pExpertOutputMask)));
  }

  public static NvAPI_Status NvAPI_EnumTCCPhysicalGPUs(SWIGTYPE_p_p_NvPhysicalGpuHandle__ nvGPUHandle, SWIGTYPE_p_unsigned_long pGpuCount) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_EnumTCCPhysicalGPUs(SWIGTYPE_p_p_NvPhysicalGpuHandle__.getCPtr(nvGPUHandle), SWIGTYPE_p_unsigned_long.getCPtr(pGpuCount)));
  }

  public static NvAPI_Status NvAPI_EnumLogicalGPUs(SWIGTYPE_p_p_NvLogicalGpuHandle__ nvGPUHandle, SWIGTYPE_p_unsigned_long pGpuCount) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_EnumLogicalGPUs(SWIGTYPE_p_p_NvLogicalGpuHandle__.getCPtr(nvGPUHandle), SWIGTYPE_p_unsigned_long.getCPtr(pGpuCount)));
  }

  public static NvAPI_Status NvAPI_GetPhysicalGPUsFromDisplay(NvDisplayHandle__ hNvDisp, SWIGTYPE_p_p_NvPhysicalGpuHandle__ nvGPUHandle, SWIGTYPE_p_unsigned_long pGpuCount) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetPhysicalGPUsFromDisplay(NvDisplayHandle__.getCPtr(hNvDisp), hNvDisp, SWIGTYPE_p_p_NvPhysicalGpuHandle__.getCPtr(nvGPUHandle), SWIGTYPE_p_unsigned_long.getCPtr(pGpuCount)));
  }

  public static NvAPI_Status NvAPI_GetPhysicalGPUFromUnAttachedDisplay(NvUnAttachedDisplayHandle__ hNvUnAttachedDisp, SWIGTYPE_p_p_NvPhysicalGpuHandle__ pPhysicalGpu) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetPhysicalGPUFromUnAttachedDisplay(NvUnAttachedDisplayHandle__.getCPtr(hNvUnAttachedDisp), hNvUnAttachedDisp, SWIGTYPE_p_p_NvPhysicalGpuHandle__.getCPtr(pPhysicalGpu)));
  }

  public static NvAPI_Status NvAPI_GetLogicalGPUFromDisplay(NvDisplayHandle__ hNvDisp, SWIGTYPE_p_p_NvLogicalGpuHandle__ pLogicalGPU) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetLogicalGPUFromDisplay(NvDisplayHandle__.getCPtr(hNvDisp), hNvDisp, SWIGTYPE_p_p_NvLogicalGpuHandle__.getCPtr(pLogicalGPU)));
  }

  public static NvAPI_Status NvAPI_GetLogicalGPUFromPhysicalGPU(NvPhysicalGpuHandle__ hPhysicalGPU, SWIGTYPE_p_p_NvLogicalGpuHandle__ pLogicalGPU) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetLogicalGPUFromPhysicalGPU(NvPhysicalGpuHandle__.getCPtr(hPhysicalGPU), hPhysicalGPU, SWIGTYPE_p_p_NvLogicalGpuHandle__.getCPtr(pLogicalGPU)));
  }

  public static NvAPI_Status NvAPI_GetPhysicalGPUsFromLogicalGPU(NvLogicalGpuHandle__ hLogicalGPU, SWIGTYPE_p_p_NvPhysicalGpuHandle__ hPhysicalGPU, SWIGTYPE_p_unsigned_long pGpuCount) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetPhysicalGPUsFromLogicalGPU(NvLogicalGpuHandle__.getCPtr(hLogicalGPU), hLogicalGPU, SWIGTYPE_p_p_NvPhysicalGpuHandle__.getCPtr(hPhysicalGPU), SWIGTYPE_p_unsigned_long.getCPtr(pGpuCount)));
  }

  public static NvAPI_Status NvAPI_GPU_GetGpuCoreCount(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pCount) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetGpuCoreCount(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pCount)));
  }

  public static NvAPI_Status NvAPI_GPU_GetAllOutputs(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pOutputsMask) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetAllOutputs(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pOutputsMask)));
  }

  public static NvAPI_Status NvAPI_GPU_GetConnectedOutputs(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pOutputsMask) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetConnectedOutputs(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pOutputsMask)));
  }

  public static NvAPI_Status NvAPI_GPU_GetConnectedSLIOutputs(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pOutputsMask) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetConnectedSLIOutputs(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pOutputsMask)));
  }

  public static NvAPI_Status NvAPI_GPU_GetConnectedDisplayIds(NvPhysicalGpuHandle__ hPhysicalGpu, NV_GPU_DISPLAYIDS pDisplayIds, SWIGTYPE_p_unsigned_long pDisplayIdCount, long flags) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetConnectedDisplayIds(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, NV_GPU_DISPLAYIDS.getCPtr(pDisplayIds), pDisplayIds, SWIGTYPE_p_unsigned_long.getCPtr(pDisplayIdCount), flags));
  }

  public static NvAPI_Status NvAPI_GPU_GetAllDisplayIds(NvPhysicalGpuHandle__ hPhysicalGpu, NV_GPU_DISPLAYIDS pDisplayIds, SWIGTYPE_p_unsigned_long pDisplayIdCount) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetAllDisplayIds(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, NV_GPU_DISPLAYIDS.getCPtr(pDisplayIds), pDisplayIds, SWIGTYPE_p_unsigned_long.getCPtr(pDisplayIdCount)));
  }

  public static NvAPI_Status NvAPI_GPU_GetConnectedOutputsWithLidState(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pOutputsMask) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetConnectedOutputsWithLidState(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pOutputsMask)));
  }

  public static NvAPI_Status NvAPI_GPU_GetConnectedSLIOutputsWithLidState(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pOutputsMask) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetConnectedSLIOutputsWithLidState(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pOutputsMask)));
  }

  public static NvAPI_Status NvAPI_GPU_GetSystemType(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_NV_SYSTEM_TYPE pSystemType) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetSystemType(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_NV_SYSTEM_TYPE.getCPtr(pSystemType)));
  }

  public static NvAPI_Status NvAPI_GPU_GetActiveOutputs(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pOutputsMask) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetActiveOutputs(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pOutputsMask)));
  }

  public static NvAPI_Status NvAPI_GPU_SetEDID(NvPhysicalGpuHandle__ hPhysicalGpu, long displayOutputId, NV_EDID_V3 pEDID) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_SetEDID(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, displayOutputId, NV_EDID_V3.getCPtr(pEDID), pEDID));
  }

  public static NvAPI_Status NvAPI_GPU_GetOutputType(NvPhysicalGpuHandle__ hPhysicalGpu, long outputId, SWIGTYPE_p__NV_GPU_OUTPUT_TYPE pOutputType) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetOutputType(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, outputId, SWIGTYPE_p__NV_GPU_OUTPUT_TYPE.getCPtr(pOutputType)));
  }

  public static NvAPI_Status NvAPI_GPU_ValidateOutputCombination(NvPhysicalGpuHandle__ hPhysicalGpu, long outputsMask) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_ValidateOutputCombination(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, outputsMask));
  }

  public static NvAPI_Status NvAPI_GPU_GetFullName(NvPhysicalGpuHandle__ hPhysicalGpu, String szName) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetFullName(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, szName));
  }

  public static NvAPI_Status NvAPI_GPU_GetPCIIdentifiers(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pDeviceId, SWIGTYPE_p_unsigned_long pSubSystemId, SWIGTYPE_p_unsigned_long pRevisionId, SWIGTYPE_p_unsigned_long pExtDeviceId) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetPCIIdentifiers(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pDeviceId), SWIGTYPE_p_unsigned_long.getCPtr(pSubSystemId), SWIGTYPE_p_unsigned_long.getCPtr(pRevisionId), SWIGTYPE_p_unsigned_long.getCPtr(pExtDeviceId)));
  }

  public static NvAPI_Status NvAPI_GPU_GetGPUType(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p__NV_GPU_TYPE pGpuType) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetGPUType(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p__NV_GPU_TYPE.getCPtr(pGpuType)));
  }

  public static NvAPI_Status NvAPI_GPU_GetBusType(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p__NV_GPU_BUS_TYPE pBusType) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetBusType(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p__NV_GPU_BUS_TYPE.getCPtr(pBusType)));
  }

  public static NvAPI_Status NvAPI_GPU_GetBusId(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pBusId) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetBusId(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pBusId)));
  }

  public static NvAPI_Status NvAPI_GPU_GetBusSlotId(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pBusSlotId) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetBusSlotId(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pBusSlotId)));
  }

  public static NvAPI_Status NvAPI_GPU_GetIRQ(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pIRQ) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetIRQ(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pIRQ)));
  }

  public static NvAPI_Status NvAPI_GPU_GetVbiosRevision(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pBiosRevision) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetVbiosRevision(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pBiosRevision)));
  }

  public static NvAPI_Status NvAPI_GPU_GetVbiosOEMRevision(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pBiosRevision) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetVbiosOEMRevision(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pBiosRevision)));
  }

  public static NvAPI_Status NvAPI_GPU_GetVbiosVersionString(NvPhysicalGpuHandle__ hPhysicalGpu, String szBiosRevision) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetVbiosVersionString(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, szBiosRevision));
  }

  public static NvAPI_Status NvAPI_GPU_GetAGPAperture(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pSize) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetAGPAperture(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pSize)));
  }

  public static NvAPI_Status NvAPI_GPU_GetCurrentAGPRate(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pRate) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetCurrentAGPRate(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pRate)));
  }

  public static NvAPI_Status NvAPI_GPU_GetCurrentPCIEDownstreamWidth(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pWidth) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetCurrentPCIEDownstreamWidth(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pWidth)));
  }

  public static NvAPI_Status NvAPI_GPU_GetPhysicalFrameBufferSize(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pSize) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetPhysicalFrameBufferSize(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pSize)));
  }

  public static NvAPI_Status NvAPI_GPU_GetVirtualFrameBufferSize(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pSize) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetVirtualFrameBufferSize(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pSize)));
  }

  public static NvAPI_Status NvAPI_GPU_GetBoardInfo(NvPhysicalGpuHandle__ hPhysicalGpu, NV_BOARD_INFO_V1 pBoardInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetBoardInfo(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, NV_BOARD_INFO_V1.getCPtr(pBoardInfo), pBoardInfo));
  }

  public static NvAPI_Status NvAPI_GPU_GetAllClockFrequencies(NvPhysicalGpuHandle__ hPhysicalGPU, NV_GPU_CLOCK_FREQUENCIES_V2 pClkFreqs) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetAllClockFrequencies(NvPhysicalGpuHandle__.getCPtr(hPhysicalGPU), hPhysicalGPU, NV_GPU_CLOCK_FREQUENCIES_V2.getCPtr(pClkFreqs), pClkFreqs));
  }

  public static NvAPI_Status NvAPI_GPU_GetPstatesInfoEx(NvPhysicalGpuHandle__ hPhysicalGpu, NV_GPU_PERF_PSTATES_INFO_V2 pPerfPstatesInfo, long inputFlags) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetPstatesInfoEx(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, NV_GPU_PERF_PSTATES_INFO_V2.getCPtr(pPerfPstatesInfo), pPerfPstatesInfo, inputFlags));
  }

  public static NvAPI_Status NvAPI_GPU_GetPstates20(NvPhysicalGpuHandle__ hPhysicalGpu, NV_GPU_PERF_PSTATES20_INFO_V2 pPstatesInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetPstates20(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, NV_GPU_PERF_PSTATES20_INFO_V2.getCPtr(pPstatesInfo), pPstatesInfo));
  }

  public static NvAPI_Status NvAPI_GPU_GetCurrentPstate(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p__NV_GPU_PERF_PSTATE_ID pCurrentPstate) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetCurrentPstate(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p__NV_GPU_PERF_PSTATE_ID.getCPtr(pCurrentPstate)));
  }

  public static NvAPI_Status NvAPI_GPU_GetDynamicPstatesInfoEx(NvPhysicalGpuHandle__ hPhysicalGpu, NV_GPU_DYNAMIC_PSTATES_INFO_EX pDynamicPstatesInfoEx) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetDynamicPstatesInfoEx(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, NV_GPU_DYNAMIC_PSTATES_INFO_EX.getCPtr(pDynamicPstatesInfoEx), pDynamicPstatesInfoEx));
  }

  public static NvAPI_Status NvAPI_GPU_GetThermalSettings(NvPhysicalGpuHandle__ hPhysicalGpu, long sensorIndex, NV_GPU_THERMAL_SETTINGS_V2 pThermalSettings) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetThermalSettings(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, sensorIndex, NV_GPU_THERMAL_SETTINGS_V2.getCPtr(pThermalSettings), pThermalSettings));
  }

  public static NvAPI_Status NvAPI_I2CRead(NvPhysicalGpuHandle__ hPhysicalGpu, NV_I2C_INFO_V3 pI2cInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_I2CRead(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, NV_I2C_INFO_V3.getCPtr(pI2cInfo), pI2cInfo));
  }

  public static NvAPI_Status NvAPI_I2CWrite(NvPhysicalGpuHandle__ hPhysicalGpu, NV_I2C_INFO_V3 pI2cInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_I2CWrite(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, NV_I2C_INFO_V3.getCPtr(pI2cInfo), pI2cInfo));
  }

  public static NvAPI_Status NvAPI_GPU_WorkstationFeatureSetup(NvPhysicalGpuHandle__ hPhysicalGpu, long featureEnableMask, long featureDisableMask) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_WorkstationFeatureSetup(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, featureEnableMask, featureDisableMask));
  }

  public static NvAPI_Status NvAPI_GPU_WorkstationFeatureQuery(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pConfiguredFeatureMask, SWIGTYPE_p_unsigned_long pConsistentFeatureMask) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_WorkstationFeatureQuery(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pConfiguredFeatureMask), SWIGTYPE_p_unsigned_long.getCPtr(pConsistentFeatureMask)));
  }

  public static NvAPI_Status NvAPI_GPU_GetHDCPSupportStatus(NvPhysicalGpuHandle__ hPhysicalGpu, NV_GPU_GET_HDCP_SUPPORT_STATUS pGetHDCPSupportStatus) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetHDCPSupportStatus(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, NV_GPU_GET_HDCP_SUPPORT_STATUS.getCPtr(pGetHDCPSupportStatus), pGetHDCPSupportStatus));
  }

  public static NvAPI_Status NvAPI_GPU_GetTachReading(NvPhysicalGpuHandle__ hPhysicalGPU, SWIGTYPE_p_unsigned_long pValue) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetTachReading(NvPhysicalGpuHandle__.getCPtr(hPhysicalGPU), hPhysicalGPU, SWIGTYPE_p_unsigned_long.getCPtr(pValue)));
  }

  public static NvAPI_Status NvAPI_GPU_GetECCStatusInfo(NvPhysicalGpuHandle__ hPhysicalGpu, NV_GPU_ECC_STATUS_INFO pECCStatusInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetECCStatusInfo(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, NV_GPU_ECC_STATUS_INFO.getCPtr(pECCStatusInfo), pECCStatusInfo));
  }

  public static NvAPI_Status NvAPI_GPU_GetECCErrorInfo(NvPhysicalGpuHandle__ hPhysicalGpu, NV_GPU_ECC_ERROR_INFO pECCErrorInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetECCErrorInfo(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, NV_GPU_ECC_ERROR_INFO.getCPtr(pECCErrorInfo), pECCErrorInfo));
  }

  public static NvAPI_Status NvAPI_GPU_ResetECCErrorInfo(NvPhysicalGpuHandle__ hPhysicalGpu, short bResetCurrent, short bResetAggregate) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_ResetECCErrorInfo(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, bResetCurrent, bResetAggregate));
  }

  public static NvAPI_Status NvAPI_GPU_GetECCConfigurationInfo(NvPhysicalGpuHandle__ hPhysicalGpu, NV_GPU_ECC_CONFIGURATION_INFO pECCConfigurationInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetECCConfigurationInfo(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, NV_GPU_ECC_CONFIGURATION_INFO.getCPtr(pECCConfigurationInfo), pECCConfigurationInfo));
  }

  public static NvAPI_Status NvAPI_GPU_SetECCConfiguration(NvPhysicalGpuHandle__ hPhysicalGpu, short bEnable, short bEnableImmediately) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_SetECCConfiguration(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, bEnable, bEnableImmediately));
  }

  public static NvAPI_Status NvAPI_GPU_SetScanoutIntensity(long displayId, NV_SCANOUT_INTENSITY_DATA_V2 scanoutIntensityData, int[] pbSticky) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_SetScanoutIntensity(displayId, NV_SCANOUT_INTENSITY_DATA_V2.getCPtr(scanoutIntensityData), scanoutIntensityData, pbSticky));
  }

  public static NvAPI_Status NvAPI_GPU_GetScanoutIntensityState(long displayId, NV_SCANOUT_INTENSITY_STATE_DATA scanoutIntensityStateData) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetScanoutIntensityState(displayId, NV_SCANOUT_INTENSITY_STATE_DATA.getCPtr(scanoutIntensityStateData), scanoutIntensityStateData));
  }

  public static NvAPI_Status NvAPI_GPU_SetScanoutWarping(long displayId, NV_SCANOUT_WARPING_DATA scanoutWarpingData, int[] piMaxNumVertices, int[] pbSticky) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_SetScanoutWarping(displayId, NV_SCANOUT_WARPING_DATA.getCPtr(scanoutWarpingData), scanoutWarpingData, piMaxNumVertices, pbSticky));
  }

  public static NvAPI_Status NvAPI_GPU_GetScanoutWarpingState(long displayId, NV_SCANOUT_WARPING_STATE_DATA scanoutWarpingStateData) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetScanoutWarpingState(displayId, NV_SCANOUT_WARPING_STATE_DATA.getCPtr(scanoutWarpingStateData), scanoutWarpingStateData));
  }

  public static NvAPI_Status NvAPI_GPU_GetScanoutConfiguration(long displayId, NvSBox desktopRect, NvSBox scanoutRect) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetScanoutConfiguration(displayId, NvSBox.getCPtr(desktopRect), desktopRect, NvSBox.getCPtr(scanoutRect), scanoutRect));
  }

  public static NvAPI_Status NvAPI_GPU_GetScanoutConfigurationEx(long displayId, NV_SCANOUT_INFORMATION pScanoutInformation) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetScanoutConfigurationEx(displayId, NV_SCANOUT_INFORMATION.getCPtr(pScanoutInformation), pScanoutInformation));
  }

  public static NvAPI_Status NvAPI_GPU_GetPerfDecreaseInfo(NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long pPerfDecrInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetPerfDecreaseInfo(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, SWIGTYPE_p_unsigned_long.getCPtr(pPerfDecrInfo)));
  }

  public static NvAPI_Status NvAPI_GPU_QueryIlluminationSupport(NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1 pIlluminationSupportInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_QueryIlluminationSupport(NV_GPU_QUERY_ILLUMINATION_SUPPORT_PARM_V1.getCPtr(pIlluminationSupportInfo), pIlluminationSupportInfo));
  }

  public static NvAPI_Status NvAPI_GPU_GetIllumination(NV_GPU_GET_ILLUMINATION_PARM_V1 pIlluminationInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_GetIllumination(NV_GPU_GET_ILLUMINATION_PARM_V1.getCPtr(pIlluminationInfo), pIlluminationInfo));
  }

  public static NvAPI_Status NvAPI_GPU_SetIllumination(NV_GPU_SET_ILLUMINATION_PARM_V1 pIlluminationInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GPU_SetIllumination(NV_GPU_SET_ILLUMINATION_PARM_V1.getCPtr(pIlluminationInfo), pIlluminationInfo));
  }

  public static NvAPI_Status NvAPI_EnumNvidiaDisplayHandle(long thisEnum, SWIGTYPE_p_p_NvDisplayHandle__ pNvDispHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_EnumNvidiaDisplayHandle(thisEnum, SWIGTYPE_p_p_NvDisplayHandle__.getCPtr(pNvDispHandle)));
  }

  public static NvAPI_Status NvAPI_EnumNvidiaUnAttachedDisplayHandle(long thisEnum, SWIGTYPE_p_p_NvUnAttachedDisplayHandle__ pNvUnAttachedDispHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_EnumNvidiaUnAttachedDisplayHandle(thisEnum, SWIGTYPE_p_p_NvUnAttachedDisplayHandle__.getCPtr(pNvUnAttachedDispHandle)));
  }

  public static NvAPI_Status NvAPI_CreateDisplayFromUnAttachedDisplay(NvUnAttachedDisplayHandle__ hNvUnAttachedDisp, SWIGTYPE_p_p_NvDisplayHandle__ pNvDisplay) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_CreateDisplayFromUnAttachedDisplay(NvUnAttachedDisplayHandle__.getCPtr(hNvUnAttachedDisp), hNvUnAttachedDisp, SWIGTYPE_p_p_NvDisplayHandle__.getCPtr(pNvDisplay)));
  }

  public static NvAPI_Status NvAPI_GetAssociatedNvidiaDisplayHandle(String szDisplayName, SWIGTYPE_p_p_NvDisplayHandle__ pNvDispHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetAssociatedNvidiaDisplayHandle(szDisplayName, SWIGTYPE_p_p_NvDisplayHandle__.getCPtr(pNvDispHandle)));
  }

  public static NvAPI_Status NvAPI_DISP_GetAssociatedUnAttachedNvidiaDisplayHandle(String szDisplayName, SWIGTYPE_p_p_NvUnAttachedDisplayHandle__ pNvUnAttachedDispHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DISP_GetAssociatedUnAttachedNvidiaDisplayHandle(szDisplayName, SWIGTYPE_p_p_NvUnAttachedDisplayHandle__.getCPtr(pNvUnAttachedDispHandle)));
  }

  public static NvAPI_Status NvAPI_GetAssociatedNvidiaDisplayName(NvDisplayHandle__ NvDispHandle, String szDisplayName) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetAssociatedNvidiaDisplayName(NvDisplayHandle__.getCPtr(NvDispHandle), NvDispHandle, szDisplayName));
  }

  public static NvAPI_Status NvAPI_GetUnAttachedAssociatedDisplayName(NvUnAttachedDisplayHandle__ hNvUnAttachedDisp, String szDisplayName) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetUnAttachedAssociatedDisplayName(NvUnAttachedDisplayHandle__.getCPtr(hNvUnAttachedDisp), hNvUnAttachedDisp, szDisplayName));
  }

  public static NvAPI_Status NvAPI_EnableHWCursor(NvDisplayHandle__ hNvDisplay) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_EnableHWCursor(NvDisplayHandle__.getCPtr(hNvDisplay), hNvDisplay));
  }

  public static NvAPI_Status NvAPI_DisableHWCursor(NvDisplayHandle__ hNvDisplay) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DisableHWCursor(NvDisplayHandle__.getCPtr(hNvDisplay), hNvDisplay));
  }

  public static NvAPI_Status NvAPI_GetVBlankCounter(NvDisplayHandle__ hNvDisplay, SWIGTYPE_p_unsigned_long pCounter) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetVBlankCounter(NvDisplayHandle__.getCPtr(hNvDisplay), hNvDisplay, SWIGTYPE_p_unsigned_long.getCPtr(pCounter)));
  }

  public static NvAPI_Status NvAPI_SetRefreshRateOverride(NvDisplayHandle__ hNvDisplay, long outputsMask, float refreshRate, long bSetDeferred) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_SetRefreshRateOverride(NvDisplayHandle__.getCPtr(hNvDisplay), hNvDisplay, outputsMask, refreshRate, bSetDeferred));
  }

  public static NvAPI_Status NvAPI_GetAssociatedDisplayOutputId(NvDisplayHandle__ hNvDisplay, SWIGTYPE_p_unsigned_long pOutputId) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetAssociatedDisplayOutputId(NvDisplayHandle__.getCPtr(hNvDisplay), hNvDisplay, SWIGTYPE_p_unsigned_long.getCPtr(pOutputId)));
  }

  public static NvAPI_Status NvAPI_GetDisplayPortInfo(NvDisplayHandle__ hNvDisplay, long outputId, NV_DISPLAY_PORT_INFO pInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetDisplayPortInfo(NvDisplayHandle__.getCPtr(hNvDisplay), hNvDisplay, outputId, NV_DISPLAY_PORT_INFO.getCPtr(pInfo), pInfo));
  }

  public static NvAPI_Status NvAPI_SetDisplayPort(NvDisplayHandle__ hNvDisplay, long outputId, NV_DISPLAY_PORT_CONFIG pCfg) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_SetDisplayPort(NvDisplayHandle__.getCPtr(hNvDisplay), hNvDisplay, outputId, NV_DISPLAY_PORT_CONFIG.getCPtr(pCfg), pCfg));
  }

  public static NvAPI_Status NvAPI_GetHDMISupportInfo(NvDisplayHandle__ hNvDisplay, long outputId, NV_HDMI_SUPPORT_INFO pInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetHDMISupportInfo(NvDisplayHandle__.getCPtr(hNvDisplay), hNvDisplay, outputId, NV_HDMI_SUPPORT_INFO.getCPtr(pInfo), pInfo));
  }

  public static NvAPI_Status NvAPI_Disp_InfoFrameControl(long displayId, NV_INFOFRAME_DATA pInfoframeData) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Disp_InfoFrameControl(displayId, NV_INFOFRAME_DATA.getCPtr(pInfoframeData), pInfoframeData));
  }

  public static NvAPI_Status NvAPI_Disp_ColorControl(long displayId, NV_COLOR_DATA pColorData) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Disp_ColorControl(displayId, NV_COLOR_DATA.getCPtr(pColorData), pColorData));
  }

  public static NvAPI_Status NvAPI_DISP_GetTiming(long displayId, NV_TIMING_INPUT timingInput, NV_TIMING pTiming) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DISP_GetTiming(displayId, NV_TIMING_INPUT.getCPtr(timingInput), timingInput, NV_TIMING.getCPtr(pTiming), pTiming));
  }

  public static NvAPI_Status NvAPI_DISP_GetMonitorCapabilities(long displayId, NV_MONITOR_CAPABILITIES pMonitorCapabilities) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DISP_GetMonitorCapabilities(displayId, NV_MONITOR_CAPABILITIES.getCPtr(pMonitorCapabilities), pMonitorCapabilities));
  }

  public static NvAPI_Status NvAPI_DISP_GetMonitorColorCapabilities(long displayId, NV_MONITOR_COLOR_CAPS_V1 pMonitorColorCapabilities, SWIGTYPE_p_unsigned_long pColorCapsCount) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DISP_GetMonitorColorCapabilities(displayId, NV_MONITOR_COLOR_CAPS_V1.getCPtr(pMonitorColorCapabilities), pMonitorColorCapabilities, SWIGTYPE_p_unsigned_long.getCPtr(pColorCapsCount)));
  }

  public static NvAPI_Status NvAPI_DISP_EnumCustomDisplay(long displayId, long index, NV_CUSTOM_DISPLAY pCustDisp) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DISP_EnumCustomDisplay(displayId, index, NV_CUSTOM_DISPLAY.getCPtr(pCustDisp), pCustDisp));
  }

  public static NvAPI_Status NvAPI_DISP_TryCustomDisplay(SWIGTYPE_p_unsigned_long pDisplayIds, long count, NV_CUSTOM_DISPLAY pCustDisp) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DISP_TryCustomDisplay(SWIGTYPE_p_unsigned_long.getCPtr(pDisplayIds), count, NV_CUSTOM_DISPLAY.getCPtr(pCustDisp), pCustDisp));
  }

  public static NvAPI_Status NvAPI_DISP_DeleteCustomDisplay(SWIGTYPE_p_unsigned_long pDisplayIds, long count, NV_CUSTOM_DISPLAY pCustDisp) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DISP_DeleteCustomDisplay(SWIGTYPE_p_unsigned_long.getCPtr(pDisplayIds), count, NV_CUSTOM_DISPLAY.getCPtr(pCustDisp), pCustDisp));
  }

  public static NvAPI_Status NvAPI_DISP_SaveCustomDisplay(SWIGTYPE_p_unsigned_long pDisplayIds, long count, long isThisOutputIdOnly, long isThisMonitorIdOnly) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DISP_SaveCustomDisplay(SWIGTYPE_p_unsigned_long.getCPtr(pDisplayIds), count, isThisOutputIdOnly, isThisMonitorIdOnly));
  }

  public static NvAPI_Status NvAPI_DISP_RevertCustomDisplayTrial(SWIGTYPE_p_unsigned_long pDisplayIds, long count) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DISP_RevertCustomDisplayTrial(SWIGTYPE_p_unsigned_long.getCPtr(pDisplayIds), count));
  }

  public static NvAPI_Status NvAPI_GetView(NvDisplayHandle__ hNvDisplay, NV_VIEW_TARGET_INFO pTargets, SWIGTYPE_p_unsigned_long pTargetMaskCount, SWIGTYPE_p__NV_TARGET_VIEW_MODE pTargetView) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetView(NvDisplayHandle__.getCPtr(hNvDisplay), hNvDisplay, NV_VIEW_TARGET_INFO.getCPtr(pTargets), pTargets, SWIGTYPE_p_unsigned_long.getCPtr(pTargetMaskCount), SWIGTYPE_p__NV_TARGET_VIEW_MODE.getCPtr(pTargetView)));
  }

  public static NvAPI_Status NvAPI_GetViewEx(NvDisplayHandle__ hNvDisplay, NV_DISPLAY_PATH_INFO pPathInfo, SWIGTYPE_p_unsigned_long pPathCount, SWIGTYPE_p__NV_TARGET_VIEW_MODE pTargetViewMode) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetViewEx(NvDisplayHandle__.getCPtr(hNvDisplay), hNvDisplay, NV_DISPLAY_PATH_INFO.getCPtr(pPathInfo), pPathInfo, SWIGTYPE_p_unsigned_long.getCPtr(pPathCount), SWIGTYPE_p__NV_TARGET_VIEW_MODE.getCPtr(pTargetViewMode)));
  }

  public static NvAPI_Status NvAPI_GetSupportedViews(NvDisplayHandle__ hNvDisplay, SWIGTYPE_p__NV_TARGET_VIEW_MODE pTargetViews, SWIGTYPE_p_unsigned_long pViewCount) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetSupportedViews(NvDisplayHandle__.getCPtr(hNvDisplay), hNvDisplay, SWIGTYPE_p__NV_TARGET_VIEW_MODE.getCPtr(pTargetViews), SWIGTYPE_p_unsigned_long.getCPtr(pViewCount)));
  }

  public static NvAPI_Status NvAPI_DISP_GetDisplayIdByDisplayName(String displayName, SWIGTYPE_p_unsigned_long displayId) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DISP_GetDisplayIdByDisplayName(displayName, SWIGTYPE_p_unsigned_long.getCPtr(displayId)));
  }

  public static NvAPI_Status NvAPI_DISP_GetDisplayConfig(SWIGTYPE_p_unsigned_long pathInfoCount, NV_DISPLAYCONFIG_PATH_INFO_V2 pathInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DISP_GetDisplayConfig(SWIGTYPE_p_unsigned_long.getCPtr(pathInfoCount), NV_DISPLAYCONFIG_PATH_INFO_V2.getCPtr(pathInfo), pathInfo));
  }

  public static NvAPI_Status NvAPI_DISP_SetDisplayConfig(long pathInfoCount, NV_DISPLAYCONFIG_PATH_INFO_V2 pathInfo, long flags) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DISP_SetDisplayConfig(pathInfoCount, NV_DISPLAYCONFIG_PATH_INFO_V2.getCPtr(pathInfo), pathInfo, flags));
  }

  public static NvAPI_Status NvAPI_Mosaic_GetSupportedTopoInfo(NV_MOSAIC_SUPPORTED_TOPO_INFO pSupportedTopoInfo, NV_MOSAIC_TOPO_TYPE type) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Mosaic_GetSupportedTopoInfo(NV_MOSAIC_SUPPORTED_TOPO_INFO.getCPtr(pSupportedTopoInfo), pSupportedTopoInfo, type.swigValue()));
  }

  public static NvAPI_Status NvAPI_Mosaic_GetTopoGroup(NV_MOSAIC_TOPO_BRIEF pTopoBrief, NV_MOSAIC_TOPO_GROUP pTopoGroup) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Mosaic_GetTopoGroup(NV_MOSAIC_TOPO_BRIEF.getCPtr(pTopoBrief), pTopoBrief, NV_MOSAIC_TOPO_GROUP.getCPtr(pTopoGroup), pTopoGroup));
  }

  public static NvAPI_Status NvAPI_Mosaic_GetOverlapLimits(NV_MOSAIC_TOPO_BRIEF pTopoBrief, NV_MOSAIC_DISPLAY_SETTING pDisplaySetting, int[] pMinOverlapX, int[] pMaxOverlapX, int[] pMinOverlapY, int[] pMaxOverlapY) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Mosaic_GetOverlapLimits(NV_MOSAIC_TOPO_BRIEF.getCPtr(pTopoBrief), pTopoBrief, NV_MOSAIC_DISPLAY_SETTING.getCPtr(pDisplaySetting), pDisplaySetting, pMinOverlapX, pMaxOverlapX, pMinOverlapY, pMaxOverlapY));
  }

  public static NvAPI_Status NvAPI_Mosaic_SetCurrentTopo(NV_MOSAIC_TOPO_BRIEF pTopoBrief, NV_MOSAIC_DISPLAY_SETTING pDisplaySetting, int overlapX, int overlapY, long enable) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Mosaic_SetCurrentTopo(NV_MOSAIC_TOPO_BRIEF.getCPtr(pTopoBrief), pTopoBrief, NV_MOSAIC_DISPLAY_SETTING.getCPtr(pDisplaySetting), pDisplaySetting, overlapX, overlapY, enable));
  }

  public static NvAPI_Status NvAPI_Mosaic_GetCurrentTopo(NV_MOSAIC_TOPO_BRIEF pTopoBrief, NV_MOSAIC_DISPLAY_SETTING pDisplaySetting, int[] pOverlapX, int[] pOverlapY) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Mosaic_GetCurrentTopo(NV_MOSAIC_TOPO_BRIEF.getCPtr(pTopoBrief), pTopoBrief, NV_MOSAIC_DISPLAY_SETTING.getCPtr(pDisplaySetting), pDisplaySetting, pOverlapX, pOverlapY));
  }

  public static NvAPI_Status NvAPI_Mosaic_EnableCurrentTopo(long enable) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Mosaic_EnableCurrentTopo(enable));
  }

  public static NvAPI_Status NvAPI_Mosaic_SetDisplayGrids(NV_MOSAIC_GRID_TOPO_V1 pGridTopologies, long gridCount, long setTopoFlags) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Mosaic_SetDisplayGrids(NV_MOSAIC_GRID_TOPO_V1.getCPtr(pGridTopologies), pGridTopologies, gridCount, setTopoFlags));
  }

  public static NvAPI_Status NvAPI_Mosaic_ValidateDisplayGrids(long setTopoFlags, NV_MOSAIC_GRID_TOPO_V1 pGridTopologies, NV_MOSAIC_DISPLAY_TOPO_STATUS pTopoStatus, long gridCount) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Mosaic_ValidateDisplayGrids(setTopoFlags, NV_MOSAIC_GRID_TOPO_V1.getCPtr(pGridTopologies), pGridTopologies, NV_MOSAIC_DISPLAY_TOPO_STATUS.getCPtr(pTopoStatus), pTopoStatus, gridCount));
  }

  public static NvAPI_Status NvAPI_Mosaic_EnumDisplayModes(NV_MOSAIC_GRID_TOPO_V1 pGridTopology, NV_MOSAIC_DISPLAY_SETTING pDisplaySettings, SWIGTYPE_p_unsigned_long pDisplayCount) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Mosaic_EnumDisplayModes(NV_MOSAIC_GRID_TOPO_V1.getCPtr(pGridTopology), pGridTopology, NV_MOSAIC_DISPLAY_SETTING.getCPtr(pDisplaySettings), pDisplaySettings, SWIGTYPE_p_unsigned_long.getCPtr(pDisplayCount)));
  }

  public static NvAPI_Status NvAPI_Mosaic_EnumDisplayGrids(NV_MOSAIC_GRID_TOPO_V1 pGridTopologies, SWIGTYPE_p_unsigned_long pGridCount) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Mosaic_EnumDisplayGrids(NV_MOSAIC_GRID_TOPO_V1.getCPtr(pGridTopologies), pGridTopologies, SWIGTYPE_p_unsigned_long.getCPtr(pGridCount)));
  }

  public static NvAPI_Status NvAPI_GetSupportedMosaicTopologies(NV_MOSAIC_SUPPORTED_TOPOLOGIES pMosaicTopos) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetSupportedMosaicTopologies(NV_MOSAIC_SUPPORTED_TOPOLOGIES.getCPtr(pMosaicTopos), pMosaicTopos));
  }

  public static NvAPI_Status NvAPI_GetCurrentMosaicTopology(NV_MOSAIC_TOPOLOGY pMosaicTopo, SWIGTYPE_p_unsigned_long pEnabled) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GetCurrentMosaicTopology(NV_MOSAIC_TOPOLOGY.getCPtr(pMosaicTopo), pMosaicTopo, SWIGTYPE_p_unsigned_long.getCPtr(pEnabled)));
  }

  public static NvAPI_Status NvAPI_SetCurrentMosaicTopology(NV_MOSAIC_TOPOLOGY pMosaicTopo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_SetCurrentMosaicTopology(NV_MOSAIC_TOPOLOGY.getCPtr(pMosaicTopo), pMosaicTopo));
  }

  public static NvAPI_Status NvAPI_EnableCurrentMosaicTopology(long enable) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_EnableCurrentMosaicTopology(enable));
  }

  public static NvAPI_Status NvAPI_GSync_EnumSyncDevices(SWIGTYPE_p_p_NvGSyncDeviceHandle__ nvGSyncHandles, SWIGTYPE_p_unsigned_long gsyncCount) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GSync_EnumSyncDevices(SWIGTYPE_p_p_NvGSyncDeviceHandle__.getCPtr(nvGSyncHandles), SWIGTYPE_p_unsigned_long.getCPtr(gsyncCount)));
  }

  public static NvAPI_Status NvAPI_GSync_QueryCapabilities(NvGSyncDeviceHandle__ hNvGSyncDevice, NV_GSYNC_CAPABILITIES pNvGSyncCapabilities) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GSync_QueryCapabilities(NvGSyncDeviceHandle__.getCPtr(hNvGSyncDevice), hNvGSyncDevice, NV_GSYNC_CAPABILITIES.getCPtr(pNvGSyncCapabilities), pNvGSyncCapabilities));
  }

  public static NvAPI_Status NvAPI_GSync_GetTopology(NvGSyncDeviceHandle__ hNvGSyncDevice, SWIGTYPE_p_unsigned_long gsyncGpuCount, NV_GSYNC_GPU gsyncGPUs, SWIGTYPE_p_unsigned_long gsyncDisplayCount, NV_GSYNC_DISPLAY gsyncDisplays) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GSync_GetTopology(NvGSyncDeviceHandle__.getCPtr(hNvGSyncDevice), hNvGSyncDevice, SWIGTYPE_p_unsigned_long.getCPtr(gsyncGpuCount), NV_GSYNC_GPU.getCPtr(gsyncGPUs), gsyncGPUs, SWIGTYPE_p_unsigned_long.getCPtr(gsyncDisplayCount), NV_GSYNC_DISPLAY.getCPtr(gsyncDisplays), gsyncDisplays));
  }

  public static NvAPI_Status NvAPI_GSync_SetSyncStateSettings(long gsyncDisplayCount, NV_GSYNC_DISPLAY pGsyncDisplays, long flags) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GSync_SetSyncStateSettings(gsyncDisplayCount, NV_GSYNC_DISPLAY.getCPtr(pGsyncDisplays), pGsyncDisplays, flags));
  }

  public static NvAPI_Status NvAPI_GSync_GetControlParameters(NvGSyncDeviceHandle__ hNvGSyncDevice, NV_GSYNC_CONTROL_PARAMS pGsyncControls) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GSync_GetControlParameters(NvGSyncDeviceHandle__.getCPtr(hNvGSyncDevice), hNvGSyncDevice, NV_GSYNC_CONTROL_PARAMS.getCPtr(pGsyncControls), pGsyncControls));
  }

  public static NvAPI_Status NvAPI_GSync_SetControlParameters(NvGSyncDeviceHandle__ hNvGSyncDevice, NV_GSYNC_CONTROL_PARAMS pGsyncControls) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GSync_SetControlParameters(NvGSyncDeviceHandle__.getCPtr(hNvGSyncDevice), hNvGSyncDevice, NV_GSYNC_CONTROL_PARAMS.getCPtr(pGsyncControls), pGsyncControls));
  }

  public static NvAPI_Status NvAPI_GSync_AdjustSyncDelay(NvGSyncDeviceHandle__ hNvGSyncDevice, NVAPI_GSYNC_DELAY_TYPE delayType, NV_GSYNC_DELAY pGsyncDelay, SWIGTYPE_p_unsigned_long syncSteps) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GSync_AdjustSyncDelay(NvGSyncDeviceHandle__.getCPtr(hNvGSyncDevice), hNvGSyncDevice, delayType.swigValue(), NV_GSYNC_DELAY.getCPtr(pGsyncDelay), pGsyncDelay, SWIGTYPE_p_unsigned_long.getCPtr(syncSteps)));
  }

  public static NvAPI_Status NvAPI_GSync_GetSyncStatus(NvGSyncDeviceHandle__ hNvGSyncDevice, NvPhysicalGpuHandle__ hPhysicalGpu, NV_GSYNC_STATUS status) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GSync_GetSyncStatus(NvGSyncDeviceHandle__.getCPtr(hNvGSyncDevice), hNvGSyncDevice, NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, NV_GSYNC_STATUS.getCPtr(status), status));
  }

  public static NvAPI_Status NvAPI_GSync_GetStatusParameters(NvGSyncDeviceHandle__ hNvGSyncDevice, NV_GSYNC_STATUS_PARAMS pStatusParams) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_GSync_GetStatusParameters(NvGSyncDeviceHandle__.getCPtr(hNvGSyncDevice), hNvGSyncDevice, NV_GSYNC_STATUS_PARAMS.getCPtr(pStatusParams), pStatusParams));
  }

  public static NvAPI_Status NvAPI_VIO_GetCapabilities(NvVioHandle__ hVioHandle, NVVIOCAPS pAdapterCaps) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_GetCapabilities(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, NVVIOCAPS.getCPtr(pAdapterCaps), pAdapterCaps));
  }

  public static NvAPI_Status NvAPI_VIO_Open(NvVioHandle__ hVioHandle, long vioClass, NVVIOOWNERTYPE ownerType) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_Open(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, vioClass, ownerType.swigValue()));
  }

  public static NvAPI_Status NvAPI_VIO_Close(NvVioHandle__ hVioHandle, long bRelease) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_Close(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, bRelease));
  }

  public static NvAPI_Status NvAPI_VIO_Status(NvVioHandle__ hVioHandle, NVVIOSTATUS pStatus) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_Status(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, NVVIOSTATUS.getCPtr(pStatus), pStatus));
  }

  public static NvAPI_Status NvAPI_VIO_SyncFormatDetect(NvVioHandle__ hVioHandle, SWIGTYPE_p_unsigned_long pWait) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_SyncFormatDetect(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, SWIGTYPE_p_unsigned_long.getCPtr(pWait)));
  }

  public static NvAPI_Status NvAPI_VIO_GetConfig(NvVioHandle__ hVioHandle, NVVIOCONFIG_V3 pConfig) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_GetConfig(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, NVVIOCONFIG_V3.getCPtr(pConfig), pConfig));
  }

  public static NvAPI_Status NvAPI_VIO_SetConfig(NvVioHandle__ hVioHandle, NVVIOCONFIG_V3 pConfig) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_SetConfig(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, NVVIOCONFIG_V3.getCPtr(pConfig), pConfig));
  }

  public static NvAPI_Status NvAPI_VIO_SetCSC(NvVioHandle__ hVioHandle, NVVIOCOLORCONVERSION pCSC) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_SetCSC(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, NVVIOCOLORCONVERSION.getCPtr(pCSC), pCSC));
  }

  public static NvAPI_Status NvAPI_VIO_GetCSC(NvVioHandle__ hVioHandle, NVVIOCOLORCONVERSION pCSC) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_GetCSC(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, NVVIOCOLORCONVERSION.getCPtr(pCSC), pCSC));
  }

  public static NvAPI_Status NvAPI_VIO_SetGamma(NvVioHandle__ hVioHandle, NVVIOGAMMACORRECTION pGamma) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_SetGamma(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, NVVIOGAMMACORRECTION.getCPtr(pGamma), pGamma));
  }

  public static NvAPI_Status NvAPI_VIO_GetGamma(NvVioHandle__ hVioHandle, NVVIOGAMMACORRECTION pGamma) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_GetGamma(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, NVVIOGAMMACORRECTION.getCPtr(pGamma), pGamma));
  }

  public static NvAPI_Status NvAPI_VIO_SetSyncDelay(NvVioHandle__ hVioHandle, NVVIOSYNCDELAY pSyncDelay) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_SetSyncDelay(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, NVVIOSYNCDELAY.getCPtr(pSyncDelay), pSyncDelay));
  }

  public static NvAPI_Status NvAPI_VIO_GetSyncDelay(NvVioHandle__ hVioHandle, NVVIOSYNCDELAY pSyncDelay) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_GetSyncDelay(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, NVVIOSYNCDELAY.getCPtr(pSyncDelay), pSyncDelay));
  }

  public static NvAPI_Status NvAPI_VIO_GetPCIInfo(NvVioHandle__ hVioHandle, NVVIOPCIINFO_V1 pVioPCIInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_GetPCIInfo(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, NVVIOPCIINFO_V1.getCPtr(pVioPCIInfo), pVioPCIInfo));
  }

  public static NvAPI_Status NvAPI_VIO_IsRunning(NvVioHandle__ hVioHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_IsRunning(NvVioHandle__.getCPtr(hVioHandle), hVioHandle));
  }

  public static NvAPI_Status NvAPI_VIO_Start(NvVioHandle__ hVioHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_Start(NvVioHandle__.getCPtr(hVioHandle), hVioHandle));
  }

  public static NvAPI_Status NvAPI_VIO_Stop(NvVioHandle__ hVioHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_Stop(NvVioHandle__.getCPtr(hVioHandle), hVioHandle));
  }

  public static NvAPI_Status NvAPI_VIO_IsFrameLockModeCompatible(NvVioHandle__ hVioHandle, long srcEnumIndex, long destEnumIndex, SWIGTYPE_p_unsigned_long pbCompatible) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_IsFrameLockModeCompatible(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, srcEnumIndex, destEnumIndex, SWIGTYPE_p_unsigned_long.getCPtr(pbCompatible)));
  }

  public static NvAPI_Status NvAPI_VIO_EnumDevices(SWIGTYPE_p_p_NvVioHandle__ hVioHandle, SWIGTYPE_p_unsigned_long vioDeviceCount) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_EnumDevices(SWIGTYPE_p_p_NvVioHandle__.getCPtr(hVioHandle), SWIGTYPE_p_unsigned_long.getCPtr(vioDeviceCount)));
  }

  public static NvAPI_Status NvAPI_VIO_QueryTopology(NV_VIO_TOPOLOGY pNvVIOTopology) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_QueryTopology(NV_VIO_TOPOLOGY.getCPtr(pNvVIOTopology), pNvVIOTopology));
  }

  public static NvAPI_Status NvAPI_VIO_EnumSignalFormats(NvVioHandle__ hVioHandle, long enumIndex, NVVIOSIGNALFORMATDETAIL pSignalFormatDetail) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_EnumSignalFormats(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, enumIndex, NVVIOSIGNALFORMATDETAIL.getCPtr(pSignalFormatDetail), pSignalFormatDetail));
  }

  public static NvAPI_Status NvAPI_VIO_EnumDataFormats(NvVioHandle__ hVioHandle, long enumIndex, NVVIODATAFORMATDETAIL pDataFormatDetail) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_VIO_EnumDataFormats(NvVioHandle__.getCPtr(hVioHandle), hVioHandle, enumIndex, NVVIODATAFORMATDETAIL.getCPtr(pDataFormatDetail), pDataFormatDetail));
  }

  public static NvAPI_Status NvAPI_Stereo_CreateConfigurationProfileRegistryKey(NV_STEREO_REGISTRY_PROFILE_TYPE registryProfileType) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_CreateConfigurationProfileRegistryKey(registryProfileType.swigValue()));
  }

  public static NvAPI_Status NvAPI_Stereo_DeleteConfigurationProfileRegistryKey(NV_STEREO_REGISTRY_PROFILE_TYPE registryProfileType) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_DeleteConfigurationProfileRegistryKey(registryProfileType.swigValue()));
  }

  public static NvAPI_Status NvAPI_Stereo_SetConfigurationProfileValue(NV_STEREO_REGISTRY_PROFILE_TYPE registryProfileType, NV_STEREO_REGISTRY_ID valueRegistryID, SWIGTYPE_p_void pValue) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_SetConfigurationProfileValue(registryProfileType.swigValue(), valueRegistryID.swigValue(), SWIGTYPE_p_void.getCPtr(pValue)));
  }

  public static NvAPI_Status NvAPI_Stereo_DeleteConfigurationProfileValue(NV_STEREO_REGISTRY_PROFILE_TYPE registryProfileType, NV_STEREO_REGISTRY_ID valueRegistryID) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_DeleteConfigurationProfileValue(registryProfileType.swigValue(), valueRegistryID.swigValue()));
  }

  public static NvAPI_Status NvAPI_Stereo_GetStereoSupport(NvMonitorHandle__ hMonitor, NVAPI_STEREO_CAPS_V1 pCaps) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_GetStereoSupport(NvMonitorHandle__.getCPtr(hMonitor), hMonitor, NVAPI_STEREO_CAPS_V1.getCPtr(pCaps), pCaps));
  }

  public static NvAPI_Status NvAPI_Stereo_DecreaseSeparation(SWIGTYPE_p_void stereoHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_DecreaseSeparation(SWIGTYPE_p_void.getCPtr(stereoHandle)));
  }

  public static NvAPI_Status NvAPI_Stereo_IncreaseSeparation(SWIGTYPE_p_void stereoHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_IncreaseSeparation(SWIGTYPE_p_void.getCPtr(stereoHandle)));
  }

  public static NvAPI_Status NvAPI_Stereo_DecreaseConvergence(SWIGTYPE_p_void stereoHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_DecreaseConvergence(SWIGTYPE_p_void.getCPtr(stereoHandle)));
  }

  public static NvAPI_Status NvAPI_Stereo_IncreaseConvergence(SWIGTYPE_p_void stereoHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_IncreaseConvergence(SWIGTYPE_p_void.getCPtr(stereoHandle)));
  }

  public static NvAPI_Status NvAPI_Stereo_GetFrustumAdjustMode(SWIGTYPE_p_void stereoHandle, SWIGTYPE_p__NV_FrustumAdjustMode pFrustumAdjustMode) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_GetFrustumAdjustMode(SWIGTYPE_p_void.getCPtr(stereoHandle), SWIGTYPE_p__NV_FrustumAdjustMode.getCPtr(pFrustumAdjustMode)));
  }

  public static NvAPI_Status NvAPI_Stereo_SetFrustumAdjustMode(SWIGTYPE_p_void stereoHandle, NV_FRUSTUM_ADJUST_MODE newFrustumAdjustModeValue) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_SetFrustumAdjustMode(SWIGTYPE_p_void.getCPtr(stereoHandle), newFrustumAdjustModeValue.swigValue()));
  }

  public static NvAPI_Status NvAPI_Stereo_CaptureJpegImage(SWIGTYPE_p_void stereoHandle, long quality) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_CaptureJpegImage(SWIGTYPE_p_void.getCPtr(stereoHandle), quality));
  }

  public static NvAPI_Status NvAPI_Stereo_InitActivation(SWIGTYPE_p_void hStereoHandle, NVAPI_STEREO_INIT_ACTIVATION_FLAGS flags) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_InitActivation(SWIGTYPE_p_void.getCPtr(hStereoHandle), flags.swigValue()));
  }

  public static NvAPI_Status NvAPI_Stereo_Trigger_Activation(SWIGTYPE_p_void hStereoHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_Trigger_Activation(SWIGTYPE_p_void.getCPtr(hStereoHandle)));
  }

  public static NvAPI_Status NvAPI_Stereo_CapturePngImage(SWIGTYPE_p_void stereoHandle) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_CapturePngImage(SWIGTYPE_p_void.getCPtr(stereoHandle)));
  }

  public static NvAPI_Status NvAPI_Stereo_ReverseStereoBlitControl(SWIGTYPE_p_void hStereoHandle, short TurnOn) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_ReverseStereoBlitControl(SWIGTYPE_p_void.getCPtr(hStereoHandle), TurnOn));
  }

  public static NvAPI_Status NvAPI_Stereo_SetNotificationMessage(SWIGTYPE_p_void hStereoHandle, java.math.BigInteger hWnd, java.math.BigInteger messageID) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_Stereo_SetNotificationMessage(SWIGTYPE_p_void.getCPtr(hStereoHandle), hWnd, messageID));
  }

  public static NvAPI_Status NvAPI_DRS_CreateSession(SWIGTYPE_p_p_NvDRSSessionHandle__ phSession) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_CreateSession(SWIGTYPE_p_p_NvDRSSessionHandle__.getCPtr(phSession)));
  }

  public static NvAPI_Status NvAPI_DRS_DestroySession(NvDRSSessionHandle__ hSession) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_DestroySession(NvDRSSessionHandle__.getCPtr(hSession), hSession));
  }

  public static NvAPI_Status NvAPI_DRS_LoadSettings(NvDRSSessionHandle__ hSession) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_LoadSettings(NvDRSSessionHandle__.getCPtr(hSession), hSession));
  }

  public static NvAPI_Status NvAPI_DRS_SaveSettings(NvDRSSessionHandle__ hSession) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_SaveSettings(NvDRSSessionHandle__.getCPtr(hSession), hSession));
  }

  public static NvAPI_Status NvAPI_DRS_LoadSettingsFromFile(NvDRSSessionHandle__ hSession, int[] fileName) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_LoadSettingsFromFile(NvDRSSessionHandle__.getCPtr(hSession), hSession, fileName));
  }

  public static NvAPI_Status NvAPI_DRS_SaveSettingsToFile(NvDRSSessionHandle__ hSession, int[] fileName) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_SaveSettingsToFile(NvDRSSessionHandle__.getCPtr(hSession), hSession, fileName));
  }

  public static NvAPI_Status NvAPI_DRS_CreateProfile(NvDRSSessionHandle__ hSession, NVDRS_PROFILE pProfileInfo, SWIGTYPE_p_p_NvDRSProfileHandle__ phProfile) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_CreateProfile(NvDRSSessionHandle__.getCPtr(hSession), hSession, NVDRS_PROFILE.getCPtr(pProfileInfo), pProfileInfo, SWIGTYPE_p_p_NvDRSProfileHandle__.getCPtr(phProfile)));
  }

  public static NvAPI_Status NvAPI_DRS_DeleteProfile(NvDRSSessionHandle__ hSession, NvDRSProfileHandle__ hProfile) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_DeleteProfile(NvDRSSessionHandle__.getCPtr(hSession), hSession, NvDRSProfileHandle__.getCPtr(hProfile), hProfile));
  }

  public static NvAPI_Status NvAPI_DRS_SetCurrentGlobalProfile(NvDRSSessionHandle__ hSession, int[] wszGlobalProfileName) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_SetCurrentGlobalProfile(NvDRSSessionHandle__.getCPtr(hSession), hSession, wszGlobalProfileName));
  }

  public static NvAPI_Status NvAPI_DRS_GetCurrentGlobalProfile(NvDRSSessionHandle__ hSession, SWIGTYPE_p_p_NvDRSProfileHandle__ phProfile) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_GetCurrentGlobalProfile(NvDRSSessionHandle__.getCPtr(hSession), hSession, SWIGTYPE_p_p_NvDRSProfileHandle__.getCPtr(phProfile)));
  }

  public static NvAPI_Status NvAPI_DRS_GetProfileInfo(NvDRSSessionHandle__ hSession, NvDRSProfileHandle__ hProfile, NVDRS_PROFILE pProfileInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_GetProfileInfo(NvDRSSessionHandle__.getCPtr(hSession), hSession, NvDRSProfileHandle__.getCPtr(hProfile), hProfile, NVDRS_PROFILE.getCPtr(pProfileInfo), pProfileInfo));
  }

  public static NvAPI_Status NvAPI_DRS_SetProfileInfo(NvDRSSessionHandle__ hSession, NvDRSProfileHandle__ hProfile, NVDRS_PROFILE pProfileInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_SetProfileInfo(NvDRSSessionHandle__.getCPtr(hSession), hSession, NvDRSProfileHandle__.getCPtr(hProfile), hProfile, NVDRS_PROFILE.getCPtr(pProfileInfo), pProfileInfo));
  }

  public static NvAPI_Status NvAPI_DRS_FindProfileByName(NvDRSSessionHandle__ hSession, int[] profileName, SWIGTYPE_p_p_NvDRSProfileHandle__ phProfile) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_FindProfileByName(NvDRSSessionHandle__.getCPtr(hSession), hSession, profileName, SWIGTYPE_p_p_NvDRSProfileHandle__.getCPtr(phProfile)));
  }

  public static NvAPI_Status NvAPI_DRS_EnumProfiles(NvDRSSessionHandle__ hSession, long index, SWIGTYPE_p_p_NvDRSProfileHandle__ phProfile) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_EnumProfiles(NvDRSSessionHandle__.getCPtr(hSession), hSession, index, SWIGTYPE_p_p_NvDRSProfileHandle__.getCPtr(phProfile)));
  }

  public static NvAPI_Status NvAPI_DRS_GetNumProfiles(NvDRSSessionHandle__ hSession, SWIGTYPE_p_unsigned_long numProfiles) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_GetNumProfiles(NvDRSSessionHandle__.getCPtr(hSession), hSession, SWIGTYPE_p_unsigned_long.getCPtr(numProfiles)));
  }

  public static NvAPI_Status NvAPI_DRS_CreateApplication(NvDRSSessionHandle__ hSession, NvDRSProfileHandle__ hProfile, NVDRS_APPLICATION_V3 pApplication) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_CreateApplication(NvDRSSessionHandle__.getCPtr(hSession), hSession, NvDRSProfileHandle__.getCPtr(hProfile), hProfile, NVDRS_APPLICATION_V3.getCPtr(pApplication), pApplication));
  }

  public static NvAPI_Status NvAPI_DRS_DeleteApplicationEx(NvDRSSessionHandle__ hSession, NvDRSProfileHandle__ hProfile, NVDRS_APPLICATION_V3 pApp) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_DeleteApplicationEx(NvDRSSessionHandle__.getCPtr(hSession), hSession, NvDRSProfileHandle__.getCPtr(hProfile), hProfile, NVDRS_APPLICATION_V3.getCPtr(pApp), pApp));
  }

  public static NvAPI_Status NvAPI_DRS_DeleteApplication(NvDRSSessionHandle__ hSession, NvDRSProfileHandle__ hProfile, int[] appName) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_DeleteApplication(NvDRSSessionHandle__.getCPtr(hSession), hSession, NvDRSProfileHandle__.getCPtr(hProfile), hProfile, appName));
  }

  public static NvAPI_Status NvAPI_DRS_GetApplicationInfo(NvDRSSessionHandle__ hSession, NvDRSProfileHandle__ hProfile, int[] appName, NVDRS_APPLICATION_V3 pApplication) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_GetApplicationInfo(NvDRSSessionHandle__.getCPtr(hSession), hSession, NvDRSProfileHandle__.getCPtr(hProfile), hProfile, appName, NVDRS_APPLICATION_V3.getCPtr(pApplication), pApplication));
  }

  public static NvAPI_Status NvAPI_DRS_EnumApplications(NvDRSSessionHandle__ hSession, NvDRSProfileHandle__ hProfile, long startIndex, SWIGTYPE_p_unsigned_long appCount, NVDRS_APPLICATION_V3 pApplication) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_EnumApplications(NvDRSSessionHandle__.getCPtr(hSession), hSession, NvDRSProfileHandle__.getCPtr(hProfile), hProfile, startIndex, SWIGTYPE_p_unsigned_long.getCPtr(appCount), NVDRS_APPLICATION_V3.getCPtr(pApplication), pApplication));
  }

  public static NvAPI_Status NvAPI_DRS_FindApplicationByName(NvDRSSessionHandle__ hSession, int[] appName, SWIGTYPE_p_p_NvDRSProfileHandle__ phProfile, NVDRS_APPLICATION_V3 pApplication) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_FindApplicationByName(NvDRSSessionHandle__.getCPtr(hSession), hSession, appName, SWIGTYPE_p_p_NvDRSProfileHandle__.getCPtr(phProfile), NVDRS_APPLICATION_V3.getCPtr(pApplication), pApplication));
  }

  public static NvAPI_Status NvAPI_DRS_SetSetting(NvDRSSessionHandle__ hSession, NvDRSProfileHandle__ hProfile, NVDRS_SETTING pSetting) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_SetSetting(NvDRSSessionHandle__.getCPtr(hSession), hSession, NvDRSProfileHandle__.getCPtr(hProfile), hProfile, NVDRS_SETTING.getCPtr(pSetting), pSetting));
  }

  public static NvAPI_Status NvAPI_DRS_GetSetting(NvDRSSessionHandle__ hSession, NvDRSProfileHandle__ hProfile, long settingId, NVDRS_SETTING pSetting) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_GetSetting(NvDRSSessionHandle__.getCPtr(hSession), hSession, NvDRSProfileHandle__.getCPtr(hProfile), hProfile, settingId, NVDRS_SETTING.getCPtr(pSetting), pSetting));
  }

  public static NvAPI_Status NvAPI_DRS_EnumSettings(NvDRSSessionHandle__ hSession, NvDRSProfileHandle__ hProfile, long startIndex, SWIGTYPE_p_unsigned_long settingsCount, NVDRS_SETTING pSetting) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_EnumSettings(NvDRSSessionHandle__.getCPtr(hSession), hSession, NvDRSProfileHandle__.getCPtr(hProfile), hProfile, startIndex, SWIGTYPE_p_unsigned_long.getCPtr(settingsCount), NVDRS_SETTING.getCPtr(pSetting), pSetting));
  }

  public static NvAPI_Status NvAPI_DRS_EnumAvailableSettingIds(SWIGTYPE_p_unsigned_long pSettingIds, SWIGTYPE_p_unsigned_long pMaxCount) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_EnumAvailableSettingIds(SWIGTYPE_p_unsigned_long.getCPtr(pSettingIds), SWIGTYPE_p_unsigned_long.getCPtr(pMaxCount)));
  }

  public static NvAPI_Status NvAPI_DRS_EnumAvailableSettingValues(long settingId, SWIGTYPE_p_unsigned_long pMaxNumValues, NVDRS_SETTING_VALUES pSettingValues) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_EnumAvailableSettingValues(settingId, SWIGTYPE_p_unsigned_long.getCPtr(pMaxNumValues), NVDRS_SETTING_VALUES.getCPtr(pSettingValues), pSettingValues));
  }

  public static NvAPI_Status NvAPI_DRS_GetSettingIdFromName(int[] settingName, SWIGTYPE_p_unsigned_long pSettingId) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_GetSettingIdFromName(settingName, SWIGTYPE_p_unsigned_long.getCPtr(pSettingId)));
  }

  public static NvAPI_Status NvAPI_DRS_GetSettingNameFromId(long settingId, SWIGTYPE_p_a_2048__unsigned_short pSettingName) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_GetSettingNameFromId(settingId, SWIGTYPE_p_a_2048__unsigned_short.getCPtr(pSettingName)));
  }

  public static NvAPI_Status NvAPI_DRS_DeleteProfileSetting(NvDRSSessionHandle__ hSession, NvDRSProfileHandle__ hProfile, long settingId) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_DeleteProfileSetting(NvDRSSessionHandle__.getCPtr(hSession), hSession, NvDRSProfileHandle__.getCPtr(hProfile), hProfile, settingId));
  }

  public static NvAPI_Status NvAPI_DRS_RestoreAllDefaults(NvDRSSessionHandle__ hSession) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_RestoreAllDefaults(NvDRSSessionHandle__.getCPtr(hSession), hSession));
  }

  public static NvAPI_Status NvAPI_DRS_RestoreProfileDefault(NvDRSSessionHandle__ hSession, NvDRSProfileHandle__ hProfile) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_RestoreProfileDefault(NvDRSSessionHandle__.getCPtr(hSession), hSession, NvDRSProfileHandle__.getCPtr(hProfile), hProfile));
  }

  public static NvAPI_Status NvAPI_DRS_RestoreProfileDefaultSetting(NvDRSSessionHandle__ hSession, NvDRSProfileHandle__ hProfile, long settingId) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_RestoreProfileDefaultSetting(NvDRSSessionHandle__.getCPtr(hSession), hSession, NvDRSProfileHandle__.getCPtr(hProfile), hProfile, settingId));
  }

  public static NvAPI_Status NvAPI_DRS_GetBaseProfile(NvDRSSessionHandle__ hSession, SWIGTYPE_p_p_NvDRSProfileHandle__ phProfile) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_DRS_GetBaseProfile(NvDRSSessionHandle__.getCPtr(hSession), hSession, SWIGTYPE_p_p_NvDRSProfileHandle__.getCPtr(phProfile)));
  }

  public static NvAPI_Status NvAPI_SYS_GetChipSetInfo(NV_CHIPSET_INFO_v4 pChipSetInfo) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_SYS_GetChipSetInfo(NV_CHIPSET_INFO_v4.getCPtr(pChipSetInfo), pChipSetInfo));
  }

  public static NvAPI_Status NvAPI_SYS_GetLidAndDockInfo(NV_LID_DOCK_PARAMS pLidAndDock) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_SYS_GetLidAndDockInfo(NV_LID_DOCK_PARAMS.getCPtr(pLidAndDock), pLidAndDock));
  }

  public static NvAPI_Status NvAPI_SYS_GetDisplayIdFromGpuAndOutputId(NvPhysicalGpuHandle__ hPhysicalGpu, long outputId, SWIGTYPE_p_unsigned_long displayId) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_SYS_GetDisplayIdFromGpuAndOutputId(NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), hPhysicalGpu, outputId, SWIGTYPE_p_unsigned_long.getCPtr(displayId)));
  }

  public static NvAPI_Status NvAPI_SYS_GetGpuAndOutputIdFromDisplayId(long displayId, SWIGTYPE_p_p_NvPhysicalGpuHandle__ hPhysicalGpu, SWIGTYPE_p_unsigned_long outputId) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_SYS_GetGpuAndOutputIdFromDisplayId(displayId, SWIGTYPE_p_p_NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu), SWIGTYPE_p_unsigned_long.getCPtr(outputId)));
  }

  public static NvAPI_Status NvAPI_SYS_GetPhysicalGpuFromDisplayId(long displayId, SWIGTYPE_p_p_NvPhysicalGpuHandle__ hPhysicalGpu) {
    return NvAPI_Status.swigToEnum(jnvapiJNI.NvAPI_SYS_GetPhysicalGpuFromDisplayId(displayId, SWIGTYPE_p_p_NvPhysicalGpuHandle__.getCPtr(hPhysicalGpu)));
  }

}
