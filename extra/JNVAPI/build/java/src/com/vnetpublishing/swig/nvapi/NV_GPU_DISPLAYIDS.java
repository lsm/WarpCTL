/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.vnetpublishing.swig.nvapi;

public class NV_GPU_DISPLAYIDS {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected NV_GPU_DISPLAYIDS(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(NV_GPU_DISPLAYIDS obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jnvapiJNI.delete_NV_GPU_DISPLAYIDS(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setVersion(long value) {
    jnvapiJNI.NV_GPU_DISPLAYIDS_version_set(swigCPtr, this, value);
  }

  public long getVersion() {
    return jnvapiJNI.NV_GPU_DISPLAYIDS_version_get(swigCPtr, this);
  }

  public void setConnectorType(NV_MONITOR_CONN_TYPE value) {
    jnvapiJNI.NV_GPU_DISPLAYIDS_connectorType_set(swigCPtr, this, value.swigValue());
  }

  public NV_MONITOR_CONN_TYPE getConnectorType() {
    return NV_MONITOR_CONN_TYPE.swigToEnum(jnvapiJNI.NV_GPU_DISPLAYIDS_connectorType_get(swigCPtr, this));
  }

  public void setDisplayId(long value) {
    jnvapiJNI.NV_GPU_DISPLAYIDS_displayId_set(swigCPtr, this, value);
  }

  public long getDisplayId() {
    return jnvapiJNI.NV_GPU_DISPLAYIDS_displayId_get(swigCPtr, this);
  }

  public void setIsDynamic(long value) {
    jnvapiJNI.NV_GPU_DISPLAYIDS_isDynamic_set(swigCPtr, this, value);
  }

  public long getIsDynamic() {
    return jnvapiJNI.NV_GPU_DISPLAYIDS_isDynamic_get(swigCPtr, this);
  }

  public void setIsMultiStreamRootNode(long value) {
    jnvapiJNI.NV_GPU_DISPLAYIDS_isMultiStreamRootNode_set(swigCPtr, this, value);
  }

  public long getIsMultiStreamRootNode() {
    return jnvapiJNI.NV_GPU_DISPLAYIDS_isMultiStreamRootNode_get(swigCPtr, this);
  }

  public void setIsActive(long value) {
    jnvapiJNI.NV_GPU_DISPLAYIDS_isActive_set(swigCPtr, this, value);
  }

  public long getIsActive() {
    return jnvapiJNI.NV_GPU_DISPLAYIDS_isActive_get(swigCPtr, this);
  }

  public void setIsCluster(long value) {
    jnvapiJNI.NV_GPU_DISPLAYIDS_isCluster_set(swigCPtr, this, value);
  }

  public long getIsCluster() {
    return jnvapiJNI.NV_GPU_DISPLAYIDS_isCluster_get(swigCPtr, this);
  }

  public void setIsOSVisible(long value) {
    jnvapiJNI.NV_GPU_DISPLAYIDS_isOSVisible_set(swigCPtr, this, value);
  }

  public long getIsOSVisible() {
    return jnvapiJNI.NV_GPU_DISPLAYIDS_isOSVisible_get(swigCPtr, this);
  }

  public void setIsWFD(long value) {
    jnvapiJNI.NV_GPU_DISPLAYIDS_isWFD_set(swigCPtr, this, value);
  }

  public long getIsWFD() {
    return jnvapiJNI.NV_GPU_DISPLAYIDS_isWFD_get(swigCPtr, this);
  }

  public void setIsConnected(long value) {
    jnvapiJNI.NV_GPU_DISPLAYIDS_isConnected_set(swigCPtr, this, value);
  }

  public long getIsConnected() {
    return jnvapiJNI.NV_GPU_DISPLAYIDS_isConnected_get(swigCPtr, this);
  }

  public void setReserved(long value) {
    jnvapiJNI.NV_GPU_DISPLAYIDS_reserved_set(swigCPtr, this, value);
  }

  public long getReserved() {
    return jnvapiJNI.NV_GPU_DISPLAYIDS_reserved_get(swigCPtr, this);
  }

  public NV_GPU_DISPLAYIDS() {
    this(jnvapiJNI.new_NV_GPU_DISPLAYIDS(), true);
  }

}
